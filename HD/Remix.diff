diff -ruNp ./src.orig/config_unix.h.in ./src.rmx/config_unix.h.in
--- ./src.orig/config_unix.h.in	2017-02-25 17:11:38 -0600
+++ ./src.rmx/config_unix.h.in	2017-03-03 16:18:24 -0600
@@ -14,7 +14,7 @@
 #define CONTENTDIR "@CONTENTDIR@"
 
 /* Directory where game data will be stored */
-#define USERDIR "~/.uqmhd/"
+#define USERDIR "~/.uqmhdremix/"
 
 /* Directory where config files will be stored */
 #define CONFIGDIR USERDIR
diff -ruNp ./src.orig/config_vc6.h ./src.rmx/config_vc6.h
--- ./src.orig/config_vc6.h	2017-02-25 17:11:38 -0600
+++ ./src.rmx/config_vc6.h	2017-03-03 16:18:24 -0600
@@ -15,7 +15,7 @@
 
 /* Directory where game data will be stored */
 //#define USERDIR "../userdata/"
-#define USERDIR "%APPDATA%/uqmhd/"
+#define USERDIR "%APPDATA%/uqmhdremix/"
 
 /* Directory where config files will be stored */
 #define CONFIGDIR USERDIR
diff -ruNp ./src.orig/config_win.h.in ./src.rmx/config_win.h.in
--- ./src.orig/config_win.h.in	2017-02-25 17:11:38 -0600
+++ ./src.rmx/config_win.h.in	2017-03-03 16:18:24 -0600
@@ -15,7 +15,7 @@
 
 /* Directory where game data will be stored */
 //#define USERDIR "../userdata/"
-#define USERDIR "%APPDATA%/uqmhd/"
+#define USERDIR "%APPDATA%/uqmhdremix/"
 
 /* Directory where config files will be stored */
 #define CONFIGDIR USERDIR
diff -ruNp ./src.orig/libs/graphics/cmap.c ./src.rmx/libs/graphics/cmap.c
--- ./src.orig/libs/graphics/cmap.c	2017-02-25 17:11:39 -0600
+++ ./src.rmx/libs/graphics/cmap.c	2017-03-03 16:18:24 -0600
@@ -310,7 +310,6 @@ SetColorMap (COLORMAPPTR map)
 	}
 
 	UnlockMutex (maplock);
-
 	return TRUE;
 }
 
diff -ruNp ./src.orig/libs/graphics/gfx_common.h ./src.rmx/libs/graphics/gfx_common.h
--- ./src.orig/libs/graphics/gfx_common.h	2017-02-25 17:11:39 -0600
+++ ./src.rmx/libs/graphics/gfx_common.h	2017-03-03 16:18:24 -0600
@@ -67,7 +67,7 @@ extern int GfxFlags;
 
 // The following functions are driver-defined
 void TFB_PreInit (void);
-int TFB_InitGraphics (int driver, int flags, int width, int height, unsigned int resolutionFactor, BOOLEAN forceAspectRatio); // JMS_GFX: Added resolutionFactor
+int TFB_InitGraphics (int driver, int flags, int width, int height, unsigned int *resolutionFactor, BOOLEAN forceAspectRatio); // JMS_GFX: Added resolutionFactor - MB Updated
 int TFB_ReInitGraphics (int driver, int flags, int width, int height, unsigned int resolutionFactor, BOOLEAN forceAspectRatio); // JMS_GFX: Added resolutionFactor
 void TFB_UninitGraphics (void);
 void TFB_ProcessEvents (void);
diff -ruNp ./src.orig/libs/graphics/sdl/sdl_common.c ./src.rmx/libs/graphics/sdl/sdl_common.c
--- ./src.orig/libs/graphics/sdl/sdl_common.c	2017-02-25 17:11:39 -0600
+++ ./src.rmx/libs/graphics/sdl/sdl_common.c	2017-03-03 16:18:24 -0600
@@ -129,7 +129,7 @@ TFB_ReInitGraphics (int driver, int flag
 }
 
 int
-TFB_InitGraphics (int driver, int flags, int width, int height, unsigned int resolutionFactor, BOOLEAN forceAspectRatio) // JMS_GFX: added resolutionFactor
+TFB_InitGraphics (int driver, int flags, int width, int height, unsigned int *resolutionFactor, BOOLEAN forceAspectRatio) // JMS_GFX: added resolutionFactor - MB: added ability for function to change res_factor
 {
 	int result, i;
 	char caption[200];
@@ -141,52 +141,69 @@ TFB_InitGraphics (int driver, int flags,
 	}
 
 	GfxFlags = flags;
-	
+
 	// JMS_GFX: Let's read the size of the desktop so we can scale the
 	// fullscreen game according to it.
 	SDL_screen_info = SDL_GetVideoInfo ();
-	
+
 	// JMS_GFX: Upon starting the game, let's find out the resolution
 	// of the desktop.
 	if (fs_height == 0)
 	{
 		int curr_h = SDL_screen_info->current_h;
 		int curr_w = SDL_screen_info->current_w;
-		
+
 		// JMS_GFX: This makes it sure on certain HD 16:9 monitors
 		// that a bogus stretched 1600x1200 mode isn't used.
-		if (curr_w == 1920 && curr_h == 1080)
+		// MB: Note to JMS from Matt - it also makes sure that not all 4:3 monitors work. 
+		if ((curr_w == 1920 && curr_h == 1080) || (curr_h == (curr_w / 16) * 10)) // MB: fix for 16:10 resolutions
 		{
 			fs_height = curr_h;
 			fs_width  = curr_w;
 		}
+		else if (curr_h > (curr_w / 4) * 3) // MB: for monitors using 5:4 modes
+		{
+			fs_width = curr_w;
+			fs_height = (curr_w / 4) * 3;
+		}
 		else
 		{
 			fs_height = curr_h;
-			fs_width  = 4 * fs_height / 3;
+			fs_width  = (4 * fs_height) / 3;
+		}
+
+
+		// MB: Sanitising resolution factor:
+		if (fs_height <= 600 && *resolutionFactor == 2) // ie. probably netbook or otherwise
+		{
+			*resolutionFactor = 1; // drop down to 640x480. netbook won't be able to handle anything higher and quality difference is minimal
 		}
-		
+		else if (fs_height <= 300 && *resolutionFactor > 0) // People who like pixels I guess
+		{
+			*resolutionFactor = 0; // drop down to 320x240
+		}
+
 		log_add (log_Debug, "fs_height %u, fs_width %u, current_w %u", fs_height, fs_width, SDL_screen_info->current_w);
 	}
 
 	if (driver == TFB_GFXDRIVER_SDL_OPENGL)
 	{
 #ifdef HAVE_OPENGL
-		result = TFB_GL_InitGraphics (driver, flags, width, height, resolutionFactor, forceAspectRatio); // JMS_GFX: added resolutionFactor
+		result = TFB_GL_InitGraphics (driver, flags, width, height, *resolutionFactor, forceAspectRatio); // JMS_GFX: added resolutionFactor
 #else
 		driver = TFB_GFXDRIVER_SDL_PURE;
 		log_add (log_Warning, "OpenGL support not compiled in,"
 				" so using pure SDL driver");
-		result = TFB_Pure_InitGraphics (driver, flags, width, height, resolutionFactor); // JMS_GFX: added resolutionFactor
+		result = TFB_Pure_InitGraphics (driver, flags, width, height, *resolutionFactor); // JMS_GFX: added resolutionFactor
 #endif
 	}
 	else
 	{
-		result = TFB_Pure_InitGraphics (driver, flags, width, height, resolutionFactor);  // JMS_GFX: added resolutionFactor
+		result = TFB_Pure_InitGraphics (driver, flags, width, height, *resolutionFactor);  // JMS_GFX: added resolutionFactor
 	}
 
-	sprintf (caption, "The Ur-Quan Masters v%d.%d.%d%s", 
-			UQM_MAJOR_VERSION, UQM_MINOR_VERSION, 
+	sprintf (caption, "The Ur-Quan Masters v%d.%d.%d%s",
+			UQM_MAJOR_VERSION, UQM_MINOR_VERSION,
 			UQM_PATCH_VERSION, UQM_EXTRA_VERSION);
 	SDL_WM_SetCaption (caption, NULL);
 
diff -ruNp ./src.orig/libs/graphics/widgets.c ./src.rmx/libs/graphics/widgets.c
--- ./src.orig/libs/graphics/widgets.c	2017-02-25 17:11:39 -0600
+++ ./src.rmx/libs/graphics/widgets.c	2017-03-03 16:18:24 -0600
@@ -30,7 +30,7 @@ WIDGET *widget_focus = NULL;
 #define WIDGET_ACTIVE_COLOR \
 		BUILD_COLOR (MAKE_RGB15 (0x1F, 0x1F, 0x00), 0x0E)
 #define WIDGET_INACTIVE_COLOR \
-		BUILD_COLOR (MAKE_RGB15 (0x18, 0x18, 0x1F), 0x00)
+		BUILD_COLOR (MAKE_RGB15 (0x13, 0x13, 0x19), 0x00)
 #define WIDGET_INACTIVE_SELECTED_COLOR \
 		BUILD_COLOR (MAKE_RGB15 (0x1F, 0x1F, 0x1F), 0x0F)
 #define WIDGET_CURSOR_COLOR \
diff -ruNp ./src.orig/libs/uio/types.h ./src.rmx/libs/uio/types.h
--- ./src.orig/libs/uio/types.h	2017-02-25 17:11:41 -0600
+++ ./src.rmx/libs/uio/types.h	2017-03-03 16:18:26 -0600
@@ -39,7 +39,7 @@
 #undef false
 #undef true
 #ifndef HAVE__BOOL
-typedef unsigned char _Bool;
+//typedef unsigned char _Bool;
 #endif  /* HAVE_BOOL */
 #define bool _Bool
 #define true 1
diff -ruNp ./src.orig/libs/video/vidplayer.c ./src.rmx/libs/video/vidplayer.c
--- ./src.orig/libs/video/vidplayer.c	2017-02-25 17:11:41 -0600
+++ ./src.rmx/libs/video/vidplayer.c	2017-03-03 16:18:26 -0600
@@ -232,14 +232,21 @@ TFB_PlayVideo (VIDEO_REF vid, uint32 x,
 
 	// calculate the frame-source and screen-destination rects
 	GetContextClipRect (&scrn_r);
+
 	if (!BoxIntersect(&scrn_r, &vid_r, &scrn_r))
 		return false; // drawing outside visible
 
 	sr = dr;
-	sr.corner.x = -sr.corner.x;
-	sr.corner.y = -sr.corner.y;
-	if (!BoxIntersect (&clip_r, &sr, &sr))
-		return false; // drawing outside visible
+    
+    // JMS_GFX: Added this if-clause around the following lines to make the
+    // 3DO videos work also in 1280x960. They're still small though.
+    if (resolutionFactor < 2)
+    {
+        sr.corner.x = -sr.corner.x;
+        sr.corner.y = -sr.corner.y;
+        if (!BoxIntersect (&clip_r, &sr, &sr))
+            return false; // drawing outside visible
+    }
 
 	dr.corner.x += scrn_r.corner.x;
 	dr.corner.y += scrn_r.corner.y;
diff -ruNp ./src.orig/options.c ./src.rmx/options.c
--- ./src.orig/options.c	2017-02-25 17:11:41 -0600
+++ ./src.rmx/options.c	2017-03-03 16:18:26 -0600
@@ -58,7 +58,7 @@ const char **optAddons;
 unsigned int loresBlowupScale;
 unsigned int resolutionFactor;
 BOOLEAN forceAspectRatio;
-BOOLEAN resFactorWasChanged;
+BOOLEAN optionChangeRequiresRestart;
 
 // JMS
 BOOLEAN optMainmenuMusic;
@@ -430,9 +430,12 @@ mountAddonDir (uio_Repository *repositor
 				count == 1 ? "" : "s");
 
 		count = 0;
+
+		// MB to JMS: no need to manually terminate string, snprintf does it for you. Moving mountname outside of loop.
+		char mountname[128];
+
 		for (i = 0; i < availableAddons->numNames; ++i)
 		{
-			static char mountname[128];
 			uio_DirHandle *addonDir;
 			const char *addon = availableAddons->names[i];
 			
@@ -442,8 +445,7 @@ mountAddonDir (uio_Repository *repositor
 			++count;
 			log_add (log_Info, "    %d. %s", count, addon);
 		
-			snprintf(mountname, 128, "addons/%s", addon);
-			mountname[127]=0;
+			snprintf (mountname, sizeof mountname, "addons/%s", addon);
 
 			addonDir = uio_openDirRelative (addonsDir, addon, 0);
 			if (addonDir == NULL)
diff -ruNp ./src.orig/options.h ./src.rmx/options.h
--- ./src.orig/options.h	2017-02-25 17:11:41 -0600
+++ ./src.rmx/options.h	2017-03-03 16:18:26 -0600
@@ -45,7 +45,7 @@ extern int optMeleeScale;
 extern unsigned int loresBlowupScale;
 extern unsigned int resolutionFactor;
 extern BOOLEAN forceAspectRatio;
-extern BOOLEAN resFactorWasChanged;
+extern BOOLEAN optionChangeRequiresRestart;
 
 // JMS
 extern BOOLEAN optMainmenuMusic;
diff -ruNp ./src.orig/regex/regex_internal.h ./src.rmx/regex/regex_internal.h
--- ./src.orig/regex/regex_internal.h	2017-02-25 17:11:41 -0600
+++ ./src.rmx/regex/regex_internal.h	2017-03-03 16:18:26 -0600
@@ -80,7 +80,11 @@
 # define BE(expr, val) __builtin_expect (expr, val)
 #else
 # define BE(expr, val) (expr)
-# define inline
+#ifdef _MSC_VER
+	#define inline __inline
+#else
+	#define inline
+#endif
 #endif
 
 /* Number of bits in a byte.  */
diff -ruNp ./src.orig/svnversion.h ./src.rmx/svnversion.h
--- ./src.orig/svnversion.h	2017-02-25 17:11:41 -0600
+++ ./src.rmx/svnversion.h	2017-03-03 16:18:27 -0600
@@ -1 +1 @@
-#define UQMHD_SVN_REVISION "1347M"
+#define UQMHD_SVN_REVISION "1498:1501M"
diff -ruNp ./src.orig/symbian/uqm.cfg ./src.rmx/symbian/uqm.cfg
--- ./src.orig/symbian/uqm.cfg	2017-02-25 17:11:41 -0600
+++ ./src.rmx/symbian/uqm.cfg	2017-03-03 16:18:27 -0600
@@ -11,16 +11,16 @@ iconicscan = BOOLEAN:false
 resheight = INT32:240
 scaler = STRING:no
 3domovies = BOOLEAN:false
-speechvol = INT32:20
-audioquality = STRING:low
+speechvol = INT32:95
+audioquality = STRING:high
 positionalsfx = BOOLEAN:false
 player1control = INT32:0
 showfps = BOOLEAN:false
-pulseshield = BOOLEAN:false
+pulseshield = BOOLEAN:true
 smoothmelee = BOOLEAN:false
-fullscreen = BOOLEAN:false
+fullscreen = BOOLEAN:true
 smoothscroll = BOOLEAN:false
 audiodriver = STRING:mixsdl
 player2control = INT32:3
 scanlines = BOOLEAN:false
-remixmusic = BOOLEAN:false
+remixmusic = BOOLEAN:true
diff -ruNp ./src.orig/types.h ./src.rmx/types.h
--- ./src.orig/types.h	2017-02-25 17:11:42 -0600
+++ ./src.rmx/types.h	2017-03-03 16:18:27 -0600
@@ -96,7 +96,7 @@
 #undef bool
 #undef false
 #undef true
-#ifndef HAVE__BOOL
+#if !defined(HAVE__BOOL) && !(defined(_MSC_VER) && _MSC_VER >= 1600) // MB: update to work on MSVC 2013 and higher, which already has this defined
 typedef unsigned char _Bool;
 #endif  /* HAVE_BOOL */
 #define bool _Bool
diff -ruNp ./src.orig/uqm/comm/arilou/arilouc.c ./src.rmx/uqm/comm/arilou/arilouc.c
--- ./src.orig/uqm/comm/arilou/arilouc.c	2017-02-25 17:11:42 -0600
+++ ./src.rmx/uqm/comm/arilou/arilouc.c	2017-03-03 16:18:27 -0600
@@ -492,17 +492,29 @@ AngryHomeArilou (RESPONSE_REF R)
 	}
 
 	if (PHRASE_ENABLED (invaders_from_mars))
+    {
 		Response (invaders_from_mars, AngryHomeArilou);
+    }
 	else
 	{
 		Response (bug_eyed_fruitcakes, ExitConversation);
 	}
+    
 	if (PHRASE_ENABLED (why_should_i_trust))
+    {
 		Response (why_should_i_trust, AngryHomeArilou);
-	else if (PHRASE_ENABLED (what_about_interference))
+	}
+    else if (PHRASE_ENABLED (what_about_interference))
+    {
 		Response (what_about_interference, AngryHomeArilou);
+    }
+    
 	Response (ok_lets_be_friends, ArilouHome);
-	Response (i_just_like_to_leave, AngryHomeArilou);
+    
+    if (PHRASE_ENABLED (i_just_like_to_leave))
+    {
+        Response (i_just_like_to_leave, AngryHomeArilou);
+    }
 }
 
 static void
diff -ruNp ./src.orig/uqm/comm/rebel/rebel.c ./src.rmx/uqm/comm/rebel/rebel.c
--- ./src.orig/uqm/comm/rebel/rebel.c	2017-02-25 17:11:42 -0600
+++ ./src.rmx/uqm/comm/rebel/rebel.c	2017-03-03 16:18:27 -0600
@@ -22,8 +22,7 @@
 
 #include "uqm/build.h"
 
-
-static LOCDATA yehat_desc =
+static LOCDATA yehat_desc_1x =
 {
 	YEHAT_REBEL_CONVERSATION, /* AlienConv */
 	NULL, /* init_encounter_func */
@@ -48,18 +47,18 @@ static LOCDATA yehat_desc =
 			4, /* StartIndex */
 			3, /* NumFrames */
 			YOYO_ANIM
-					| WAIT_TALKING, /* AnimFlags */
+            | WAIT_TALKING, /* AnimFlags */
 			ONE_SECOND / 10, ONE_SECOND / 10, /* FrameRate */
-			ONE_SECOND, ONE_SECOND * 3, /* RestartRate */
+			ONE_SECOND / 4, ONE_SECOND / 2,/* RestartRate */
 			(1 << 6) | (1 << 7),
 		},
 		{ /* left hand-wing tapping keyboard; front guy */
 			7, /* StartIndex */
 			3, /* NumFrames */
 			YOYO_ANIM
-					| WAIT_TALKING, /* AnimFlags */
+            | WAIT_TALKING, /* AnimFlags */
 			ONE_SECOND / 10, ONE_SECOND / 10, /* FrameRate */
-			ONE_SECOND, ONE_SECOND * 3, /* RestartRate */
+			ONE_SECOND / 4, ONE_SECOND / 2,/* RestartRate */
 			(1 << 6) | (1 << 7),
 		},
 		{
@@ -83,7 +82,7 @@ static LOCDATA yehat_desc =
 			5, /* NumFrames */
 			YOYO_ANIM, /* AnimFlags */
 			ONE_SECOND / 15, ONE_SECOND / 15, /* FrameRate */
-			ONE_SECOND * 10, ONE_SECOND * 3,/* RestartRate */
+			ONE_SECOND * 6, ONE_SECOND * 3,/* RestartRate */
 			(1 << 2) | (1 << 14),
 		},
 		{
@@ -91,25 +90,23 @@ static LOCDATA yehat_desc =
 			5, /* NumFrames */
 			YOYO_ANIM, /* AnimFlags */
 			ONE_SECOND / 15, ONE_SECOND / 15, /* FrameRate */
-			ONE_SECOND * 10, ONE_SECOND * 3,/* RestartRate */
+			ONE_SECOND * 6, ONE_SECOND * 3,/* RestartRate */
 			(1 << 3),
 		},
 		{ /* right arm-wing rising; front guy */
 			26, /* StartIndex */
 			2, /* NumFrames */
-			YOYO_ANIM
-					| WAIT_TALKING, /* AnimFlags */
+			YOYO_ANIM | WAIT_TALKING, /* AnimFlags */
 			ONE_SECOND / 15, ONE_SECOND / 15, /* FrameRate */
-			ONE_SECOND * 10, ONE_SECOND * 3,/* RestartRate */
+			ONE_SECOND * 6, ONE_SECOND * 3,/* RestartRate */
 			(1 << 0) | (1 << 1),
 		},
 		{ /* left arm-wing rising; front guy */
 			28, /* StartIndex */
 			2, /* NumFrames */
-			YOYO_ANIM
-					| WAIT_TALKING, /* AnimFlags */
+			YOYO_ANIM | WAIT_TALKING, /* AnimFlags */
 			ONE_SECOND / 15, ONE_SECOND / 15, /* FrameRate */
-			ONE_SECOND * 10, ONE_SECOND * 3,/* RestartRate */
+			ONE_SECOND * 6, ONE_SECOND * 3,/* RestartRate */
 			(1 << 0) | (1 << 1),
 		},
 		{
@@ -163,8 +160,7 @@ static LOCDATA yehat_desc =
 		{
 			48, /* StartIndex */
 			4, /* NumFrames */
-			YOYO_ANIM
-					| WAIT_TALKING, /* AnimFlags */
+			YOYO_ANIM | WAIT_TALKING, /* AnimFlags */
 			ONE_SECOND / 30, 0, /* FrameRate */
 			ONE_SECOND, ONE_SECOND * 3, /* RestartRate */
 			(1 << 2) | (1 << 4),
@@ -193,6 +189,309 @@ static LOCDATA yehat_desc =
 	NULL,
 };
 
+
+static LOCDATA yehat_desc_2x =
+{
+	YEHAT_REBEL_CONVERSATION, /* AlienConv */
+	NULL, /* init_encounter_func */
+	NULL, /* post_encounter_func */
+	NULL, /* uninit_encounter_func */
+	YEHAT_PMAP_ANIM, /* AlienFrame */
+	YEHAT_FONT, /* AlienFont */
+	WHITE_COLOR_INIT, /* AlienTextFColor */
+	BLACK_COLOR_INIT, /* AlienTextBColor */
+	{0, 0}, /* AlienTextBaseline */
+	0, /* (SIS_TEXT_WIDTH - 16) * 2 / 3, */ /* AlienTextWidth */
+	ALIGN_CENTER, /* AlienTextAlign */
+	VALIGN_MIDDLE, /* AlienTextValign */
+	YEHAT_COLOR_MAP, /* AlienColorMap */
+	YEHAT_MUSIC, /* AlienSong */
+	NULL_RESOURCE, /* AlienAltSong */
+	0, /* AlienSongFlags */
+	REBEL_CONVERSATION_PHRASES, /* PlayerPhrases */
+	13, /* NumAnimations */
+	{ /* AlienAmbientArray (ambient animations) */
+		{ /* right hand-wing tapping keyboard; front guy */
+			4, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM
+			| WAIT_TALKING, /* AnimFlags */
+			ONE_SECOND / 10, ONE_SECOND / 10, /* FrameRate */
+			ONE_SECOND / 4, ONE_SECOND / 2,/* RestartRate */
+			0,
+		},
+		{ /* left hand-wing tapping keyboard; front guy */
+			7, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM
+			| WAIT_TALKING, /* AnimFlags */
+			ONE_SECOND / 10, ONE_SECOND / 10, /* FrameRate */
+			ONE_SECOND / 4, ONE_SECOND / 2,/* RestartRate */
+			0,
+		},
+		{
+			10, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 20, 0, /* FrameRate */
+			ONE_SECOND, ONE_SECOND * 3, /* RestartRate */
+			(1 << 5) | (1 << 12),
+		},
+		{
+			13, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 20, 0, /* FrameRate */
+			ONE_SECOND, ONE_SECOND * 3, /* RestartRate */
+			(1 << 5),
+		},
+		{
+			16, /* StartIndex */
+			5, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 15, ONE_SECOND / 15, /* FrameRate */
+			ONE_SECOND * 6, ONE_SECOND * 3,/* RestartRate */
+			0,
+		},
+		{
+			21, /* StartIndex */
+			5, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 15, ONE_SECOND / 15, /* FrameRate */
+			ONE_SECOND * 6, ONE_SECOND * 3,/* RestartRate */
+			(1 << 2) | (1 << 3) | (1 << 12),
+		},
+		{
+			26, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* FrameRate */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* RestartRate */
+			0, /* BlockMask */
+		},
+		{
+			29, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* FrameRate */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* RestartRate */
+			0, /* BlockMask */
+		},
+		{
+			32, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* FrameRate */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* RestartRate */
+			0, /* BlockMask */
+		},
+		{
+			35, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* FrameRate */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* RestartRate */
+			0, /* BlockMask */
+		},
+		{
+			38, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* FrameRate */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* RestartRate */
+			0, /* BlockMask */
+		},
+		{
+			41, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* FrameRate */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* RestartRate */
+			0, /* BlockMask */
+		},
+		{
+			44, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM | WAIT_TALKING, /* AnimFlags */
+			ONE_SECOND / 30, 0, /* FrameRate */
+			ONE_SECOND, ONE_SECOND * 3, /* RestartRate */
+			(1 << 2) | (1 << 5),
+		},
+	},
+	{ /* AlienTransitionDesc - empty */
+		0, /* StartIndex */
+		0, /* NumFrames */
+		0, /* AnimFlags */
+		0, 0, /* FrameRate */
+		0, 0, /* RestartRate */
+		0, /* BlockMask */
+	},
+	{ /* AlienTalkDesc */
+		1, /* StartIndex */
+		3, /* NumFrames */
+		0, /* AnimFlags */
+		ONE_SECOND / 15, 0, /* FrameRate */
+		ONE_SECOND / 12, 0, /* RestartRate */
+		0, /* BlockMask */
+	},
+	NULL, /* AlienNumberSpeech - none */
+	/* Filler for loaded resources */
+	NULL, NULL, NULL,
+	NULL,
+	NULL,
+};
+
+static LOCDATA yehat_desc_4x =
+{
+	YEHAT_REBEL_CONVERSATION, /* AlienConv */
+	NULL, /* init_encounter_func */
+	NULL, /* post_encounter_func */
+	NULL, /* uninit_encounter_func */
+	YEHAT_PMAP_ANIM, /* AlienFrame */
+	YEHAT_FONT, /* AlienFont */
+	WHITE_COLOR_INIT, /* AlienTextFColor */
+	BLACK_COLOR_INIT, /* AlienTextBColor */
+	{0, 0}, /* AlienTextBaseline */
+	0, /* (SIS_TEXT_WIDTH - 16) * 2 / 3, */ /* AlienTextWidth */
+	ALIGN_CENTER, /* AlienTextAlign */
+	VALIGN_MIDDLE, /* AlienTextValign */
+	YEHAT_COLOR_MAP, /* AlienColorMap */
+	YEHAT_MUSIC, /* AlienSong */
+	NULL_RESOURCE, /* AlienAltSong */
+	0, /* AlienSongFlags */
+	REBEL_CONVERSATION_PHRASES, /* PlayerPhrases */
+	13, /* NumAnimations */
+	{ /* AlienAmbientArray (ambient animations) */
+		{ /* right hand-wing tapping keyboard; front guy */
+			4, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM
+			| WAIT_TALKING, /* AnimFlags */
+			ONE_SECOND / 10, ONE_SECOND / 10, /* FrameRate */
+			ONE_SECOND / 4, ONE_SECOND / 2,/* RestartRate */
+			0,
+		},
+		{ /* left hand-wing tapping keyboard; front guy */
+			7, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM
+			| WAIT_TALKING, /* AnimFlags */
+			ONE_SECOND / 10, ONE_SECOND / 10, /* FrameRate */
+			ONE_SECOND / 4, ONE_SECOND / 2,/* RestartRate */
+			0,
+		},
+		{
+			10, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 20, 0, /* FrameRate */
+			ONE_SECOND, ONE_SECOND * 3, /* RestartRate */
+			(1 << 5) | (1 << 12),
+		},
+		{
+			13, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 20, 0, /* FrameRate */
+			ONE_SECOND, ONE_SECOND * 3, /* RestartRate */
+			(1 << 5),
+		},
+		{
+			16, /* StartIndex */
+			5, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 15, ONE_SECOND / 15, /* FrameRate */
+			ONE_SECOND * 6, ONE_SECOND * 3,/* RestartRate */
+			0,
+		},
+		{
+			21, /* StartIndex */
+			5, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 15, ONE_SECOND / 15, /* FrameRate */
+			ONE_SECOND * 6, ONE_SECOND * 3,/* RestartRate */
+			(1 << 2) | (1 << 3) | (1 << 12),
+		},
+		{
+			26, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* FrameRate */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* RestartRate */
+			0, /* BlockMask */
+		},
+		{
+			29, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* FrameRate */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* RestartRate */
+			0, /* BlockMask */
+		},
+		{
+			32, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* FrameRate */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* RestartRate */
+			0, /* BlockMask */
+		},
+		{
+			35, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* FrameRate */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* RestartRate */
+			0, /* BlockMask */
+		},
+		{
+			38, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* FrameRate */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* RestartRate */
+			0, /* BlockMask */
+		},
+		{
+			41, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM, /* AnimFlags */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* FrameRate */
+			ONE_SECOND / 30, ONE_SECOND / 30, /* RestartRate */
+			0, /* BlockMask */
+		},
+		{
+			44, /* StartIndex */
+			3, /* NumFrames */
+			YOYO_ANIM | WAIT_TALKING, /* AnimFlags */
+			ONE_SECOND / 30, 0, /* FrameRate */
+			ONE_SECOND, ONE_SECOND * 3, /* RestartRate */
+			(1 << 2) | (1 << 5),
+		},
+	},
+	{ /* AlienTransitionDesc - empty */
+		0, /* StartIndex */
+		0, /* NumFrames */
+		0, /* AnimFlags */
+		0, 0, /* FrameRate */
+		0, 0, /* RestartRate */
+		0, /* BlockMask */
+	},
+	{ /* AlienTalkDesc */
+		1, /* StartIndex */
+		3, /* NumFrames */
+		0, /* AnimFlags */
+		ONE_SECOND / 15, 0, /* FrameRate */
+		ONE_SECOND / 12, 0, /* RestartRate */
+		0, /* BlockMask */
+	},
+	NULL, /* AlienNumberSpeech - none */
+	/* Filler for loaded resources */
+	NULL, NULL, NULL,
+	NULL,
+	NULL,
+};
+
 static void
 PrepareShip (void)
 {
@@ -430,7 +729,22 @@ post_yehat_enc (void)
 LOCDATA*
 init_rebel_yehat_comm (void)
 {
+    static LOCDATA yehat_desc;
 	LOCDATA *retval;
+	
+	switch (RESOLUTION_FACTOR)
+	{
+		case 2:
+			yehat_desc = yehat_desc_4x;
+			break;
+		case 1:
+			yehat_desc = yehat_desc_2x;
+			break;
+		case 0:
+		default:
+			yehat_desc = yehat_desc_1x;
+			break;
+	}
 
 	yehat_desc.init_encounter_func = Intro;
 	yehat_desc.post_encounter_func = post_yehat_enc;
diff -ruNp ./src.orig/uqm/comm/starbas/starbas.c ./src.rmx/uqm/comm/starbas/starbas.c
--- ./src.orig/uqm/comm/starbas/starbas.c	2017-02-25 17:11:42 -0600
+++ ./src.rmx/uqm/comm/starbas/starbas.c	2017-03-03 16:18:27 -0600
@@ -421,6 +421,7 @@ HierarchyInfo (RESPONSE_REF R)
 #define HIERARCHY_ANDROSYNTH (1 << 3)
 #define HIERARCHY_ILWRATH (1 << 4)
 #define HIERARCHY_VUX (1 << 5)
+#define HIERARCHY_URQUAN (1 << 6)
 	static BYTE HierarchyMask = 0;
 
 	if (PLAYER_SAID (R, what_about_hierarchy))
@@ -458,7 +459,14 @@ HierarchyInfo (RESPONSE_REF R)
 		NPCPhrase (ABOUT_VUX);
 		HierarchyMask |= HIERARCHY_VUX;
 	}
+    else if (PLAYER_SAID (R, urquan))
+    {
+        NPCPhrase (ABOUT_URQUAN);
+        HierarchyMask |= HIERARCHY_URQUAN;
+    }
 
+    if (!(HierarchyMask & HIERARCHY_URQUAN))
+        Response (urquan, HierarchyInfo);
 	if (!(HierarchyMask & HIERARCHY_MYCON))
 		Response (mycon, HierarchyInfo);
 	if (!(HierarchyMask & HIERARCHY_SPATHI))
diff -ruNp ./src.orig/uqm/comm/syreen/syreenc.c ./src.rmx/uqm/comm/syreen/syreenc.c
--- ./src.orig/uqm/comm/syreen/syreenc.c	2017-02-25 17:11:42 -0600
+++ ./src.rmx/uqm/comm/syreen/syreenc.c	2017-03-03 16:18:27 -0600
@@ -889,8 +889,8 @@ InitialSyreen (RESPONSE_REF R)
 			NPCPhrase (GLOBAL_PLAYER_NAME);
 			NPCPhrase (WELCOME_VINDICATOR1);
 			NPCPhrase (GLOBAL_SHIP_NAME);
-			NPCPhrase (WELCOME_VINDICATOR2);
 		}
+        NPCPhrase (WELCOME_VINDICATOR2);
 		NPCPhrase (HOW_CAN_YOU_BE_HERE);
 	}
 	else if (PLAYER_SAID (R, we_are_impressed))
diff -ruNp ./src.orig/uqm/comm/umgah/strings.h ./src.rmx/uqm/comm/umgah/strings.h
--- ./src.orig/uqm/comm/umgah/strings.h	2017-02-25 17:11:42 -0600
+++ ./src.rmx/uqm/comm/umgah/strings.h	2017-03-03 16:18:27 -0600
@@ -109,6 +109,7 @@ enum
 	arilou_told_us,
 	bye_zombie,
 	GOODBYE_ZOMBIE,
+	OUT_TAKES,
 };
 
 #endif /* _STRINGS_H */
diff -ruNp ./src.orig/uqm/comm/umgah/umgahc.c ./src.rmx/uqm/comm/umgah/umgahc.c
--- ./src.orig/uqm/comm/umgah/umgahc.c	2017-02-25 17:11:42 -0600
+++ ./src.rmx/uqm/comm/umgah/umgahc.c	2017-03-03 16:18:27 -0600
@@ -521,7 +521,14 @@ Intro (void)
 {
 	BYTE NumVisits;
 
-	if (GET_GAME_STATE (UMGAH_HOSTILE))
+    if (LOBYTE (GLOBAL (CurrentActivity)) == WON_LAST_BATTLE)
+	{
+		NPCPhrase (OUT_TAKES);
+        
+		SET_GAME_STATE (BATTLE_SEGUE, 0);
+		return;
+	}
+	else if (GET_GAME_STATE (UMGAH_HOSTILE))
 	{
 		NumVisits = GET_GAME_STATE (UMGAH_VISITS);
 		switch (NumVisits++)
diff -ruNp ./src.orig/uqm/comm.c ./src.rmx/uqm/comm.c
--- ./src.orig/uqm/comm.c	2017-02-25 17:11:42 -0600
+++ ./src.rmx/uqm/comm.c	2017-03-03 16:18:28 -0600
@@ -264,7 +264,7 @@ add_text (int status, TEXT *pTextIn)
 		if (maxchars != 0)
 			--maxchars;
 		numchars += pText->CharCount;
-		
+
 		if (status <= 0)
 		{
 			// Player dialog option or (status == -4) other non-alien
@@ -361,7 +361,7 @@ add_text (int status, TEXT *pTextIn)
 						
 						font_DrawTracedText (pText,
 								     CommData.AlienTextFColor, CommData.AlienTextBColor);
-						
+
 						pText->baseline.x += rect.extent.width;
 						
 						if (*ptr == '$')
@@ -573,11 +573,12 @@ RefreshResponses (ENCOUNTER_STATE *pES)
 	UnbatchGraphics ();
 }
 
+
 static void
 FeedbackPlayerPhrase (UNICODE *pStr)
 {
 	SetContext (SpaceContext);
-	
+
 	BatchGraphics ();
 	DrawSISComWindow ();
 	if (pStr[0])
@@ -590,6 +591,7 @@ FeedbackPlayerPhrase (UNICODE *pStr)
 		ct.CharCount = (COUNT)~0;
 
 		ct.pStr = GAME_STRING (FEEDBACK_STRING_BASE);
+
 				// "(In response to your statement)"
 		SetContextForeGroundColor (COMM_RESPONSE_INTRO_TEXT_COLOR);
 		font_DrawText (&ct);
@@ -915,12 +917,29 @@ typedef struct summary_state
 
 } SUMMARY_STATE;
 
+
+// MB: Hack for removing '$' characters from Orz dialogue when viewing summary conversation - Used by DoConvSummary below
+static void
+remove_char_from_string(UNICODE* str, const UNICODE c)
+{
+    UNICODE *pr = str, *pw = str;
+
+    while (*pr)
+	{
+        *pw = *pr++;
+        pw += (*pw != c);
+    }
+
+    *pw = '\0';
+}
+
+
 static BOOLEAN
 DoConvSummary (SUMMARY_STATE *pSS)
 {
 #define DELTA_Y_SUMMARY (8 << RESOLUTION_FACTOR) // JMS_GFX
 	//#define MAX_SUMM_ROWS ((SIS_SCREEN_HEIGHT - SLIDER_Y - SLIDER_HEIGHT) / DELTA_Y_SUMMARY
-#define MAX_SUMM_ROWS (SLIDER_Y	/ DELTA_Y_SUMMARY) - (1 << RESOLUTION_FACTOR) // JMS_GFX
+#define MAX_SUMM_ROWS (SLIDER_Y	/ DELTA_Y_SUMMARY) - 1 // JMS_GFX
 
 	if (!pSS->Initialized)
 	{
@@ -990,11 +1009,22 @@ DoConvSummary (SUMMARY_STATE *pSS)
 			}
 
 			t.CharCount = (COUNT)~0;
-			for ( ; row < MAX_SUMM_ROWS &&
-					!getLineWithinWidth (&t, &next, r.extent.width, (COUNT)~0);
-					++row)
+
+			for ( ; row < MAX_SUMM_ROWS && !getLineWithinWidth (&t, &next, r.extent.width, (COUNT)~0); ++row)
 			{
-				font_DrawText (&t);
+				if (CommData.AlienConv == ORZ_CONVERSATION) // MB: nasty hack: remove '$'s from conversation for Orz
+				{
+					UNICODE my_copy[80];
+					strcpy(my_copy, t.pStr);
+					remove_char_from_string(my_copy, '$');
+					t.pStr = my_copy;
+					font_DrawText(&t);
+				}
+				else // Normal mode
+				{
+					font_DrawText(&t);
+				}
+
 				t.baseline.y += DELTA_Y_SUMMARY;
 				t.pStr = next;
 				t.CharCount = (COUNT)~0;
@@ -1006,9 +1036,21 @@ DoConvSummary (SUMMARY_STATE *pSS)
 				pSS->LeftOver = next;
 				break;
 			}
-		
+
 			// this subtitle fit completely
-			font_DrawText (&t);
+			if (CommData.AlienConv == ORZ_CONVERSATION) // MB: nasty hack: remove '$'s from conversation for Orz
+			{
+				UNICODE my_copy[80];
+				strcpy(my_copy, t.pStr);
+				remove_char_from_string(my_copy, '$');
+				t.pStr = my_copy;
+				font_DrawText(&t);
+			}
+			else // Normal mode
+			{
+				font_DrawText(&t);
+			}
+
 			t.baseline.y += DELTA_Y_SUMMARY;
 		}
 
@@ -1023,9 +1065,17 @@ DoConvSummary (SUMMARY_STATE *pSS)
 			snprintf (buffer, sizeof (buffer), "%s%s%s", // "MORE"
 					STR_MIDDLE_DOT, GAME_STRING (FEEDBACK_STRING_BASE + 1),
 					STR_MIDDLE_DOT);
+
+			if (CommData.AlienConv == ORZ_CONVERSATION) // MB: nasty hack: remove '$'s from conversation for Orz
+			{
+				remove_char_from_string(buffer, '$');
+			}
+
 			mt.pStr = buffer;
 			SetContextForeGroundColor (COMM_MORE_TEXT_COLOR);
-			font_DrawText (&mt);
+
+
+			font_DrawText(&mt);
 		}
 
 		UnlockMutex (GraphicsLock);
@@ -1068,7 +1118,7 @@ static void
 SelectConversationSummary (ENCOUNTER_STATE *pES)
 {
 	SUMMARY_STATE SummaryState;
-	
+
 	LockMutex (GraphicsLock);
 	if (pES)
 		FeedbackPlayerPhrase (pES->phrase_buf);
diff -ruNp ./src.orig/uqm/credits.c ./src.rmx/uqm/credits.c
--- ./src.orig/uqm/credits.c	2017-02-25 17:11:42 -0600
+++ ./src.rmx/uqm/credits.c	2017-03-03 16:18:28 -0600
@@ -34,10 +34,10 @@
 #include <math.h>
 
 // Rates in pixel lines per second
-#define CREDITS_BASE_RATE   (20 << RESOLUTION_FACTOR) // JMS_GFX
-#define CREDITS_MAX_RATE    (130 << RESOLUTION_FACTOR) // JMS_GFX
+#define CREDITS_BASE_RATE   (05 << RESOLUTION_FACTOR) // JMS_GFX - MB: tamed
+#define CREDITS_MAX_RATE    (35 << RESOLUTION_FACTOR) // JMS_GFX - MB: tamed
 // Maximum frame rate
-#define CREDITS_FRAME_RATE  (RES_CASE(36,54,72)) // JMS_GFX
+#define CREDITS_FRAME_RATE  (RES_CASE(26,32,36)) // JMS_GFX
 
 #define CREDITS_TIMEOUT   (ONE_SECOND * 5)
 
@@ -651,7 +651,7 @@ FreeCredits (void)
 static void
 OutTakes (void)
 {
-#define NUM_OUTTAKES 15
+#define NUM_OUTTAKES 16
 	static CONVERSATION outtake_list[NUM_OUTTAKES] =
 	{
 		ZOQFOTPIK_CONVERSATION,
@@ -668,6 +668,7 @@ OutTakes (void)
 		URQUAN_CONVERSATION,
 		VUX_CONVERSATION,
 		BLACKURQ_CONVERSATION,
+        UMGAH_CONVERSATION,
 		ARILOU_CONVERSATION
 	};
 
diff -ruNp ./src.orig/uqm/encount.c ./src.rmx/uqm/encount.c
--- ./src.orig/uqm/encount.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/encount.c	2017-03-03 16:18:28 -0600
@@ -759,6 +759,19 @@ UninitEncounter (void)
 									Time = GetTimeCounter ();
 								}
 							}
+                            if (RESOLUTION_FACTOR > 0)
+                            {
+                                SetContextForeGroundColor (BLACK_COLOR);
+                                DrawFilledStamp (&ship_s);
+                                DrawFilledStamp (&ship_s);
+                                DrawFilledStamp (&ship_s);
+                                DrawFilledStamp (&ship_s);
+                                DrawFilledStamp (&ship_s);
+                                DrawFilledStamp (&ship_s);
+                                DrawFilledStamp (&ship_s);
+                                DrawFilledStamp (&ship_s);
+                                DrawFilledStamp (&ship_s);
+                            }
 							DrawStamp (&ship_s);
 						}
 					}
diff -ruNp ./src.orig/uqm/gameinp.c ./src.rmx/uqm/gameinp.c
--- ./src.orig/uqm/gameinp.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/gameinp.c	2017-03-03 16:18:28 -0600
@@ -32,9 +32,9 @@
 #include "libs/timelib.h"
 #include "libs/threadlib.h"
 
-
-#define ACCELERATION_INCREMENT (ONE_SECOND / 12)
-#define MENU_REPEAT_DELAY (ONE_SECOND / 2)
+// MB: Updated menu delay values so it no longer takes an age to (a) fill up your fuel tanks (b) fill up your crew (c) search through your saved games.
+#define ACCELERATION_INCREMENT (ONE_SECOND / 28)
+#define MENU_REPEAT_DELAY (ONE_SECOND / 3)
 
 
 typedef struct
diff -ruNp ./src.orig/uqm/hyper.c ./src.rmx/uqm/hyper.c
--- ./src.orig/uqm/hyper.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/hyper.c	2017-03-03 16:18:28 -0600
@@ -47,6 +47,8 @@
 #define YOFFS ((RADAR_SCAN_HEIGHT + (UNIT_SCREEN_HEIGHT << 2)) >> 1)
 
 static FRAME npcbubble;			// BW: animated bubble
+static FRAME quasiportal;       // JMS: animated quasispace portal in hyperspace
+static FRAME quasiworld;        // JMS: Arilou homeworld in quasispace
 static FRAME hyperholes[3];		// BW: One for each flavour of space
 static FRAME hyperstars[4];
 static COLORMAP hypercmaps[2];
@@ -297,6 +299,10 @@ FreeHyperData (void)
 		// hyperspacesuns = 0;
 		DestroyDrawable (ReleaseDrawable (npcbubble));
 		npcbubble = 0;
+        DestroyDrawable (ReleaseDrawable (quasiportal));
+		quasiportal = 0;
+        DestroyDrawable (ReleaseDrawable (quasiworld));
+		quasiworld = 0;
 	}
 	
 	DestroyDrawable (ReleaseDrawable (hyperstars[0]));
@@ -328,7 +334,9 @@ LoadHyperData (void)
 			hyperstars[3] = CaptureDrawable (
 				LoadGraphic (ARI_AMBIENT_MASK_PMAP_ANIM));
 		}
-		npcbubble = CaptureDrawable (LoadGraphic (NPCBUBBLE_MASK_PMAP_ANIM));
+		npcbubble   = CaptureDrawable (LoadGraphic (NPCBUBBLE_MASK_PMAP_ANIM));
+        quasiportal = CaptureDrawable (LoadGraphic (QUASIPORTAL_MASK_PMAP_ANIM));
+        quasiworld  = CaptureDrawable (LoadGraphic (QUASIWORLD_MASK_PMAP_ANIM));
 	}
 	
 	if (hyperstars[0] == 0)
@@ -340,7 +348,7 @@ LoadHyperData (void)
 		hyperstars[2] = CaptureDrawable (
 				LoadGraphic (ARISPACE_MASK_PMAP_ANIM));
 
-		hypercmaps[0] = CaptureColorMap (LoadColorMap (HYPER_COLOR_TAB));		
+		hypercmaps[0] = CaptureColorMap (LoadColorMap (HYPER_COLOR_TAB));
 		hypercmaps[1] = CaptureColorMap (LoadColorMap (ARISPACE_COLOR_TAB));
 	}
 }
@@ -1468,6 +1476,7 @@ ProcessEncounters (POINT *puniverse, COO
 
 #define NUM_HOLES_FRAMES 32 // BW
 #define NUM_SUNS_FRAMES 32 // BW
+#define NUM_QUASIPORTAL_IN_HS_FRAMES 30 // JMS
 
 void
 SeedUniverse (void)
@@ -1581,7 +1590,7 @@ SeedUniverse (void)
 			++i;
 		}
 
-		// Process the i portals from SD.
+		// Process the i quasispace portals from SD.
 		do
 		{
 			--i;
@@ -1615,9 +1624,33 @@ SeedUniverse (void)
 				continue;
 
 			LockElement (hHyperSpaceElement, &HyperSpaceElementPtr);
-			HyperSpaceElementPtr->current.image.frame = SetAbsFrameIndex (
+            
+            if (RESOLUTION_FACTOR == 0
+                || (SD[i].Index < 22 && arilouSpaceSide <= 1)
+                || (SD[i].Index < 4 && arilouSpaceSide > 1))
+            {
+                // The QS portal is still growing (Or when playing in 1x resolution).
+                HyperSpaceElementPtr->current.image.frame = SetAbsFrameIndex (
 					hyperstars[1 + (GET_GAME_STATE (ARILOU_SPACE_SIDE) >> 1)],
 					SD[i].Index);
+            }
+            else if (arilouSpaceSide > 1)
+            {
+                // QS. The QS portal has done its growing animation: in 2x and 4x res switch to the full-size anim.
+                HyperSpaceElementPtr->current.image.frame =
+                    SetAbsFrameIndex (quasiportal, frameCounter % NUM_HOLES_FRAMES);
+                HyperSpaceElementPtr->current.image.farray = &hyperholes[2];
+                
+            }
+            else
+            {
+                // HS. The QS portal has done its growing animation: in 2x and 4x res switch to the full-size anim.
+                HyperSpaceElementPtr->current.image.frame =
+                    SetAbsFrameIndex (quasiportal, frameCounter % NUM_QUASIPORTAL_IN_HS_FRAMES);
+                HyperSpaceElementPtr->current.image.farray = &quasiportal;
+                
+            }
+            
 			HyperSpaceElementPtr->preprocess_func = NULL;
 			HyperSpaceElementPtr->postprocess_func = NULL;
 			HyperSpaceElementPtr->collision_func = arilou_space_collision;
@@ -1699,7 +1732,7 @@ SeedUniverse (void)
 				{
 					hHyperSpaceElement = AllocHyperElement (SDPtr);
 					if (hHyperSpaceElement == 0)
-					continue;
+                        continue;
 				
 					LockElement (hHyperSpaceElement, &HyperSpaceElementPtr);
 				
@@ -1714,34 +1747,23 @@ SeedUniverse (void)
 						+ frameCounter % NUM_SUNS_FRAMES);
 					
 						HyperSpaceElementPtr->current.image.farray = &hyperspacesuns;
-						HyperSpaceElementPtr->death_func = NULL;
 					}
-					// JMS_GFX: Draw Arilou homeworld in quasispace.
 					else if ((GET_GAME_STATE (ARILOU_SPACE_SIDE) > 1) && STAR_COLOR (star_type) == YELLOW_BODY)
 					{
-						HyperSpaceElementPtr->current.image.frame = 
-						SetAbsFrameIndex (hyperstars[2], 5);
-					
-						HyperSpaceElementPtr->current.image.farray = &hyperstars[2];
-						HyperSpaceElementPtr->death_func = hyper_death;
+                        // JMS_GFX: Draw Arilou homeworld in quasispace.
+                        HyperSpaceElementPtr->current.image.frame = SetAbsFrameIndex (hyperstars[2], 6);
+                        HyperSpaceElementPtr->current.image.farray = &hyperstars[2];
 					}
-				
+                    
+                    HyperSpaceElementPtr->death_func = NULL;
 					HyperSpaceElementPtr->preprocess_func = NULL;
 					HyperSpaceElementPtr->postprocess_func = NULL;
 					HyperSpaceElementPtr->collision_func = hyper_collision;
 				
 					SetUpElement (HyperSpaceElementPtr);
-				
-					HyperSpaceElementPtr->IntersectControl.IntersectStamp.frame = DecFrameIndex (stars_in_space);
-				
+                    HyperSpaceElementPtr->IntersectControl.IntersectStamp.frame = DecFrameIndex (stars_in_space);
 					UnlockElement (hHyperSpaceElement);
-				
 					InsertElement (hHyperSpaceElement, GetHeadElement ());
-				
-					// JMS_GFX: Don't draw hole for arilou homeworld - it already has a nice planet gfx.
-					if ((GET_GAME_STATE (ARILOU_SPACE_SIDE) > 1) && STAR_COLOR (star_type) == YELLOW_BODY)
-						continue;
-				
 				}
 				
 				// BW: and then the animated hyperspace portal
@@ -1777,16 +1799,26 @@ SeedUniverse (void)
 					HyperSpaceElementPtr->current.image.frame,
 					frameCounter % NUM_HOLES_FRAMES);
 				
-				HyperSpaceElementPtr->current.image.farray = &hyperholes[which_spaces_star_gfx];
+                if ((GET_GAME_STATE (ARILOU_SPACE_SIDE) > 1) && STAR_COLOR (star_type) == YELLOW_BODY)
+                {
+                    HyperSpaceElementPtr->current.image.farray = &quasiworld;
+                }
+                else
+                {
+                    HyperSpaceElementPtr->current.image.farray = &hyperholes[which_spaces_star_gfx];
+                }
+                
 				HyperSpaceElementPtr->preprocess_func = NULL;
 				HyperSpaceElementPtr->postprocess_func = NULL;
 				HyperSpaceElementPtr->collision_func = hyper_collision;
 				
 				SetUpElement (HyperSpaceElementPtr);
 				
-				if (SDPtr == CurStarDescPtr
-					&& GET_GAME_STATE (PORTAL_COUNTER) == 0)
+				if ((SDPtr == CurStarDescPtr && GET_GAME_STATE (PORTAL_COUNTER) == 0)
+                    ||  ((GET_GAME_STATE (ARILOU_SPACE_SIDE) > 1) && STAR_COLOR (star_type) == YELLOW_BODY))
+                {
 					HyperSpaceElementPtr->death_func = hyper_death;
+                }
 				else
 				{
 					HyperSpaceElementPtr->death_func = NULL;
diff -ruNp ./src.orig/uqm/igfxres.h ./src.rmx/uqm/igfxres.h
--- ./src.orig/uqm/igfxres.h	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/igfxres.h	2017-03-03 16:18:28 -0600
@@ -23,6 +23,9 @@
 #define CONSTELLATIONS_MASK_PMAP_ANIM "graphics.constellations"
 #define CANNISTER_MASK_PMAP_ANIM "graphics.lifecan"
 #define CREDITS_BACK_ANIM "credits.background"
+#define CREW_BIG_MASK_PMAP_ANIM "graphics.crew.large"
+#define CREW_MED_MASK_PMAP_ANIM "graphics.crew.medium"
+#define CREW_SML_MASK_PMAP_ANIM "graphics.crew.small"
 #define EARTH_MASK_ANIM "graphics.earthmask"
 #define EGG_CASE_MASK_PMAP_ANIM "graphics.eggcase"
 #define EUROPA_MASK_ANIM "graphics.europamask"
@@ -33,6 +36,9 @@
 #define HYPERSTARS_MASK_PMAP_ANIM "graphics.hyperstars"
 #define HYPERSUNS_MASK_PMAP_ANIM "graphics.hypersuns"
 #define IO_MASK_ANIM "graphics.iomask"
+#define IONS_BIG_MASK_PMAP_ANIM "graphics.ions.large"
+#define IONS_MED_MASK_PMAP_ANIM "graphics.ions.medium"
+#define IONS_SML_MASK_PMAP_ANIM "graphics.ions.small"
 #define IPBKGND_MASK_PMAP_ANIM "graphics.orbitbackground"
 #define IP_CALLISTO_MASK_ANIM "graphics.ipcallistomask"
 #define IP_EARTH_MASK_ANIM "graphics.ipearthmask"
@@ -283,6 +289,8 @@
 #define PLAYMENU_ANIM "graphics.playmenu"
 #define PLUTO_MASK_ANIM "graphics.plutomask"
 #define QUAKE_MASK_PMAP_ANIM "graphics.quake"
+#define QUASIPORTAL_MASK_PMAP_ANIM "graphics.quasiportal"
+#define QUASIWORLD_MASK_PMAP_ANIM "graphics.quasiworld"
 #define RESTART_PMAP_ANIM "graphics.newgame"
 #define RESTART_PMAP_ANIM2x "graphics.newgame2x"
 #define RESTART_PMAP_ANIM4x "graphics.newgame4x"
diff -ruNp ./src.orig/uqm/init.c ./src.rmx/uqm/init.c
--- ./src.orig/uqm/init.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/init.c	2017-03-03 16:18:28 -0600
@@ -38,6 +38,8 @@
 
 FRAME stars_in_space;
 FRAME stars_in_quasispace; // JMS_GFX
+FRAME crew_dots[NUM_VIEWS]; // JMS_GFX
+FRAME ion_trails[NUM_VIEWS]; // JMS_GFX
 FRAME asteroid[NUM_VIEWS];
 FRAME blast[NUM_VIEWS];
 FRAME explosion[NUM_VIEWS];
@@ -121,6 +123,20 @@ InitSpace (void)
 				LoadGraphic (STAR_MASK_PMAP_ANIM));
 		if (stars_in_space == NULL)
 			return FALSE;
+        
+        // JMS_GFX
+        if (!load_animation (crew_dots,
+                             CREW_BIG_MASK_PMAP_ANIM,
+                             CREW_MED_MASK_PMAP_ANIM,
+                             CREW_SML_MASK_PMAP_ANIM))
+            return FALSE;
+        
+        // JMS_GFX
+        if (!load_animation (ion_trails,
+                            IONS_BIG_MASK_PMAP_ANIM,
+                            IONS_MED_MASK_PMAP_ANIM,
+                            IONS_SML_MASK_PMAP_ANIM))
+            return FALSE;
 
 		if (!load_animation (explosion,
 				BOOM_BIG_MASK_PMAP_ANIM,
@@ -153,6 +169,10 @@ UninitSpace (void)
 		free_image (explosion);
 		free_image (asteroid);
 
+        // JMS_GFX
+        free_image (crew_dots);
+        free_image (ion_trails);
+        
 		DestroyDrawable (ReleaseDrawable (stars_in_space));
 		stars_in_space = 0;
 	}
diff -ruNp ./src.orig/uqm/init.h ./src.rmx/uqm/init.h
--- ./src.orig/uqm/init.h	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/init.h	2017-03-03 16:18:28 -0600
@@ -19,12 +19,15 @@
 
 #include "libs/gfxlib.h"
 #include "libs/reslib.h"
+#include "units.h"
 
 #define NUM_PLAYERS 2
 #define NUM_SIDES 2
 
 extern FRAME stars_in_space;
 extern FRAME stars_in_quasispace; // JMS_GFX
+extern FRAME crew_dots[NUM_VIEWS]; // JMS_GFX
+extern FRAME ion_trails[NUM_VIEWS]; // JMS_GFX
 
 extern BOOLEAN InitSpace (void);
 extern void UninitSpace (void);
diff -ruNp ./src.orig/uqm/misc.c ./src.rmx/uqm/misc.c
--- ./src.orig/uqm/misc.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/misc.c	2017-03-03 16:18:28 -0600
@@ -342,7 +342,7 @@ AbandonShip (ELEMENT *ShipPtr, ELEMENT *
 		dx = dy = 0;
 	else
 	{
-#define MORE_THAN_ENOUGH 100
+#define MORE_THAN_ENOUGH (100 << RESOLUTION_FACTOR) // JMS_GFX
 		direction += HALF_CIRCLE;
 		dx = COSINE (direction, MORE_THAN_ENOUGH);
 		dy = SINE (direction, MORE_THAN_ENOUGH);
@@ -361,11 +361,21 @@ AbandonShip (ELEMENT *ShipPtr, ELEMENT *
 		CrewPtr->hit_points = 1;
 		CrewPtr->state_flags = APPEARING | FINITE_LIFE | CREW_OBJECT;
 		CrewPtr->life_span = CREW_LIFE;
-		SetPrimType (&DisplayArray[CrewPtr->PrimIndex], POINT_PRIM);
-		SetPrimColor (&DisplayArray[CrewPtr->PrimIndex],
+
+		if (RESOLUTION_FACTOR == 0) {
+            SetPrimType (&DisplayArray[CrewPtr->PrimIndex], POINT_PRIM);
+            CrewPtr->current.image.frame = DecFrameIndex (stars_in_space);
+            CrewPtr->current.image.farray = &stars_in_space;
+        }
+        else {
+            SetPrimType (&DisplayArray[CrewPtr->PrimIndex], STAMPFILL_PRIM);
+            CrewPtr->current.image.frame = SetAbsFrameIndex (crew_dots[0], 0);
+            CrewPtr->current.image.farray = crew_dots;
+        }
+        
+        SetPrimColor (&DisplayArray[CrewPtr->PrimIndex],
 				BUILD_COLOR (MAKE_RGB15 (0x00, 0x14, 0x00), 0x02));
-		CrewPtr->current.image.frame = DecFrameIndex (stars_in_space);
-		CrewPtr->current.image.farray = &stars_in_space;
+
 		CrewPtr->preprocess_func = crew_preprocess;
 		CrewPtr->collision_func = crew_collision;
 
diff -ruNp ./src.orig/uqm/planets/lander.c ./src.rmx/uqm/planets/lander.c
--- ./src.orig/uqm/planets/lander.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/planets/lander.c	2017-03-03 16:18:28 -0600
@@ -585,9 +585,8 @@ pickupMineralNode (PLANETSIDE_DESC *pPSD
 	BYTE EType;
 	UNICODE ch;
 	UNICODE *pStr;
-	
-	// JMS: The rest of partially scavenged minerals stay on the surface.
-	bool partialPickup = false;
+
+	// MB: partial-pickup code removed
 
 	if (pPSD->ElementLevel >= pPSD->MaxElementLevel)
 	{
@@ -599,48 +598,8 @@ pickupMineralNode (PLANETSIDE_DESC *pPSD
 
 	if (pPSD->ElementLevel + NumRetrieved > pPSD->MaxElementLevel)
 	{
-		SIZE which_node;
-		COUNT oldsize = ElementPtr->mass_points;
-		
 		// Deposit could only be picked up partially.
 		NumRetrieved = (COUNT)(pPSD->MaxElementLevel - pPSD->ElementLevel);
-		
-		// JMS: Subtract the scavenged kilotons from the mineral deposit.
-		// The rest will stay on the surface.
-		ElementPtr->mass_points -= NumRetrieved;
-		
-		// JMS: This makes the mineral deposit subtraction keep  
-		// in effect even after leaving & re-entering the planet.
-		which_node = HIBYTE (ElementPtr->scan_node) - 1;
-		pSolarSysState->SysInfo.PlanetInfo.PartiallyScavengedList[MINERAL_SCAN][which_node] = NumRetrieved;
-		
-		// JMS: If the deposit was large and its amount now equates to a smaller
-		// deposit, change its graphics.
-		if ((oldsize > 22 && ElementPtr->mass_points <= 22)
-			|| (oldsize > 15 && ElementPtr->mass_points <= 15))
-		{
-			PRIMITIVE *pPrim = &DisplayArray[ElementPtr->PrimIndex];
-			BYTE gfx_index_change = 0;
-			
-			if (oldsize > 22 && ElementPtr->mass_points <= 15)
-				gfx_index_change = 2;
-			else
-				gfx_index_change = 1;
-			
-			// Change the scan screen gfx.
-			ElementPtr->current.image.frame = SetRelFrameIndex (
-				ElementPtr->current.image.frame, (2 - gfx_index_change));
-			ElementPtr->next.image.frame = ElementPtr->current.image.frame;
-
-			// Notify the engine that the scan screen gfx should be updated.
-			ElementPtr->state_flags |= CHANGING;
-			SET_GAME_STATE (PLANETARY_CHANGE, 1);
-			
-			// Change the surface screen gfx.
-			pPrim->Object.Stamp.frame = SetRelFrameIndex (pPrim->Object.Stamp.frame, -gfx_index_change);
-		}
-		
-		partialPickup = true;
 	}
 
 	FillLanderHold (pPSD, MINERAL_SCAN, NumRetrieved);
@@ -653,9 +612,9 @@ pickupMineralNode (PLANETSIDE_DESC *pPSD
 	pStr = GAME_STRING (EType + ELEMENTS_STRING_BASE);
 
 	pPSD->MineralText[0].baseline.x = (SURFACE_WIDTH >> 1)
-			+ ((ElementControl->EndPoint.x - LanderControl->EndPoint.x) << RESOLUTION_FACTOR); // JMS_GFX
+			+ (ElementControl->EndPoint.x - LanderControl->EndPoint.x);
 	pPSD->MineralText[0].baseline.y = (SURFACE_HEIGHT >> 1)
-			+ ((ElementControl->EndPoint.y - LanderControl->EndPoint.y) << RESOLUTION_FACTOR); // JMS_GFX
+            + (ElementControl->EndPoint.y - LanderControl->EndPoint.y);
 	pPSD->MineralText[0].CharCount = (COUNT)~0;
 	pPSD->MineralText[1].pStr = pStr;
 
@@ -676,20 +635,17 @@ pickupMineralNode (PLANETSIDE_DESC *pPSD
 		pPSD->MineralText[2].CharCount = (COUNT)~0;
 	}
 
-	// JMS
-	if (partialPickup)
-		return false;
-	else
-		return true;
+	return true;
 }
 
+
 static bool
 pickupBioNode (PLANETSIDE_DESC *pPSD, COUNT NumRetrieved,
 	const INTERSECT_CONTROL *LanderControl, const INTERSECT_CONTROL *ElementControl)
 {
 	UNICODE *pStr; // JMS
 	UNICODE ch; // JMS
-	
+
 	if (pPSD->BiologicalLevel >= MAX_SCROUNGED)
 	{
 		// Lander is full.
@@ -709,9 +665,9 @@ pickupBioNode (PLANETSIDE_DESC *pPSD, CO
 	sprintf (pPSD->AmountBuf, "%u", NumRetrieved);
 	pStr = GAME_STRING (ELEMENTS_STRING_BASE + ELEMENTS_STRING_COUNT - 1);
 	pPSD->MineralText[0].baseline.x = (SURFACE_WIDTH >> 1)
-		+ ((ElementControl->EndPoint.x - LanderControl->EndPoint.x) << RESOLUTION_FACTOR); // JMS_GFX
+		+ (ElementControl->EndPoint.x - LanderControl->EndPoint.x);
 	pPSD->MineralText[0].baseline.y = (SURFACE_HEIGHT >> 1)
-		+ ((ElementControl->EndPoint.y - LanderControl->EndPoint.y) << RESOLUTION_FACTOR); // JMS_GFX
+		+ (ElementControl->EndPoint.y - LanderControl->EndPoint.y);
 	pPSD->MineralText[0].CharCount = (COUNT)~0;
 	pPSD->MineralText[1].pStr = pStr;
 	
@@ -818,8 +774,8 @@ shotCreature (ELEMENT *ElementPtr, BYTE
 				LanderControl->IntersectStamp.frame) -
 				ANGLE_TO_FACING (FULL_CIRCLE));
 		DeltaVelocityComponents (&ElementPtr->velocity,
-				COSINE (angle, WORLD_TO_VELOCITY (1)),
-				SINE (angle, WORLD_TO_VELOCITY (1)));
+				COSINE (angle, WORLD_TO_VELOCITY (1<<RESOLUTION_FACTOR)),
+				SINE (angle, WORLD_TO_VELOCITY (1<<RESOLUTION_FACTOR))); // JMS_GFX
 		ElementPtr->thrust_wait = 0;
 		ElementPtr->mass_points |= CREATURE_AWARE;
 	}
diff -ruNp ./src.orig/uqm/planets/pstarmap.c ./src.rmx/uqm/planets/pstarmap.c
--- ./src.orig/uqm/planets/pstarmap.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/planets/pstarmap.c	2017-03-03 16:18:29 -0600
@@ -916,7 +916,7 @@ UpdateCursorLocation (int sx, int sy, co
 
 // JMS: How close to a star the cursor has to be to 'snap' into it.
 // Don't make this larger than 1 for lo-res(1x). Otherwise the cursor gets stuck on stars.
-#define CURSOR_SNAP_AREA (RES_CASE(0,3,6))
+#define CURSOR_SNAP_AREA (RES_CASE(0,1,2)) // MB: Fixed cursor snap area so that trying to autopilot to sol no longer selects sirius all the damn time unless you zoom in.
 
 static void
 UpdateCursorInfo (UNICODE *prevbuf)
@@ -1509,9 +1509,10 @@ DoStarSearch (MENU_STATE *pMS)
 static BOOLEAN
 DoMoveCursor (MENU_STATE *pMS)
 {
-#define MIN_ACCEL_DELAY (ONE_SECOND / 60)
-#define MAX_ACCEL_DELAY (ONE_SECOND / 8)
-#define STEP_ACCEL_DELAY (ONE_SECOND / 120)
+// MB: correcting previously-unusable acceleration values
+#define MIN_ACCEL_DELAY (ONE_SECOND / 50)
+#define MAX_ACCEL_DELAY (ONE_SECOND / 13)
+#define STEP_ACCEL_DELAY (ONE_SECOND / 180)
 	static UNICODE last_buf[CURSOR_INFO_BUFSIZE];
 	DWORD TimeIn = GetTimeCounter ();
 	static COUNT moveRepeats;
diff -ruNp ./src.orig/uqm/planets/report.c ./src.rmx/uqm/planets/report.c
--- ./src.orig/uqm/planets/report.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/planets/report.c	2017-03-03 16:18:29 -0600
@@ -75,8 +75,8 @@ ClearReportArea (void)
 	SetContextForeGroundColor (
 			BUILD_COLOR (MAKE_RGB15 (0x00, 0x07, 0x00), 0x57));
 	
-	startx = 1 + (r.extent.width >> 1) - 1 - 4 * RESOLUTION_FACTOR;  // JMS_GFX
-	s.origin.y = 1;
+	startx = 1 + (r.extent.width >> 1) - 1 - (4 * RESOLUTION_FACTOR) + RES_CASE(0,0,8);  // JMS_GFX
+	s.origin.y = 1 + RES_CASE(0,0,9);
 	for (y = 0; y < emptyrows; ++y)
 	{
 		s.origin.x = startx;
diff -ruNp ./src.orig/uqm/planets/solarsys.c ./src.rmx/uqm/planets/solarsys.c
--- ./src.orig/uqm/planets/solarsys.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/planets/solarsys.c	2017-03-03 16:18:29 -0600
@@ -225,7 +225,8 @@ playerInInnerSystem (void)
 	return pSolarSysState->pBaseDesc != pSolarSysState->PlanetDesc;
 }
 
-void GenerateTexturedMoons (SOLARSYS_STATE *system, PLANET_DESC *planet)
+void
+GenerateTexturedMoons (SOLARSYS_STATE *system, PLANET_DESC *planet)
 {
 	COUNT i;
 	FRAME SurfFrame;
@@ -1953,6 +1954,7 @@ DrawInnerSystem (void)
 	if (ORBITING_PLANETS || ROTATING_PLANETS)
 		DrawInnerPlanets(pSolarSysState->pOrbitalDesc);
 	DrawSISTitle (GLOBAL_SIS (PlanetName));
+	IP_frame(); // MB: To fix planet texture and sun corona 'pop-in'
 }
 
 static void
@@ -1963,6 +1965,7 @@ DrawOuterSystem (void)
 	if (ORBITING_PLANETS || ROTATING_PLANETS)
 		DrawOuterPlanets(pSolarSysState->SunDesc[0].radius);
 	DrawHyperCoords (CurStarDescPtr->star_pt);
+	IP_frame(); // MB: To fix planet texture and sun corona 'pop-in'
 }
 
 static void
@@ -2192,6 +2195,7 @@ InitSolarSys (void)
 			LastActivity &= ~CHECK_LOAD;
 		}
 		
+		IP_frame(); // MB: To fix planet texture and sun corona 'pop-in'
 		UnlockMutex (GraphicsLock);
 	}
 }
@@ -2342,6 +2346,7 @@ DrawSystem (SIZE radius, BOOLEAN IsInner
 	s.origin.y = 0;
 	s.frame = SolarSysFrame;
 	DrawStamp (&s);
+	IP_frame();  // MB: To fix planet texture and sun corona 'pop-in'
 }
 
 void
@@ -2366,7 +2371,7 @@ CreateStarBackGround (void)
 	CONTEXT oldContext;
 	RECT clipRect;
 	FRAME frame;
-	
+
 	oldContext = SetContext (SpaceContext);
 	GetContextClipRect (&clipRect);
 
@@ -2383,14 +2388,14 @@ CreateStarBackGround (void)
 	old_seed = seedRandomForSolarSys ();
 
 	// JMS, BW: The beautiful nebula background.
-	if (optNebulae)
+#define NUM_NEBULAE 22 // MB: correction to number of nebulae
+	if (optNebulae && (CurStarDescPtr->star_pt.y % (NUM_NEBULAE + 4)) < NUM_NEBULAE)    // MB: Make some solar systems not have nebulae
 	{
-#define NUM_NEBULAE 16
 		nebula.origin.x = nebula.origin.y = 0;
 		nebula.frame = SetAbsFrameIndex (nebulaeFrame, CurStarDescPtr->star_pt.x % NUM_NEBULAE);
 		DrawStamp(&nebula);
 	}
-	
+
 #define NUM_DIM_PIECES 8
 	s.frame = SpaceJunkFrame;
 	for (i = 0; i < NUM_DIM_PIECES; ++i)
@@ -2406,13 +2411,17 @@ CreateStarBackGround (void)
 		}
 		s.frame = IncFrameIndex (s.frame);
 	}
-	
+
 	// JMS
-	if (optNebulae)
-		num_brt_drawn = RES_CASE(30, 60, 90); // JMS_GFX
+	if (optNebulae && (CurStarDescPtr->star_pt.y % (NUM_NEBULAE + 4)) < NUM_NEBULAE) // MB: Make some system not have nebulae
+	{
+		num_brt_drawn = RES_CASE(30, 98, 229); // JMS_GFX - Altered MB
+	}
 	else
-		num_brt_drawn = RES_CASE(30, 120, 480); // JMS_GFX
-		
+	{
+		num_brt_drawn = RES_CASE(30, 121, 312); // JMS_GFX - Altered MB
+	}
+
 #define NUM_BRT_PIECES 8
 	for (i = 0; i < NUM_BRT_PIECES; ++i)
 	{
diff -ruNp ./src.orig/uqm/process.c ./src.rmx/uqm/process.c
--- ./src.orig/uqm/process.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/process.c	2017-03-03 16:18:29 -0600
@@ -43,7 +43,7 @@ COUNT DisplayFreeList;
 PRIMITIVE DisplayArray[MAX_DISPLAY_PRIMS];
 extern DPOINT SpaceOrg; // JMS: Changed to DPOINT from POINT
 
-SIZE zoom_out = 1 << ZOOM_SHIFT;
+COUNT zoom_out = 1 << ZOOM_SHIFT;
 static SIZE opt_max_zoom_out;
 
 #if 0
@@ -894,11 +894,11 @@ PostProcessQueue (VIEW_STATE view_state,
 				{
 					SDWORD dx, dy;
 					
-					dx = ElementPtr->next.location.x - ElementPtr->current.location.x;
-					dy = ElementPtr->next.location.y - ElementPtr->current.location.y;
+					dx = (SDWORD)ElementPtr->next.location.x - (SDWORD)ElementPtr->current.location.x;
+					dy = (SDWORD)ElementPtr->next.location.y - (SDWORD)ElementPtr->current.location.y;
 					
-					next.x = WRAP_X (ElementPtr->current.location.x + delta.x);
-					next.y = WRAP_Y (ElementPtr->current.location.y + delta.y);
+					next.x = WRAP_X ((SDWORD)ElementPtr->current.location.x + (SDWORD)delta.x);
+					next.y = WRAP_Y ((SDWORD)ElementPtr->current.location.y + (SDWORD)delta.y);
 					DisplayArray[ElementPtr->PrimIndex].Object.Line.first.x = CalcDisplayCoord (next.x, SpaceOrg.x, reduction);
 					DisplayArray[ElementPtr->PrimIndex].Object.Line.first.y = CalcDisplayCoord (next.y, SpaceOrg.y, reduction);
 					
@@ -909,8 +909,8 @@ PostProcessQueue (VIEW_STATE view_state,
 				}
 				else
 				{
-					next.x = WRAP_X (ElementPtr->next.location.x + delta.x);
-					next.y = WRAP_Y (ElementPtr->next.location.y + delta.y);
+					next.x = WRAP_X ((SDWORD)ElementPtr->next.location.x + (SDWORD)delta.x);
+					next.y = WRAP_Y ((SDWORD)ElementPtr->next.location.y + (SDWORD)delta.y);
 					
 					DisplayArray[ElementPtr->PrimIndex].Object.Point.x = CalcDisplayCoord (next.x, SpaceOrg.x, reduction);
 					DisplayArray[ElementPtr->PrimIndex].Object.Point.y = CalcDisplayCoord (next.y, SpaceOrg.y, reduction);
diff -ruNp ./src.orig/uqm/restart.c ./src.rmx/uqm/restart.c
--- ./src.orig/uqm/restart.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/restart.c	2017-03-03 16:18:29 -0600
@@ -49,7 +49,7 @@
 
 #include "libs/graphics/sdl/pure.h"
 
-#include "options.h" // JMS: To make the game recognize resFactorWasChanged even without network support.
+#include "options.h" // JMS: To make the game recognize optionChangeRequiresRestart even without network support.
 
 
 // TODO: This entire module fails to uphold the GraphicsLock semantics
@@ -84,7 +84,7 @@ DrawRestartMenuGraphic (MENU_STATE *pMS)
 		s.frame = CaptureDrawable (LoadGraphic (RESTART_PMAP_ANIM4x));
 
 	// Re-load the info box font so the text shows in correct size after changing the resolution.
-	if (resFactorWasChanged)
+	if (optionChangeRequiresRestart)
 	{	
 		DestroyFont (StarConFont);
 		
@@ -235,7 +235,7 @@ DoRestart (MENU_STATE *pMS)
 		switch (pMS->CurState)
 		{
 			case LOAD_SAVED_GAME:
-				if (resFactorWasChanged)
+				if (optionChangeRequiresRestart)
 				{
 					LockMutex (GraphicsLock);
 					SetFlashRect (NULL);
@@ -277,7 +277,7 @@ DoRestart (MENU_STATE *pMS)
 				}
 				break;
 			case START_NEW_GAME:
-				if (resFactorWasChanged)
+				if (optionChangeRequiresRestart)
 				{
 					LockMutex (GraphicsLock);
 					SetFlashRect (NULL);
@@ -319,7 +319,7 @@ DoRestart (MENU_STATE *pMS)
 				}				
 				break;
 			case PLAY_SUPER_MELEE:
-				if (resFactorWasChanged)
+				if (optionChangeRequiresRestart)
 				{
 					LockMutex (GraphicsLock);
 					SetFlashRect (NULL);
@@ -450,7 +450,7 @@ DoRestart (MENU_STATE *pMS)
 		// (until the next time the game is restarted). This is to prevent
 		// showing the credits with the wrong resolution mode's font&background.
 		if (GetTimeCounter () - LastInputTime > InactTimeOut
-			&& !resFactorWasChanged)
+			&& !optionChangeRequiresRestart)
 		{
 			SleepThreadUntil (FadeMusic (0, ONE_SECOND/2));
 			StopMusic ();
@@ -609,6 +609,7 @@ StartGame (void)
 
 		if (LastActivity & CHECK_RESTART)
 		{	// starting a new game
+            FadeMusic (NORMAL_VOLUME, 0);
 			Introduction ();
 		}
 	
diff -ruNp ./src.orig/uqm/save.c ./src.rmx/uqm/save.c
--- ./src.orig/uqm/save.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/save.c	2017-03-03 16:18:29 -0600
@@ -674,7 +674,7 @@ SaveGame (COUNT which_game, SUMMARY_DESC
 	success = TRUE;
 	made_room = FALSE;
 RetrySave:
-	h = HMalloc (10 * 1024);
+	h = HMalloc (30 * 1024); // JMS: Increased the size from 10kB to 30kB
 	if (h == 0
 			|| (fh = copen (h, MEMORY_STREAM, STREAM_WRITE)) == 0)
 	{
diff -ruNp ./src.orig/uqm/setup.c ./src.rmx/uqm/setup.c
--- ./src.orig/uqm/setup.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/setup.c	2017-03-03 16:18:29 -0600
@@ -236,7 +236,7 @@ InitKernel (void)
 	nebulaeFrame = CaptureDrawable (LoadGraphic (NEBULAE_PMAP_ANIM));
 	if (nebulaeFrame == NULL)
 		return FALSE;
-		
+
 	// JMS: Constellation lines for the constellation starmap.
 	ConstellationsFrame = CaptureDrawable (LoadGraphic (CONSTELLATIONS_MASK_PMAP_ANIM));
 	if (ConstellationsFrame == NULL)
diff -ruNp ./src.orig/uqm/setupmenu.c ./src.rmx/uqm/setupmenu.c
--- ./src.orig/uqm/setupmenu.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/setupmenu.c	2017-03-03 16:18:29 -0600
@@ -375,7 +375,7 @@ static void
 SetDefaults (void)
 {
 	GLOBALOPTS opts;
-	
+
 	GetGlobalOptions (&opts);
 	/*if (opts.res == OPTVAL_CUSTOM)
 	 {
@@ -651,7 +651,7 @@ init_widgets (void)
 		bank = StringBank_Create ();
 	}
 	
-	if (setup_frame == NULL || resFactorWasChanged)
+	if (setup_frame == NULL || optionChangeRequiresRestart)
 	{
 		// JMS: Load the different menus depending on the resolution factor.
 		if (resolutionFactor < 1)
@@ -728,7 +728,7 @@ init_widgets (void)
 	for (i = 0; i < CHOICE_COUNT; i++)
 	{
 		int j, optcount;
-		
+
 		if (index >= count)
 		{
 			log_add (log_Fatal, "PANIC: String table cut short while reading choices");
@@ -1125,9 +1125,9 @@ GetGlobalOptions (GLOBALOPTS *opts)
 	opts->scroll = (optSmoothScroll == OPT_3DO) ? OPTVAL_3DO : OPTVAL_PC;
 	opts->intro = (optWhichIntro == OPT_3DO) ? OPTVAL_3DO : OPTVAL_PC;
 	opts->shield = (optWhichShield == OPT_3DO) ? OPTVAL_3DO : OPTVAL_PC;
-	opts->fps = (GfxFlags & TFB_GFXFLAGS_SHOWFPS) ? 
+	opts->fps = (GfxFlags & TFB_GFXFLAGS_SHOWFPS) ?
 	OPTVAL_ENABLED : OPTVAL_DISABLED;
-	opts->meleezoom = (optMeleeScale == TFB_SCALE_STEP) ? 
+	opts->meleezoom = (optMeleeScale == TFB_SCALE_STEP) ?
 	OPTVAL_PC : OPTVAL_3DO;
 	opts->stereo = optStereoSFX ? OPTVAL_ENABLED : OPTVAL_DISABLED;
 	/* These values are read in, but won't change during a run. */
@@ -1300,6 +1300,57 @@ SetGlobalOptions (GLOBALOPTS *opts)
 	}
 	
 	if (NewWidth == 320 && NewHeight == 240)
+	{
+		switch (opts->scaler)
+		{
+			case OPTVAL_BILINEAR_SCALE:
+				NewGfxFlags |= TFB_GFXFLAGS_SCALE_BILINEAR;
+				res_PutString ("config.scaler", "bilinear");
+				break;
+			case OPTVAL_BIADAPT_SCALE:
+				NewGfxFlags |= TFB_GFXFLAGS_SCALE_BIADAPT;
+				res_PutString ("config.scaler", "biadapt");
+				break;
+			case OPTVAL_BIADV_SCALE:
+				NewGfxFlags |= TFB_GFXFLAGS_SCALE_BIADAPTADV;
+				res_PutString ("config.scaler", "biadv");
+				break;
+			case OPTVAL_TRISCAN_SCALE:
+				NewGfxFlags |= TFB_GFXFLAGS_SCALE_TRISCAN;
+				res_PutString ("config.scaler", "triscan");
+				break;
+			case OPTVAL_HQXX_SCALE:
+				NewGfxFlags |= TFB_GFXFLAGS_SCALE_HQXX;
+				res_PutString ("config.scaler", "hq");
+				break;
+			default:
+				/* OPTVAL_NO_SCALE has no equivalent in gfxflags. */
+				res_PutString ("config.scaler", "no");
+				break;
+		}
+	}
+	else
+	{
+		// JMS: For now, only bilinear works in 1280x960 and 640x480.
+		switch (opts->scaler)
+		{
+			case OPTVAL_BILINEAR_SCALE:
+			case OPTVAL_BIADAPT_SCALE:
+			case OPTVAL_BIADV_SCALE:
+			case OPTVAL_TRISCAN_SCALE:
+			case OPTVAL_HQXX_SCALE:
+				NewGfxFlags |= TFB_GFXFLAGS_SCALE_BILINEAR;
+				res_PutString ("config.scaler", "bilinear");
+				break;
+			default:
+				/* OPTVAL_NO_SCALE has no equivalent in gfxflags. */
+				res_PutString ("config.scaler", "no");
+				break;
+		}
+	}
+
+
+	if (NewWidth == 320 && NewHeight == 240)
 	{	
 		switch (opts->loresBlowup) {
 			case NO_BLOWUP:
@@ -1334,9 +1385,9 @@ SetGlobalOptions (GLOBALOPTS *opts)
 	else
 		opts->loresBlowup = NO_BLOWUP;
 	
-	if (oldResFactor != resolutionFactor)
-		resFactorWasChanged = TRUE;
-	
+ 	if (oldResFactor != resolutionFactor || (opts->music3do != (opt3doMusic ? OPTVAL_ENABLED : OPTVAL_DISABLED)) || (opts->musicremix != (optRemixMusic ? OPTVAL_ENABLED : OPTVAL_DISABLED))) // MB: To force the game to restart when changing music options (otherwise music will not be changed) or resfactor 
+ 		optionChangeRequiresRestart = TRUE;
+
 	res_PutInteger ("config.reswidth", NewWidth);
 	res_PutInteger ("config.resheight", NewHeight);
 	res_PutBoolean ("config.alwaysgl", opts->driver == OPTVAL_ALWAYS_GL);
@@ -1371,60 +1422,11 @@ SetGlobalOptions (GLOBALOPTS *opts)
 	res_PutBoolean ("config.texturedIpPlanets", (opts->texturedIpPlanets == OPTVAL_ENABLED) || opts->rotatingIpPlanets == OPTVAL_ENABLED);
 	optTexturedIpPlanets = opts->texturedIpPlanets == OPTVAL_ENABLED
 		|| opts->rotatingIpPlanets == OPTVAL_ENABLED;
-	
+
 	// JMS: Cheat Mode: Kohr-Ah move at zero speed when trying to cleanse the galaxy
 	res_PutBoolean ("config.cheatMode", opts->cheatMode == OPTVAL_ENABLED);
 	optCheatMode = opts->cheatMode == OPTVAL_ENABLED;
 	
-	if (NewWidth == 320 && NewHeight == 240)
-	{
-		switch (opts->scaler)
-		{
-			case OPTVAL_BILINEAR_SCALE:
-				NewGfxFlags |= TFB_GFXFLAGS_SCALE_BILINEAR;
-				res_PutString ("config.scaler", "bilinear");
-				break;
-			case OPTVAL_BIADAPT_SCALE:
-				NewGfxFlags |= TFB_GFXFLAGS_SCALE_BIADAPT;
-				res_PutString ("config.scaler", "biadapt");
-				break;
-			case OPTVAL_BIADV_SCALE:
-				NewGfxFlags |= TFB_GFXFLAGS_SCALE_BIADAPTADV;
-				res_PutString ("config.scaler", "biadv");
-				break;
-			case OPTVAL_TRISCAN_SCALE:
-				NewGfxFlags |= TFB_GFXFLAGS_SCALE_TRISCAN;
-				res_PutString ("config.scaler", "triscan");
-				break;
-			case OPTVAL_HQXX_SCALE:
-				NewGfxFlags |= TFB_GFXFLAGS_SCALE_HQXX;
-				res_PutString ("config.scaler", "hq");
-				break;
-			default:
-				/* OPTVAL_NO_SCALE has no equivalent in gfxflags. */
-				res_PutString ("config.scaler", "no");
-				break;
-		}
-	}
-	else
-	{
-		// JMS: For now, only bilinear works in 1280x960 and 640x480.
-		switch (opts->scaler)
-		{
-			case OPTVAL_BILINEAR_SCALE:
-			case OPTVAL_BIADAPT_SCALE:
-			case OPTVAL_BIADV_SCALE:
-			case OPTVAL_TRISCAN_SCALE:
-			case OPTVAL_HQXX_SCALE:
-				NewGfxFlags |= TFB_GFXFLAGS_SCALE_BILINEAR;
-				res_PutString ("config.scaler", "bilinear");
-				break;
-			default:
-				/* OPTVAL_NO_SCALE has no equivalent in gfxflags. */
-				res_PutString ("config.scaler", "no");
-				break;
-		}
-	}
 	
 	if (opts->scanlines) {
 		NewGfxFlags |= TFB_GFXFLAGS_SCANLINES;
@@ -1456,33 +1458,33 @@ SetGlobalOptions (GLOBALOPTS *opts)
 			res_PutString ("config.scaler", "bilinear");
 		}
 	}
-	
+
 	res_PutBoolean ("config.scanlines", opts->scanlines);
 	res_PutBoolean ("config.fullscreen", opts->fullscreen);
-	
+
 	if ((NewWidth != ScreenWidthActual) ||
 	    (NewHeight != ScreenHeightActual) ||
 	    (NewDriver != GraphicsDriver) ||
-		(resFactorWasChanged) || // JMS_GFX
-	    (NewGfxFlags != GfxFlags)) 
+		(optionChangeRequiresRestart) || // JMS_GFX
+	    (NewGfxFlags != GfxFlags))
 	{
 		FlushGraphics ();
 		UninitVideoPlayer ();
-		
+
 		// JMS_GFX
-		if (resFactorWasChanged)
+		if (optionChangeRequiresRestart)
 		{
 			// Tell the game the new screen's size.
 			ScreenWidth  = 320 << resolutionFactor;
 			ScreenHeight = 240 << resolutionFactor;
-			
+
 			log_add (log_Debug, "ScreenWidth:%d, ScreenHeight:%d, Wactual:%d, Hactual:%d",
 				ScreenWidth, ScreenHeight, ScreenWidthActual, ScreenHeightActual);
-			
-			// These solve the FUCKING context problem that plagued the setupmenu when changing to higher resolution.
+
+			// These solve the context problem that plagued the setupmenu when changing to higher resolution.
 			TFB_BBox_Reset ();
 			TFB_BBox_Init (ScreenWidth, ScreenHeight);
-			
+
 			// Change how big area of the screen is update-able.
 			DestroyDrawable (ReleaseDrawable (Screen));
 			Screen = CaptureDrawable (CreateDisplay (WANT_MASK | WANT_PIXMAP, &screen_width, &screen_height));
@@ -1490,7 +1492,7 @@ SetGlobalOptions (GLOBALOPTS *opts)
 			SetContextFGFrame ((FRAME)NULL);
 			SetContextFGFrame (Screen);
 		}
-		
+
 		TFB_DrawScreen_ReinitVideo (NewDriver, NewGfxFlags, NewWidth, NewHeight);
 		FlushGraphics ();
 		InitVideoPlayer (TRUE);
@@ -1523,11 +1525,11 @@ SetGlobalOptions (GLOBALOPTS *opts)
 	res_PutBoolean ("config.3domovies", opts->intro == OPTVAL_3DO);
 	res_PutBoolean ("config.showfps", opts->fps == OPTVAL_ENABLED);
 	res_PutBoolean ("config.smoothmelee", opts->meleezoom == OPTVAL_3DO);
-	res_PutBoolean ("config.positionalsfx", opts->stereo == OPTVAL_ENABLED); 
+	res_PutBoolean ("config.positionalsfx", opts->stereo == OPTVAL_ENABLED);
 	res_PutBoolean ("config.pulseshield", opts->shield == OPTVAL_3DO);
 	res_PutInteger ("config.player1control", opts->player1);
 	res_PutInteger ("config.player2control", opts->player2);
-	
+
 	switch (opts->adriver) {
 		case OPTVAL_SILENCE:
 			res_PutString ("config.audiodriver", "none");
diff -ruNp ./src.orig/uqm/ship.c ./src.rmx/uqm/ship.c
--- ./src.orig/uqm/ship.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/ship.c	2017-03-03 16:18:29 -0600
@@ -36,6 +36,7 @@
 #include "setup.h"
 #include "sounds.h"
 #include "libs/mathlib.h"
+#include "libs/log.h"
 
 
 void
@@ -270,7 +271,7 @@ ship_preprocess (ELEMENT *ElementPtr)
 		if (!OBJECT_CLOAKED (ElementPtr)
 				&& LOBYTE (GLOBAL (CurrentActivity)) <= IN_ENCOUNTER)
 		{
-			spawn_ion_trail (ElementPtr);
+            spawn_ion_trail (ElementPtr, 0, 0);
 		}
 	}
 
@@ -479,7 +480,7 @@ spawn_ship (STARSHIP *StarShipPtr)
 			} while (CalculateGravity (ShipElementPtr)
 					|| TimeSpaceMatterConflict (ShipElementPtr));
 		}
-
+        
 		ShipElementPtr->preprocess_func = ship_preprocess;
 		ShipElementPtr->postprocess_func = ship_postprocess;
 		ShipElementPtr->death_func = ship_death;
diff -ruNp ./src.orig/uqm/ships/arilou/arilou.c ./src.rmx/uqm/ships/arilou/arilou.c
--- ./src.orig/uqm/ships/arilou/arilou.c	2017-02-25 17:11:43 -0600
+++ ./src.rmx/uqm/ships/arilou/arilou.c	2017-03-03 16:18:29 -0600
@@ -20,8 +20,10 @@
 #include "arilou.h"
 #include "resinst.h"
 
+#include "libs/log.h"
 #include "libs/mathlib.h"
-
+#include "uqm/globdata.h"
+#include <math.h>
 
 #define MAX_CREW 6
 #define MAX_ENERGY 20
@@ -439,10 +441,32 @@ arilou_preprocess (ELEMENT *ElementPtr)
 			}
 			else
 			{
-				ElementPtr->next.location.x =
+                // JMS: Reduce the odds of teleporting into Sa-Matra.
+                if (LOBYTE (GLOBAL (CurrentActivity)) == IN_LAST_BATTLE)
+                {
+                    SDWORD dist = 0;
+                    
+                    do
+                    {
+                        ElementPtr->next.location.x =
+                            WRAP_X (DISPLAY_ALIGN_X (TFB_Random ()));
+                        ElementPtr->next.location.y =
+                            WRAP_Y (DISPLAY_ALIGN_Y (TFB_Random ()));
+                        
+                        SDWORD dx = ((SDWORD)ElementPtr->next.location.x - (LOG_SPACE_WIDTH >> 1));
+                        SDWORD dy = ((SDWORD)ElementPtr->next.location.y - (LOG_SPACE_HEIGHT >> 1));
+                        
+                        dist = sqrt(dx*dx + dy*dy);
+                        
+                    } while (dist < (2800 << RESOLUTION_FACTOR));
+                }
+                else
+                {
+                    ElementPtr->next.location.x =
 						WRAP_X (DISPLAY_ALIGN_X (TFB_Random ()));
-				ElementPtr->next.location.y =
+                    ElementPtr->next.location.y =
 						WRAP_Y (DISPLAY_ALIGN_Y (TFB_Random ()));
+                }
 			}
 		}
 
diff -ruNp ./src.orig/uqm/ships/lastbat/lastbat.c ./src.rmx/uqm/ships/lastbat/lastbat.c
--- ./src.orig/uqm/ships/lastbat/lastbat.c	2017-02-25 17:11:44 -0600
+++ ./src.rmx/uqm/ships/lastbat/lastbat.c	2017-03-03 16:18:29 -0600
@@ -507,15 +507,15 @@ sentinel_preprocess (ELEMENT *ElementPtr
 			LockElement (ElementPtr->hTarget, &EnemyShipPtr);
 
 			LockElement (StarShipPtr->hShip, &ShipPtr);
-			delta_x0 = ShipPtr->current.location.x
-					- ElementPtr->current.location.x;
-			delta_y0 = ShipPtr->current.location.y
-					- ElementPtr->current.location.y;
-
-			delta_x1 = ShipPtr->current.location.x
-					- EnemyShipPtr->current.location.x;
-			delta_y1 = ShipPtr->current.location.y
-					- EnemyShipPtr->current.location.y;
+			delta_x0 = (SDWORD)ShipPtr->current.location.x
+					- (SDWORD)ElementPtr->current.location.x;
+			delta_y0 = (SDWORD)ShipPtr->current.location.y
+					- (SDWORD)ElementPtr->current.location.y;
+
+			delta_x1 = (SDWORD)ShipPtr->current.location.x
+					- (SDWORD)EnemyShipPtr->current.location.x;
+			delta_y1 = (SDWORD)ShipPtr->current.location.y
+					- (SDWORD)EnemyShipPtr->current.location.y;
 			UnlockElement (StarShipPtr->hShip);
 
 			if ((long)delta_x0 * delta_x0
@@ -538,11 +538,11 @@ sentinel_preprocess (ELEMENT *ElementPtr
 
 			LockElement (hTarget, &TargetPtr);
 
-			delta_x = TargetPtr->current.location.x
-					- ElementPtr->current.location.x;
+			delta_x = (SDWORD)TargetPtr->current.location.x
+					- (SDWORD)ElementPtr->current.location.x;
 			delta_x = WRAP_DELTA_X (delta_x);
-			delta_y = TargetPtr->current.location.y
-					- ElementPtr->current.location.y;
+			delta_y = (SDWORD)TargetPtr->current.location.y
+					- (SDWORD)ElementPtr->current.location.y;
 			delta_y = WRAP_DELTA_Y (delta_y);
 
 			if ((num_frames = WORLD_TO_TURN (
@@ -555,11 +555,11 @@ sentinel_preprocess (ELEMENT *ElementPtr
 			GetNextVelocityComponentsSdword (&TargetVelocity,
 					&delta_x, &delta_y, num_frames);
 
-			delta_x = (TargetPtr->current.location.x + delta_x)
-					- ElementPtr->current.location.x;
+			delta_x = ((SDWORD)TargetPtr->current.location.x + (SDWORD)delta_x)
+					- (SDWORD)ElementPtr->current.location.x;
 			delta_x = WRAP_DELTA_X (delta_x);
-			delta_y = (TargetPtr->current.location.y + delta_y)
-					- ElementPtr->current.location.y;
+			delta_y = ((SDWORD)TargetPtr->current.location.y + (SDWORD)delta_y)
+					- (SDWORD)ElementPtr->current.location.y;
 			delta_y = WRAP_DELTA_Y (delta_y);
 
 			UnlockElement (hTarget);
diff -ruNp ./src.orig/uqm/ships/pkunk/pkunk.c ./src.rmx/uqm/ships/pkunk/pkunk.c
--- ./src.orig/uqm/ships/pkunk/pkunk.c	2017-02-25 17:11:44 -0600
+++ ./src.rmx/uqm/ships/pkunk/pkunk.c	2017-03-03 16:18:29 -0600
@@ -25,7 +25,6 @@
 
 #include "../../settings.h" // JMS: For StopMusic
 
-
 #define MAX_CREW 8
 #define MAX_ENERGY 12
 #define ENERGY_REGENERATION 0
@@ -546,18 +545,17 @@ phoenix_transition (ELEMENT *ElementPtr)
 		else
 		{
 			angle = FACING_TO_ANGLE (StarShipPtr->ShipFacing);
-
-			ShipImagePtr->current.location.x -=
-					COSINE (angle, TRANSITION_SPEED)
-					* (ElementPtr->life_span - 1);
-			ShipImagePtr->current.location.y -=
-					SINE (angle, TRANSITION_SPEED)
-					* (ElementPtr->life_span - 1);
-
-			ShipImagePtr->current.location.x =
-					WRAP_X (ShipImagePtr->current.location.x);
-			ShipImagePtr->current.location.y =
-					WRAP_Y (ShipImagePtr->current.location.y);
+            
+            // JMS_GFX: Circumventing overflows by using temp variables
+            // instead of subtracting straight from the POINT sized
+            // ShipImagePtr->current.location.
+            SDWORD temp_x = (SDWORD)ShipImagePtr->current.location.x -
+                COSINE (angle, TRANSITION_SPEED) * (ElementPtr->life_span - 1);
+            SDWORD temp_y = (SDWORD)ShipImagePtr->current.location.y -
+                SINE (angle, TRANSITION_SPEED) * (ElementPtr->life_span - 1);
+            
+            ShipImagePtr->current.location.x = WRAP_X (temp_x);
+            ShipImagePtr->current.location.y = WRAP_Y (temp_y);
 		}
 
 		ShipImagePtr->mass_points = (BYTE)angle;
diff -ruNp ./src.orig/uqm/ships/vux/vux.c ./src.rmx/uqm/ships/vux/vux.c
--- ./src.orig/uqm/ships/vux/vux.c	2017-02-25 17:11:44 -0600
+++ ./src.rmx/uqm/ships/vux/vux.c	2017-03-03 16:18:30 -0600
@@ -474,6 +474,15 @@ vux_preprocess (ELEMENT *ElementPtr)
 
 			LockElement (ElementPtr->hTarget, &OtherShipPtr);
 
+            // JMS: Not REALLY necessary as VUX can ordinarily never be
+            // played against Sa-Matra. But handy in debugging as a single
+            // VUX limpet decapacitates Sa-Matra completely.
+            SDWORD SA_MATRA_EXTRA_DIST = 0;
+            if (LOBYTE (GLOBAL (CurrentActivity)) == IN_LAST_BATTLE)
+            {
+                SA_MATRA_EXTRA_DIST += 1000 << RESOLUTION_FACTOR;
+            }
+            
 			do
 			{
 				// Originally, the warp distance was:
@@ -482,20 +491,24 @@ vux_preprocess (ELEMENT *ElementPtr)
 				// But in reality this should be relative to the laser-range
 #define MAXX_ENTRY_DIST DISPLAY_TO_WORLD ((LASER_BASE + VUX_OFFSET + WARP_OFFSET) << 1)
 #define MAXY_ENTRY_DIST DISPLAY_TO_WORLD ((LASER_BASE + VUX_OFFSET + WARP_OFFSET) << 1)
+                // JMS_GFX: Circumventing overflows by using temp variables
+                // instead of subtracting straight from the POINT sized
+                // ShipImagePtr->current.location.
 				SDWORD dx, dy;
-
-				ElementPtr->current.location.x =
-						(OtherShipPtr->current.location.x -
+				SDWORD temp_x =
+						((SDWORD)OtherShipPtr->current.location.x -
 						(MAXX_ENTRY_DIST >> 1)) +
 						((COUNT)TFB_Random () % MAXX_ENTRY_DIST);
-				ElementPtr->current.location.y =
-						(OtherShipPtr->current.location.y -
+				SDWORD temp_y =
+						((SDWORD)OtherShipPtr->current.location.y -
 						(MAXY_ENTRY_DIST >> 1)) +
 						((COUNT)TFB_Random () % MAXY_ENTRY_DIST);
-				dx = OtherShipPtr->current.location.x -
-						ElementPtr->current.location.x;
-				dy = OtherShipPtr->current.location.y -
-						ElementPtr->current.location.y;
+                
+                temp_x += temp_x > 0 ? SA_MATRA_EXTRA_DIST : -SA_MATRA_EXTRA_DIST;
+                temp_y += temp_y > 0 ? SA_MATRA_EXTRA_DIST : -SA_MATRA_EXTRA_DIST;
+                
+				dx = OtherShipPtr->current.location.x - temp_x;
+				dy = OtherShipPtr->current.location.y - temp_y;
 				facing = NORMALIZE_FACING (
 						ANGLE_TO_FACING (ARCTAN (dx, dy))
 						);
@@ -504,9 +517,9 @@ vux_preprocess (ELEMENT *ElementPtr)
 						facing);
 
 				ElementPtr->current.location.x =
-						WRAP_X (DISPLAY_ALIGN (ElementPtr->current.location.x));
+						WRAP_X (DISPLAY_ALIGN (temp_x));
 				ElementPtr->current.location.y =
-						WRAP_Y (DISPLAY_ALIGN (ElementPtr->current.location.y));
+						WRAP_Y (DISPLAY_ALIGN (temp_y));
 			} while (CalculateGravity (ElementPtr)
 					|| TimeSpaceMatterConflict (ElementPtr));
 
diff -ruNp ./src.orig/uqm/shipyard.c ./src.rmx/uqm/shipyard.c
--- ./src.orig/uqm/shipyard.c	2017-02-25 17:11:44 -0600
+++ ./src.rmx/uqm/shipyard.c	2017-03-03 16:18:30 -0600
@@ -108,11 +108,10 @@ animatePowerLines (MENU_STATE *pMS)
 		s.frame = SetAbsFrameIndex (pMS->ModuleFrame, 24);
 		ColorMap = SetAbsColorMapIndex (pMS->CurString, 0);
 	}
-
+    
 	if (Now >= NextTime || pMS)
 	{
 		NextTime = Now + (ONE_SECOND / HANGAR_ANIM_RATE);
-
 		SetColorMap (GetColorMapAddress (ColorMap));
 		DrawStamp (&s);
 		// Advance colomap cycle
diff -ruNp ./src.orig/uqm/sis.c ./src.rmx/uqm/sis.c
--- ./src.orig/uqm/sis.c	2017-02-25 17:11:44 -0600
+++ ./src.rmx/uqm/sis.c	2017-03-03 16:18:30 -0600
@@ -93,7 +93,7 @@ ClearSISRect (BYTE ClearFlags)
 	r.corner.x = 2;
 	r.extent.width = STATUS_WIDTH - 4;
 
-	BatchGraphics ();
+    BatchGraphics ();
 	if (ClearFlags & DRAW_SIS_DISPLAY)
 	{
 		DeltaSISGauges (UNDEFINED_DELTA, UNDEFINED_DELTA, UNDEFINED_DELTA);
@@ -521,13 +521,31 @@ DrawFlagshipName (BOOLEAN InStatusArea)
 		r.corner.x = RES_CASE(0,24,0);						 // JMS_GFX
 		r.corner.y = 1;
 		r.extent.width = SIS_SCREEN_WIDTH - RES_CASE(0,24,0); // JMS_GFX
-		r.extent.height = SHIP_NAME_HEIGHT + RES_CASE(0,1,0);// JMS_GFX
+		r.extent.height = SHIP_NAME_HEIGHT + RES_CASE(0,1,6);// JMS_GFX
 
 		t.pStr = buf;
 		snprintf (buf, sizeof buf, "%s %s",
 				GAME_STRING (NAMING_STRING_BASE + 1), GLOBAL_SIS (ShipName));
 		// XXX: this will not work with UTF-8 strings
 		strupr (buf);
+        
+        // JMS: Handling the a-umlaut and o-umlaut characters
+        {
+            unsigned char *ptr;
+            ptr = (unsigned char*)buf;
+            while (*ptr)
+            {
+                if (*ptr == 0xc3)
+                {
+                    ptr++;
+                    if (*ptr == 0xb6 || *ptr == 0xa4)
+                    {
+                        *ptr += 'A' - 'a';
+                    }
+                }
+                ptr++;
+            }
+        }
 	}
 	OldFontEffect = SetContextFontEffect (NULL);
 	OldColor = SetContextForeGroundColor (FLAGSHIP_NAME_BACKGROUND_COLOR);
@@ -617,7 +635,7 @@ DrawFlagshipStats (void)
 	r.corner.x = 0;
 	r.corner.y = SIS_SCREEN_HEIGHT - (4 * leading) - RES_CASE(0, 30, 60); // JMS_GFX
 	r.extent.width = SIS_SCREEN_WIDTH;
-	r.extent.height = (4 * leading);
+	r.extent.height = (4 * leading) + RES_CASE(0, 30, 60);// JMS_GFX
 
 	OldColor = SetContextForeGroundColor (BLACK_COLOR);
 	DrawFilledRectangle (&r);
@@ -878,7 +896,7 @@ DrawPC_SIS (void)
 	r.corner.y -= RES_STAT_SCALE(6); // JMS_GFX
 	r.corner.x -= RES_STAT_SCALE(1); // JMS_GFX
 	r.extent.width += RES_STAT_SCALE(2);
-	r.extent.height += RES_CASE(0,0,2);
+	r.extent.height += RES_CASE(0,2,2);
 	DrawFilledRectangle (&r);
 
 	SetContextFontEffect (SetAbsFrameIndex (FontGradFrame, 1));
@@ -1154,9 +1172,21 @@ DeltaSISGauges (SIZE crew_delta, SIZE fu
 	BatchGraphics ();
 	if (crew_delta == UNDEFINED_DELTA)
 	{
+        Color OldColor;
+        
 		STAMP s;
 		s.origin.x = 0;
 		s.origin.y = 0;
+        
+        // JMS: These lines prevent the flagship status box from turning grey.
+        OldColor = SetContextForeGroundColor (BLACK_COLOR);
+        RECT r;
+        r.corner.y = 23;
+        r.corner.x = 2;
+        r.extent.width = STATUS_WIDTH - 4;
+        r.extent.height = 105;
+        DrawFilledRectangle (&r);
+        
 		s.frame = FlagStatFrame;
 		DrawStamp (&s);
 
@@ -1170,6 +1200,9 @@ DeltaSISGauges (SIZE crew_delta, SIZE fu
 		UnlockMutex (GraphicsLock);
 		DrawSupportShips ();
 		LockMutex (GraphicsLock);
+        
+        // JMS: In conjunction with the JMS lines above.
+        SetContextForeGroundColor (OldColor);
 	}
 
 	SetContextFont (TinyFont);
diff -ruNp ./src.orig/uqm/supermelee/melee.c ./src.rmx/uqm/supermelee/melee.c
--- ./src.orig/uqm/supermelee/melee.c	2017-02-25 17:11:44 -0600
+++ ./src.rmx/uqm/supermelee/melee.c	2017-03-03 16:18:30 -0600
@@ -125,7 +125,7 @@ enum
 #define RACE_INFO_HEIGHT ((STATUS_HEIGHT - (3 << RESOLUTION_FACTOR)) - RACE_INFO_ORIGIN_Y) // JMS_GFX
 
 #define MELEE_STATUS_X_OFFS ((1 << RESOLUTION_FACTOR)) // JMS_GFX
-#define MELEE_STATUS_Y_OFFS (201 << RESOLUTION_FACTOR) // JMS_GFX
+#define MELEE_STATUS_Y_OFFS ((201 << RESOLUTION_FACTOR) + RES_CASE(0,20,40)) // JMS_GFX
 #define MELEE_STATUS_WIDTH  (NUM_MELEE_COLUMNS * \
 		(MELEE_BOX_WIDTH + MELEE_BOX_SPACE))
 #define MELEE_STATUS_HEIGHT (38 << RESOLUTION_FACTOR) // JMS_GFX
diff -ruNp ./src.orig/uqm/tactrans.c ./src.rmx/uqm/tactrans.c
--- ./src.orig/uqm/tactrans.c	2017-02-25 17:11:45 -0600
+++ ./src.rmx/uqm/tactrans.c	2017-03-03 16:18:30 -0600
@@ -43,6 +43,7 @@
 #include "settings.h"
 #include "sounds.h"
 #include "libs/mathlib.h"
+#include "libs/log.h"
 
 
 static void cleanup_dead_ship (ELEMENT *ElementPtr);
@@ -747,7 +748,7 @@ cycle_ion_trail (ELEMENT *ElementPtr)
 }
 
 void
-spawn_ion_trail (ELEMENT *ElementPtr)
+spawn_ion_trail (ELEMENT *ElementPtr, SIZE x_offset, SIZE y_offset)
 {
 	HELEMENT hIonElement;
 
@@ -776,19 +777,33 @@ spawn_ion_trail (ELEMENT *ElementPtr)
 				// When the element "dies", in the death_func
 				// 'cycle_ion_trail', it is given new life a number of
 				// times, by setting life_span to thrust_wait.
-		SetPrimType (&DisplayArray[IonElementPtr->PrimIndex], POINT_PRIM);
+        
+        // JMS_GFX
+        if (RESOLUTION_FACTOR == 0) {
+            SetPrimType (&DisplayArray[IonElementPtr->PrimIndex], POINT_PRIM);
+            IonElementPtr->current.image.frame = DecFrameIndex (stars_in_space);
+            IonElementPtr->current.image.farray = &stars_in_space;
+        }
+        else {
+            SetPrimType (&DisplayArray[IonElementPtr->PrimIndex], STAMPFILL_PRIM);
+            IonElementPtr->current.image.frame = SetAbsFrameIndex (ion_trails[0], 0);
+            IonElementPtr->current.image.farray = ion_trails;
+        }
+        
 		SetPrimColor (&DisplayArray[IonElementPtr->PrimIndex],
 				START_ION_COLOR);
 		IonElementPtr->colorCycleIndex = 0;
-		IonElementPtr->current.image.frame =
-				DecFrameIndex (stars_in_space);
-		IonElementPtr->current.image.farray = &stars_in_space;
 		IonElementPtr->current.location = ElementPtr->current.location;
 		IonElementPtr->current.location.x +=
-				(COORD)COSINE (angle, r.extent.height);
+				(COORD)COSINE (angle, r.extent.height) + x_offset;
 		IonElementPtr->current.location.y +=
-				(COORD)SINE (angle, r.extent.height);
+				(COORD)SINE (angle, r.extent.height) + y_offset;
 		IonElementPtr->death_func = cycle_ion_trail;
+        
+        if (RESOLUTION_FACTOR > 0) {
+            IonElementPtr->next.image.frame = IonElementPtr->current.image.frame;
+            IonElementPtr->next.image.farray = IonElementPtr->current.image.farray;
+        }
 
 		SetElementStarShip (IonElementPtr, StarShipPtr);
 
@@ -895,17 +910,16 @@ ship_transition (ELEMENT *ElementPtr)
 			}
 			else if (ElementPtr->crew_level)
 			{
-				ShipImagePtr->current.location.x -=
-						COSINE (angle, TRANSITION_SPEED)
-						* (ElementPtr->life_span - 1);
-				ShipImagePtr->current.location.y -=
-						SINE (angle, TRANSITION_SPEED)
-						* (ElementPtr->life_span - 1);
-
-				ShipImagePtr->current.location.x =
-						WRAP_X (ShipImagePtr->current.location.x);
-				ShipImagePtr->current.location.y =
-						WRAP_Y (ShipImagePtr->current.location.y);
+                // JMS_GFX: Circumventing overflows by using temp variables
+                // instead of subtracting straight from the POINT sized
+                // ShipImagePtr->current.location.
+                SDWORD temp_x = (SDWORD)ShipImagePtr->current.location.x -
+                    COSINE (angle, TRANSITION_SPEED) * (ElementPtr->life_span - 1);
+                SDWORD temp_y = (SDWORD)ShipImagePtr->current.location.y -
+                    SINE (angle, TRANSITION_SPEED) * (ElementPtr->life_span - 1);
+                
+				ShipImagePtr->current.location.x = WRAP_X (temp_x);
+				ShipImagePtr->current.location.y = WRAP_Y (temp_y);
 			}
 			ShipImagePtr->preprocess_func = ship_transition;
 			ShipImagePtr->death_func = cycle_ion_trail;
diff -ruNp ./src.orig/uqm/tactrans.h ./src.rmx/uqm/tactrans.h
--- ./src.orig/uqm/tactrans.h	2017-02-25 17:11:45 -0600
+++ ./src.rmx/uqm/tactrans.h	2017-03-03 16:18:30 -0600
@@ -36,7 +36,7 @@ extern void ship_transition (ELEMENT *El
 extern BOOLEAN OpponentAlive (STARSHIP *TestStarShipPtr);
 extern void new_ship (ELEMENT *ElementPtr);
 extern void ship_death (ELEMENT *ShipPtr);
-extern void spawn_ion_trail (ELEMENT *ElementPtr);
+extern void spawn_ion_trail (ELEMENT *ElementPtr, SIZE x, SIZE y);
 extern void flee_preprocess (ELEMENT *ElementPtr);
 
 extern void StopDitty (void);
diff -ruNp ./src.orig/uqm/trans.c ./src.rmx/uqm/trans.c
--- ./src.orig/uqm/trans.c	2017-02-25 17:11:45 -0600
+++ ./src.rmx/uqm/trans.c	2017-03-03 16:18:30 -0600
@@ -20,7 +20,7 @@
 #include "libs/compiler.h"
 
 
-SIZE sinetab[] =
+SDWORD sinetab[] =
 {
 	-FLT_ADJUST (1.000000),
 	-FLT_ADJUST (0.995185),
diff -ruNp ./src.orig/uqm/units.h ./src.rmx/uqm/units.h
--- ./src.orig/uqm/units.h	2017-02-25 17:11:45 -0600
+++ ./src.rmx/uqm/units.h	2017-03-03 16:18:30 -0600
@@ -98,9 +98,11 @@ extern unsigned int resolutionFactor; //
 #define SCALED_ONE (1 << ONE_SHIFT)
 #define DISPLAY_TO_WORLD(x) ((x)<<ONE_SHIFT)
 #define WORLD_TO_DISPLAY(x) ((x)>>ONE_SHIFT)
-#define DISPLAY_ALIGN(x) ((COORD)(x)&~(SCALED_ONE-1))
-#define DISPLAY_ALIGN_X(x) ((COORD)((COUNT)(x)%LOG_SPACE_WIDTH)&~(SCALED_ONE-1))
-#define DISPLAY_ALIGN_Y(y) ((COORD)((COUNT)(y)%LOG_SPACE_HEIGHT)&~(SCALED_ONE-1))
+
+// JMS_GFX: Changed from COORD to SDWORD and from COUNT to DWORD
+#define DISPLAY_ALIGN(x) ((SDWORD)(x)&~(SCALED_ONE-1))
+#define DISPLAY_ALIGN_X(x) ((SDWORD)((DWORD)(x)%LOG_SPACE_WIDTH)&~(SCALED_ONE-1))
+#define DISPLAY_ALIGN_Y(y) ((SDWORD)((DWORD)(y)%LOG_SPACE_HEIGHT)&~(SCALED_ONE-1))
 
 #define LOG_SPACE_WIDTH   (DISPLAY_TO_WORLD (SPACE_WIDTH) << MAX_REDUCTION)
 #define LOG_SPACE_HEIGHT  (DISPLAY_TO_WORLD (SPACE_HEIGHT) << MAX_REDUCTION)
@@ -267,8 +269,8 @@ universeToLogy (uy)
 >>(CIRCLE_SHIFT-FACING_SHIFT))
 #define FACING_TO_ANGLE(f) ((f)<<(CIRCLE_SHIFT-FACING_SHIFT))
 
-#define NORMALIZE_ANGLE(a) ((COUNT)((a)&(FULL_CIRCLE-1)))
-#define NORMALIZE_FACING(f) ((COUNT)((f)&((1 << FACING_SHIFT)-1)))
+#define NORMALIZE_ANGLE(a) ((DWORD)((a)&(FULL_CIRCLE-1)))
+#define NORMALIZE_FACING(f) ((DWORD)((f)&((1 << FACING_SHIFT)-1)))
 
 #define DEGREES_TO_ANGLE(d) NORMALIZE_ANGLE((((d) % 360) * FULL_CIRCLE \
 + HALF_CIRCLE) / 360)
@@ -281,7 +283,7 @@ universeToLogy (uy)
 #define UNADJUST(x) (SIZE)((x)>>SIN_SHIFT)
 #define ROUND(x,y) ((x)+((x)>=0?((y)>>1):-((y)>>1)))
 
-extern SIZE sinetab[];
+extern SDWORD sinetab[];
 #define SINVAL(a) sinetab[NORMALIZE_ANGLE(a)]
 #define COSVAL(a) SINVAL((a)+QUADRANT)
 #define SINE(a,m) ((SDWORD)((((long)SINVAL(a))*(long)(m))>>SIN_SHIFT)) // JMS: SDWORD was SIZE. Changed to avoid overflows in hires.
diff -ruNp ./src.orig/uqm.c ./src.rmx/uqm.c
--- ./src.orig/uqm.c	2017-02-25 17:11:45 -0600
+++ ./src.rmx/uqm.c	2017-03-03 16:18:30 -0600
@@ -198,7 +198,7 @@ static const struct option_list_value ch
 	{NULL, 0}
 };
 
-static const struct option_list_value accelList[] = 
+static const struct option_list_value accelList[] =
 {
 	{"mmx",    PLATFORM_MMX},
 	{"sse",    PLATFORM_SSE},
@@ -245,7 +245,8 @@ main (int argc, char *argv[])
 		/* .addonDir = */           NULL,
 		/* .addons = */             NULL,
 		/* .numAddons = */          0,
-
+		
+		// MB: Defaults Changed
 		INIT_CONFIG_OPTION(  opengl,            true ),
 		INIT_CONFIG_OPTION2( resolution,        1280, 960 ),
 		INIT_CONFIG_OPTION(  fullscreen,        true ),
@@ -255,21 +256,21 @@ main (int argc, char *argv[])
 		INIT_CONFIG_OPTION(  keepAspectRatio,   true ),
 		INIT_CONFIG_OPTION(  gamma,             0.0f ),
 		INIT_CONFIG_OPTION(  soundDriver,       audio_DRIVER_MIXSDL ),
-		INIT_CONFIG_OPTION(  soundQuality,      audio_QUALITY_MEDIUM ),
-		INIT_CONFIG_OPTION(  use3doMusic,       true ),
-		INIT_CONFIG_OPTION(  useRemixMusic,     false ),
-		INIT_CONFIG_OPTION(  whichCoarseScan,   OPT_PC ),
-		INIT_CONFIG_OPTION(  whichMenu,         OPT_PC ),
+		INIT_CONFIG_OPTION(  soundQuality,      audio_QUALITY_HIGH ),
+		INIT_CONFIG_OPTION(  use3doMusic,       false ),
+		INIT_CONFIG_OPTION(  useRemixMusic,     true ),
+		INIT_CONFIG_OPTION(  whichCoarseScan,   OPT_3DO ),
+		INIT_CONFIG_OPTION(  whichMenu,         OPT_3DO ),
 		INIT_CONFIG_OPTION(  whichFonts,        OPT_PC ),
 		INIT_CONFIG_OPTION(  whichIntro,        OPT_PC ),
-		INIT_CONFIG_OPTION(  whichShield,       OPT_PC ),
+		INIT_CONFIG_OPTION(  whichShield,       OPT_3DO ),
 		INIT_CONFIG_OPTION(  smoothScroll,      OPT_PC ),
 		INIT_CONFIG_OPTION(  meleeScale,        TFB_SCALE_BILINEAR ), // JMS: Replaced trilinear with bilinear because of performance problems.
 		INIT_CONFIG_OPTION(  subtitles,         true ),
 		INIT_CONFIG_OPTION(  stereoSFX,         false ),
-		INIT_CONFIG_OPTION(  musicVolumeScale,  1.0f ),
-		INIT_CONFIG_OPTION(  sfxVolumeScale,    1.0f ),
-		INIT_CONFIG_OPTION(  speechVolumeScale, 0.3f ),
+		INIT_CONFIG_OPTION(  musicVolumeScale,  0.8f ),
+		INIT_CONFIG_OPTION(  sfxVolumeScale,    0.8f ),
+		INIT_CONFIG_OPTION(  speechVolumeScale, 0.9f ),
 		INIT_CONFIG_OPTION(  safeMode,          false ),
 		INIT_CONFIG_OPTION(  resolutionFactor,  2 ),
 		INIT_CONFIG_OPTION(  forceAspectRatio,  false ),
@@ -304,6 +305,10 @@ main (int argc, char *argv[])
 		for (i = 0; i < argc; ++i)
 			log_add (log_User, "argv[%d] = [%s]", i, argv[i]);
 	}
+	else // MB: Output log to logfile by default, not console
+	{
+		freopen("uqm.log", "w", stderr);
+	}
 
 	if (options.runMode == runMode_version)
 	{
@@ -406,7 +411,7 @@ main (int argc, char *argv[])
 	resolutionFactor = (unsigned int) options.resolutionFactor.value; // JMS_GFX
 	forceAspectRatio = options.forceAspectRatio.value; // JMS_GFX
 	loresBlowupScale = (unsigned int) options.loresBlowupScale.value; // JMS_GFX
-	resFactorWasChanged = FALSE; // JMS_GFX
+	optionChangeRequiresRestart = FALSE; // JMS_GFX
 	optMainmenuMusic = options.mainmenuMusic.value; // JMS
 	optMineralSubmenu = options.mineralSubmenu.value; // JMS
 	optNebulae = options.nebulae.value; // JMS
@@ -444,7 +449,7 @@ main (int argc, char *argv[])
 		gfxFlags |= TFB_GFXFLAGS_SCANLINES;
 	if (options.showFps.value)
 		gfxFlags |= TFB_GFXFLAGS_SHOWFPS;
-	TFB_InitGraphics (gfxDriver, gfxFlags, options.resolution.width, options.resolution.height, resolutionFactor, forceAspectRatio); // JMS_GFX: added resolutionFactor
+	TFB_InitGraphics (gfxDriver, gfxFlags, options.resolution.width, options.resolution.height, &resolutionFactor, forceAspectRatio); // JMS_GFX: added resolutionFactor - MB: altered call to match new function declaration
 	if (options.gamma.set)
 		TFB_SetGamma (options.gamma.value);
 	InitColorMaps ();
@@ -1072,7 +1077,7 @@ parseOptions (int argc, char *argv[], st
 				}
 				break;
 			}
-	                case SAFEMODE_OPT:
+			case SAFEMODE_OPT:
 				setBoolOption (&options->safeMode, true);
 				break;
 #ifdef NETPLAY
