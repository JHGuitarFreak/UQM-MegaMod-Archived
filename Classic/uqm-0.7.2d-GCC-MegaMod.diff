diff -ruNp ./src.orig/libs/network/wspiapiwrap.h ./src/libs/network/wspiapiwrap.h
--- ./src.orig/libs/network/wspiapiwrap.h	2017-02-23 12:24:09 -0600
+++ ./src/libs/network/wspiapiwrap.h	2017-02-23 11:15:48 -0600
@@ -19,7 +19,10 @@
 #ifndef _WSPIAPIWRAP_H
 #define _WSPIAPIWRAP_H
 
-// HACK. See wspiapiwrap.c
+/* ************
+   DC: This whole section commented out due to VSC compiling issues. Found here: http://forum.uqm.stack.nl/index.php?topic=4353.0
+
+   // HACK. See wspiapiwrap.c
 #	define getaddrinfo WspiapiGetAddrInfo
 #	define getnameinfo WspiapiGetNameInfo
 #	define freeaddrinfo WspiapiFreeAddrInfo
@@ -28,6 +31,8 @@ int WINAPI WspiapiGetAddrInfo(const char
 		const struct addrinfo *hints, struct addrinfo **res);
 int WINAPI WspiapiGetNameInfo (const struct sockaddr *sa, socklen_t salen,
 		char *host, size_t hostlen, char *serv, size_t servlen, int flags);
+*/
+#include <wspiapi.h>  //DC: replaced upper section with this part to (hopefully) compile.
 
 #endif  /* _WSPIAPIWRAP_H */
 
diff -ruNp ./src.orig/options.c ./src/options.c
--- ./src.orig/options.c	2017-02-23 12:24:11 -0600
+++ ./src/options.c	2017-02-23 11:15:50 -0600
@@ -52,6 +52,18 @@ int optSmoothScroll;
 int optMeleeScale;
 const char **optAddons;
 
+// Serosis
+BOOLEAN optCheatMode;
+BOOLEAN optGodMode;
+BOOLEAN optTimeDilation;
+BOOLEAN optBubbleWarp;
+BOOLEAN optRoseBud;
+BOOLEAN optUnlockShips;
+BOOLEAN optHeadStart;
+BOOLEAN optUnlockUpgrades;
+BOOLEAN optLanderMods;
+BOOLEAN optFastForward;
+
 BOOLEAN opt3doMusic;
 BOOLEAN optRemixMusic;
 BOOLEAN optSubtitles;
@@ -426,8 +438,7 @@ mountAddonDir (uio_Repository *repositor
 			++count;
 			log_add (log_Info, "    %d. %s", count, addon);
 		
-			snprintf(mountname, 128, "addons/%s", addon);
-			mountname[127]=0;
+			snprintf (mountname, sizeof mountname, "addons/%s", addon);
 
 			addonDir = uio_openDirRelative (addonsDir, addon, 0);
 			if (addonDir == NULL)
diff -ruNp ./src.orig/options.h ./src/options.h
--- ./src.orig/options.h	2017-02-23 12:24:11 -0600
+++ ./src/options.h	2017-02-23 11:15:50 -0600
@@ -38,6 +38,18 @@ extern int optWhichShield;
 extern int optSmoothScroll;
 extern int optMeleeScale;
 
+// Serosis
+extern BOOLEAN optCheatMode;
+extern BOOLEAN optGodMode;
+extern BOOLEAN optTimeDilation;
+extern BOOLEAN optBubbleWarp;
+extern BOOLEAN optRoseBud;
+extern BOOLEAN optUnlockShips;
+extern BOOLEAN optHeadStart;
+extern BOOLEAN optUnlockUpgrades;
+extern BOOLEAN optLanderMods;
+extern BOOLEAN optFastForward;
+
 extern BOOLEAN opt3doMusic;
 extern BOOLEAN optRemixMusic;
 extern BOOLEAN optSubtitles;
diff -ruNp ./src.orig/res/UrQuanMasters.rc ./src/res/UrQuanMasters.rc
--- ./src.orig/res/UrQuanMasters.rc	2017-02-23 12:24:11 -0600
+++ ./src/res/UrQuanMasters.rc	2017-02-23 11:15:50 -0600
@@ -67,10 +67,10 @@ END
 
 // Icon with lowest ID value placed first to ensure application icon
 // remains consistent on all systems.
-SDL_app            ICON    PRELOAD DISCARDABLE "ur-quan-icon-alpha.ico"
+SDL_app            ICON    PRELOAD DISCARDABLE "kohr-ah1.ico"
 102                ICON    DISCARDABLE     "ur-quan-icon-std.ico"
 103                ICON    DISCARDABLE     "ur-quan1.ico"
-104                ICON    DISCARDABLE     "sis1.ico"
+104                ICON    DISCARDABLE     "ur-quan-icon-alpha.ico"
 105                ICON    DISCARDABLE     "ur-quan2.ico"
-106                ICON    DISCARDABLE     "kohr-ah1.ico"
+106                ICON    DISCARDABLE     "sis1.ico"
 107                ICON    DISCARDABLE     "starcon2.ico"
diff -ruNp ./src.orig/uqm/comm/melnorm/melnorm.c ./src/uqm/comm/melnorm/melnorm.c
--- ./src.orig/uqm/comm/melnorm/melnorm.c	2017-02-23 12:24:12 -0600
+++ ./src/uqm/comm/melnorm/melnorm.c	2017-02-23 11:15:51 -0600
@@ -32,7 +32,7 @@
 #include "uqm/planets/planets.h"
 		// for xxx_DISASTER
 #include "uqm/sis.h"
-
+#include "options.h"
 
 #define NUM_HISTORY_ITEMS 9
 #define NUM_EVENT_ITEMS 8
@@ -252,7 +252,10 @@ StripShip (COUNT fuel_required)
 {
 	BYTE i, which_module;
 	SBYTE crew_pods;
-
+	COUNT StorageBayCapacity = STORAGE_BAY_CAPACITY;
+	if(optLanderMods){
+		StorageBayCapacity = StorageBayCapacity <<= 1;
+	}
 	SET_GAME_STATE (MELNORME_RESCUE_REFUSED, 0);
 
 	crew_pods = -(SBYTE)(
@@ -322,10 +325,7 @@ StripShip (COUNT fuel_required)
 		if (fuel_required > capacity)
 			fuel_required = capacity;
 
-		bays = -(SBYTE)(
-				(SIS_copy.TotalElementMass + STORAGE_BAY_CAPACITY - 1)
-				/ STORAGE_BAY_CAPACITY
-				);
+		bays = -(SBYTE)( (SIS_copy.TotalElementMass + StorageBayCapacity - 1) / StorageBayCapacity );
 		for (i = 0; i < NUM_MODULE_SLOTS; ++i)
 		{
 			which_module = SIS_copy.ModuleSlots[i];
@@ -1321,6 +1321,10 @@ NatureOfConversation (RESPONSE_REF R)
 				break;
 		}
 		SET_GAME_STATE (MELNORME_YACK_STACK2, stack + 5);
+		// Tying in the purple question with a Credit/R.U. cheat
+		if (optRoseBud){
+			SET_GAME_STATE (WHY_MELNORME_PURPLE, 0); // This is to make sure that the purple question shows up.
+		} // Serosis
 	}
 
 	rainbow_mask = MAKE_WORD (
@@ -1360,7 +1364,19 @@ NatureOfConversation (RESPONSE_REF R)
 		}
 		else if (PLAYER_SAID (R, why_turned_purple))
 		{
-			SET_GAME_STATE (WHY_MELNORME_PURPLE, 1);
+			if (optRoseBud){
+				SET_GAME_STATE (WHY_MELNORME_PURPLE, 0); // Setting this to 0 makes sure the question is repeatable
+				DeltaCredit(1000); // Adds 1000 Credits
+				GLOBAL_SIS (ResUnits) += 1000; // Adds 1000 R.U.
+				// Make sure the RU/credit amount is redrawn:
+				if (LOBYTE (GLOBAL (CurrentActivity)) == IN_HYPERSPACE || LOBYTE (GLOBAL (CurrentActivity)) == IN_INTERPLANETARY) {
+					LockMutex (GraphicsLock);
+					DrawStatusMessage (NULL);
+					UnlockMutex (GraphicsLock);
+				}
+			} else {
+				SET_GAME_STATE (WHY_MELNORME_PURPLE, 1);
+			} // Serosis
 
 			NPCPhrase (TURNED_PURPLE_BECAUSE);
 		}
diff -ruNp ./src.orig/uqm/comm/thradd/thraddc.c ./src/uqm/comm/thradd/thraddc.c
--- ./src.orig/uqm/comm/thradd/thraddc.c	2017-02-23 12:24:12 -0600
+++ ./src/uqm/comm/thradd/thraddc.c	2017-02-23 11:15:51 -0600
@@ -695,6 +695,8 @@ static void
 Intro (void)
 {
 	BYTE NumVisits;
+	HFLEETINFO hThradd = GetStarShipFromIndex (&GLOBAL (avail_race_q), THRADDASH_SHIP);
+	FLEET_INFO *ThraddPtr = LockFleetInfo (&GLOBAL (avail_race_q), hThradd);
 
 	if (LOBYTE (GLOBAL (CurrentActivity)) == WON_LAST_BATTLE)
 	{
@@ -704,7 +706,7 @@ Intro (void)
 		return;
 	}
 
-	if (GET_GAME_STATE (AQUA_HELIX))
+	if (GET_GAME_STATE (AQUA_HELIX) && ThraddPtr->allied_state != GOOD_GUY)
 	{
 		NumVisits = GET_GAME_STATE (HELIX_VISITS);
 		switch (NumVisits++)
diff -ruNp ./src.orig/uqm/fmv.c ./src/uqm/fmv.c
--- ./src.orig/uqm/fmv.c	2017-02-23 12:24:13 -0600
+++ ./src/uqm/fmv.c	2017-02-23 11:15:52 -0600
@@ -132,5 +132,17 @@ Victory (void)
 	FadeScreen (FadeAllToBlack, 0);
 }
 
+void
+Logo (void)
+{
+	ShowPresentation (LOGOPRES_STRTAB);
+	SleepThreadUntil (FadeScreen (FadeAllToBlack, ONE_SECOND / 2));
+}
 
+void
+Drumall (void)
+{
+	ShowPresentation (DRUMALLPRES_STRTAB);
+	SleepThreadUntil (FadeScreen (FadeAllToBlack, ONE_SECOND / 2));
+}
 
diff -ruNp ./src.orig/uqm/fmv.h ./src/uqm/fmv.h
--- ./src.orig/uqm/fmv.h	2017-02-23 12:24:13 -0600
+++ ./src/uqm/fmv.h	2017-02-23 11:15:52 -0600
@@ -26,6 +26,8 @@ extern void SplashScreen (void (* DoProc
 extern void Introduction (void);
 extern void Victory (void);
 extern void DoShipSpin (COUNT index, MUSIC_REF hMusic);
+extern void Logo (void);
+extern void Drumall (void);
 
 extern BOOLEAN ShowPresentation (RESOURCE presentation);
 
diff -ruNp ./src.orig/uqm/gameev.c ./src/uqm/gameev.c
--- ./src.orig/uqm/gameev.c	2017-02-23 12:24:13 -0600
+++ ./src/uqm/gameev.c	2017-02-23 11:15:52 -0600
@@ -25,7 +25,7 @@
 #include "hyper.h"
 #include "libs/compiler.h"
 #include "libs/mathlib.h"
-
+#include "options.h"
 
 static void arilou_entrance_event (void);
 static void arilou_exit_event (void);
@@ -40,6 +40,8 @@ static void mycon_mission (void);
 
 void
 AddInitialGameEvents (void) {
+	COUNT kohrah_winning_years = optCheatMode ? YEARS_TO_KOHRAH_VICTORY + 25 : YEARS_TO_KOHRAH_VICTORY;
+
 	AddEvent (RELATIVE_EVENT, 0, 1, 0, HYPERSPACE_ENCOUNTER_EVENT);
 	AddEvent (ABSOLUTE_EVENT, 3, 17, START_YEAR, ARILOU_ENTRANCE_EVENT);
 	AddEvent (RELATIVE_EVENT, 0, 0, YEARS_TO_KOHRAH_VICTORY,
@@ -146,6 +148,7 @@ EventHandler (BYTE selector)
 				if (SpathiPtr->actual_strength)
 				{
 					ActivateStarShip (SPATHI_SHIP, SET_NOT_ALLIED);
+					ActivateStarShip (SPATHI_SHIP, REMOVE_BUILT);
 					SET_GAME_STATE (SPATHI_SHIELDED_SELVES, 1);
 					SpathiPtr->actual_strength = 0;
 				}
@@ -388,6 +391,9 @@ black_urquan_genocide (void)
 		else if (speed > 255)
 			speed = 255;
 
+		if (optCheatMode)
+			speed = 0;
+
 		SET_GAME_STATE (KOHR_AH_FRENZY, 1);
 		SET_GAME_STATE (KOHR_AH_VISITS, 0);
 		SET_GAME_STATE (KOHR_AH_REASONS, 0);
@@ -526,76 +532,63 @@ thradd_mission (void)
 static void
 ilwrath_mission (void)
 {
-	BYTE ThraddState;
-	HFLEETINFO hIlwrath, hThradd;
-	FLEET_INFO *IlwrathPtr;
-	FLEET_INFO *ThraddPtr;
+	COUNT MaddLength = 128;
+	SIZE strength_loss;
+	BYTE ThraddState = GET_GAME_STATE (THRADD_MISSION);
+	HFLEETINFO	hIlwrath = GetStarShipFromIndex (&GLOBAL (avail_race_q), ILWRATH_SHIP),
+				hThradd = GetStarShipFromIndex (&GLOBAL (avail_race_q), THRADDASH_SHIP);
+	FLEET_INFO	*IlwrathPtr = LockFleetInfo (&GLOBAL (avail_race_q), hIlwrath), 
+				*ThraddPtr = LockFleetInfo (&GLOBAL (avail_race_q), hThradd);
 
-	hIlwrath = GetStarShipFromIndex (&GLOBAL (avail_race_q), ILWRATH_SHIP);
-	IlwrathPtr = LockFleetInfo (&GLOBAL (avail_race_q), hIlwrath);
-	hThradd = GetStarShipFromIndex (&GLOBAL (avail_race_q), THRADDASH_SHIP);
-	ThraddPtr = LockFleetInfo (&GLOBAL (avail_race_q), hThradd);
-
-	if (IlwrathPtr->loc.x == ((2500 + 2535) >> 1)
-			&& IlwrathPtr->loc.y == ((8070 + 8358) >> 1))
-	{
+	if (IlwrathPtr->loc.x == ((2500 + 2535) >> 1) && IlwrathPtr->loc.y == ((8070 + 8358) >> 1)) { // What is with the silly math?
 		IlwrathPtr->actual_strength = 0;
-		ThraddPtr->actual_strength = 0;
 		IlwrathPtr->allied_state = DEAD_GUY;
-		ThraddPtr->allied_state = DEAD_GUY;
-	}
-	else if (IlwrathPtr->actual_strength)
-	{
-		if (!GET_GAME_STATE (ILWRATH_FIGHT_THRADDASH)
-				&& (IlwrathPtr->dest_loc.x != 2500
-				|| IlwrathPtr->dest_loc.y != 8070))
-		{
-			SetRaceDest (ILWRATH_SHIP, 2500, 8070, 90,
-					ADVANCE_ILWRATH_MISSION);
-		}
-		else
-		{
-#define MADD_LENGTH 128
-			SIZE strength_loss;
-
-			if (IlwrathPtr->days_left == 0)
-			{	/* arrived for battle */
+		if(ThraddPtr->allied_state != GOOD_GUY){
+			ThraddPtr->actual_strength = 0;
+			ThraddPtr->allied_state = DEAD_GUY;
+		}
+	} else if (IlwrathPtr->actual_strength) {
+		if (!GET_GAME_STATE (ILWRATH_FIGHT_THRADDASH) && (IlwrathPtr->dest_loc.x != 2500 || IlwrathPtr->dest_loc.y != 8070)) {
+			SetRaceDest (ILWRATH_SHIP, 2500, 8070, 90, ADVANCE_ILWRATH_MISSION); //90
+		} else {
+			if (IlwrathPtr->days_left == 0) {	/* arrived for battle */
 				SET_GAME_STATE (ILWRATH_FIGHT_THRADDASH, 1);
 				SET_GAME_STATE (HELIX_UNPROTECTED, 1);
 				strength_loss = (SIZE)IlwrathPtr->actual_strength;
-				IlwrathPtr->growth = (BYTE)(-strength_loss / MADD_LENGTH);
-				IlwrathPtr->growth_fract =
-						(BYTE)(((strength_loss % MADD_LENGTH) << 8) / MADD_LENGTH);
-				SetRaceDest (ILWRATH_SHIP,
-						(2500 + 2535) >> 1, (8070 + 8358) >> 1,
-						MADD_LENGTH - 1, ADVANCE_ILWRATH_MISSION);
-
-				strength_loss = (SIZE)ThraddPtr->actual_strength;
-				ThraddPtr->growth = (BYTE)(-strength_loss / MADD_LENGTH);
-				ThraddPtr->growth_fract =
-						(BYTE)(((strength_loss % MADD_LENGTH) << 8) / MADD_LENGTH);
-
-				SET_GAME_STATE (THRADD_VISITS, 0);
-				if (ThraddPtr->allied_state == GOOD_GUY)
-					ActivateStarShip (THRADDASH_SHIP, SET_NOT_ALLIED);
-			}
-
-			ThraddState = GET_GAME_STATE (THRADD_MISSION);
-			if (ThraddState == 0 || ThraddState > 3)
-			{	/* never went to Kohr-Ah or returned */
-				SetRaceDest (THRADDASH_SHIP,
-						(2500 + 2535) >> 1, (8070 + 8358) >> 1,
-						IlwrathPtr->days_left + 1, (BYTE)~0);
-			}
-			else if (ThraddState < 3)
-			{	/* recall on the double */
-				SetRaceDest (THRADDASH_SHIP, 2535, 8358, 10,
-						ADVANCE_THRADD_MISSION);
+				IlwrathPtr->growth = (BYTE)(-strength_loss / MaddLength);
+				IlwrathPtr->growth_fract = (BYTE)(((strength_loss % MaddLength) << 8) / MaddLength);
+				SetRaceDest (ILWRATH_SHIP, 2517, 8214, MaddLength - 1, ADVANCE_ILWRATH_MISSION);
+
+				if (ThraddPtr->allied_state == GOOD_GUY){
+					strength_loss = (SIZE)(ThraddPtr->actual_strength * 0.25); // Smarterer math
+					ThraddPtr->growth = (BYTE)(-strength_loss / MaddLength);
+					ThraddPtr->growth_fract = (BYTE)(((strength_loss % MaddLength) << 8) / MaddLength);
+					ThraddPtr->growth_err_term = 255 >> 1;
+				} else {
+					SET_GAME_STATE (THRADD_VISITS, 0);
+					strength_loss = (SIZE)ThraddPtr->actual_strength;
+					ThraddPtr->growth = (BYTE)(-strength_loss / MaddLength);
+					ThraddPtr->growth_fract = (BYTE)(((strength_loss % MaddLength) << 8) / MaddLength);
+				}
+			}
+
+			if (ThraddState == 0 || ThraddState > 3) {	/* never went to Kohr-Ah or returned */
+				SetRaceDest (THRADDASH_SHIP, (2500 + 2535) >> 1, (8070 + 8358) >> 1, IlwrathPtr->days_left + 1, (BYTE)~0);
+			} else if (ThraddState < 3) {	/* recall on the double */
+				SetRaceDest (THRADDASH_SHIP, 2535, 8358, 10, ADVANCE_THRADD_MISSION);
 				SET_GAME_STATE (THRADD_MISSION, 3);
 			}
 		}
 	}
-
+	if(ThraddPtr->allied_state == GOOD_GUY && !IlwrathPtr->actual_strength){		
+		ThraddPtr->growth = 0;
+		ThraddPtr->growth_fract = 0;
+		SET_GAME_STATE (ILWRATH_FIGHT_THRADDASH, 0);		
+		SetRaceDest (THRADDASH_SHIP, 2535, 8358, 3, (BYTE)~0);
+		if(!GET_GAME_STATE(AQUA_HELIX)){
+			SET_GAME_STATE (HELIX_UNPROTECTED, 0);
+		}
+	}
 	UnlockFleetInfo (&GLOBAL (avail_race_q), hThradd);
 	UnlockFleetInfo (&GLOBAL (avail_race_q), hIlwrath);
 }
diff -ruNp ./src.orig/uqm/gameinp.c ./src/uqm/gameinp.c
--- ./src.orig/uqm/gameinp.c	2017-02-23 12:24:13 -0600
+++ ./src/uqm/gameinp.c	2017-02-23 11:53:12 -0600
@@ -31,7 +31,7 @@
 #include "libs/inplib.h"
 #include "libs/timelib.h"
 #include "libs/threadlib.h"
-
+#include "setup.h"
 
 #define ACCELERATION_INCREMENT (ONE_SECOND / 12)
 #define MENU_REPEAT_DELAY (ONE_SECOND / 2)
@@ -432,10 +432,18 @@ ControlInputToBattleInput (const int *ke
 		InputState |= BATTLE_LEFT;
 	if (keyState[KEY_RIGHT])
 		InputState |= BATTLE_RIGHT;
-	if (keyState[KEY_WEAPON])
+	if (keyState[KEY_WEAPON]){
+		if (optGodMode && PlayerControl[1] & COMPUTER_CONTROL){
+			resetEnergyBattle();
+		}
 		InputState |= BATTLE_WEAPON;
-	if (keyState[KEY_SPECIAL])
+	}
+	if (keyState[KEY_SPECIAL]){
+		if (optGodMode && PlayerControl[1] & COMPUTER_CONTROL){
+			resetEnergyBattle();
+		}
 		InputState |= BATTLE_SPECIAL;
+	}
 	if (keyState[KEY_ESCAPE])
 		InputState |= BATTLE_ESCAPE;
 	if (keyState[KEY_DOWN])
diff -ruNp ./src.orig/uqm/gameopt.c ./src/uqm/gameopt.c
--- ./src.orig/uqm/gameopt.c	2017-02-23 12:24:13 -0600
+++ ./src/uqm/gameopt.c	2017-02-23 11:15:52 -0600
@@ -40,7 +40,7 @@
 
 extern FRAME PlayFrame;
 
-#define MAX_SAVED_GAMES 50
+#define MAX_SAVED_GAMES 100
 #define SUMMARY_X_OFFS 14
 #define SUMMARY_SIDE_OFFS 7
 #define SAVES_PER_PAGE 5
diff -ruNp ./src.orig/uqm/globdata.c ./src/uqm/globdata.c
--- ./src.orig/uqm/globdata.c	2017-02-23 12:24:13 -0600
+++ ./src/uqm/globdata.c	2017-02-23 11:15:52 -0600
@@ -30,12 +30,12 @@
 #include "state.h"
 #include "grpinfo.h"
 #include "gamestr.h"
-
+#include "options.h"
 #include <stdlib.h>
 #ifdef STATE_DEBUG
 #	include "libs/log.h"
 #endif
-
+#include "uqmdebug.h"
 
 static void CreateRadar (void);
 
@@ -285,26 +285,59 @@ InitGameStructures (void)
 	GLOBAL (ElementWorth[PRECIOUS]) = 6;
 	GLOBAL_SIS (ElementAmounts[PRECIOUS]) = 0;
 	GLOBAL (ElementWorth[RADIOACTIVE]) = 8;
-	GLOBAL_SIS (ElementAmounts[RADIOACTIVE]) = 0;
+	if (optHeadStart){
+		GLOBAL_SIS (ElementAmounts[RADIOACTIVE]) = 1000;
+		GLOBAL_SIS (TotalElementMass) = 1000;
+		GLOBAL_SIS (TotalBioMass) += 1000;
+	} else {
+		GLOBAL_SIS (ElementAmounts[RADIOACTIVE]) = 0;
+	}
 	GLOBAL (ElementWorth[EXOTIC]) = 25;
 	GLOBAL_SIS (ElementAmounts[EXOTIC]) = 0;
 
-	for (i = 0; i < NUM_DRIVE_SLOTS; ++i)
-		GLOBAL_SIS (DriveSlots[i]) = EMPTY_SLOT + 0;
-	GLOBAL_SIS (DriveSlots[5]) =
-			GLOBAL_SIS (DriveSlots[6]) = FUSION_THRUSTER;
-	for (i = 0; i < NUM_JET_SLOTS; ++i)
-		GLOBAL_SIS (JetSlots[i]) = EMPTY_SLOT + 1;
-	GLOBAL_SIS (JetSlots[0]) =
-			GLOBAL_SIS (JetSlots[6]) = TURNING_JETS;
-	for (i = 0; i < NUM_MODULE_SLOTS; ++i)
-		GLOBAL_SIS (ModuleSlots[i]) = EMPTY_SLOT + 2;
-	GLOBAL_SIS (ModuleSlots[15]) = GUN_WEAPON;
-	GLOBAL_SIS (ModuleSlots[2]) = CREW_POD;
-	GLOBAL_SIS (CrewEnlisted) = CREW_POD_CAPACITY;
-	GLOBAL_SIS (ModuleSlots[8]) = STORAGE_BAY;
-	GLOBAL_SIS (ModuleSlots[1]) = FUEL_TANK;
-	GLOBAL_SIS (FuelOnBoard) = 10 * FUEL_TANK_SCALE;
+	if (optHeadStart){		
+		for (i = 0; i < NUM_DRIVE_SLOTS; i++)
+			GLOBAL_SIS (DriveSlots[i]) = FUSION_THRUSTER;
+		for (i = 0; i < NUM_JET_SLOTS; i++)
+			GLOBAL_SIS (JetSlots[i]) = TURNING_JETS;
+		for (i = 0; i < NUM_MODULE_SLOTS; ++i)
+			GLOBAL_SIS (ModuleSlots[i]) = EMPTY_SLOT + 2;
+		GLOBAL_SIS (ModuleSlots[0]) = FUEL_TANK;
+		GLOBAL_SIS (ModuleSlots[1]) = FUEL_TANK;
+		GLOBAL_SIS (ModuleSlots[2]) = CREW_POD;
+		GLOBAL_SIS (ModuleSlots[3]) = CREW_POD;
+		GLOBAL_SIS (ModuleSlots[4]) = STORAGE_BAY;
+		GLOBAL_SIS (ModuleSlots[5]) = STORAGE_BAY;
+		//GLOBAL_SIS (ModuleSlots[6]);
+		//GLOBAL_SIS (ModuleSlots[7]);
+		//GLOBAL_SIS (ModuleSlots[8]);
+		//GLOBAL_SIS (ModuleSlots[9]);
+		GLOBAL_SIS (ModuleSlots[10]) = DYNAMO_UNIT;
+		GLOBAL_SIS (ModuleSlots[11]) = DYNAMO_UNIT;
+		GLOBAL_SIS (ModuleSlots[12]) = DYNAMO_UNIT;
+		GLOBAL_SIS (ModuleSlots[13]) = DYNAMO_UNIT;
+		GLOBAL_SIS (ModuleSlots[14]) = GUN_WEAPON;
+		GLOBAL_SIS (ModuleSlots[15]) = GUN_WEAPON;
+		GLOBAL_SIS (FuelOnBoard) = 110 * FUEL_TANK_SCALE;
+		GLOBAL_SIS (CrewEnlisted) = 100;
+	} else {
+		for (i = 0; i < NUM_DRIVE_SLOTS; ++i)
+			GLOBAL_SIS (DriveSlots[i]) = EMPTY_SLOT + 0;
+		GLOBAL_SIS (DriveSlots[5]) =
+				GLOBAL_SIS (DriveSlots[6]) = FUSION_THRUSTER;
+		for (i = 0; i < NUM_JET_SLOTS; ++i)
+			GLOBAL_SIS (JetSlots[i]) = EMPTY_SLOT + 1;
+		GLOBAL_SIS (JetSlots[0]) =
+				GLOBAL_SIS (JetSlots[6]) = TURNING_JETS;
+		for (i = 0; i < NUM_MODULE_SLOTS; ++i)
+			GLOBAL_SIS (ModuleSlots[i]) = EMPTY_SLOT + 2;
+		GLOBAL_SIS (ModuleSlots[15]) = GUN_WEAPON;
+		GLOBAL_SIS (ModuleSlots[2]) = CREW_POD;
+		GLOBAL_SIS (CrewEnlisted) = CREW_POD_CAPACITY;
+		GLOBAL_SIS (ModuleSlots[8]) = STORAGE_BAY;
+		GLOBAL_SIS (ModuleSlots[1]) = FUEL_TANK;
+		GLOBAL_SIS (FuelOnBoard) = 10 * FUEL_TANK_SCALE;
+	}
 
 	InitQueue (&GLOBAL (built_ship_q),
 			MAX_BUILT_SHIPS, sizeof (SHIP_FRAGMENT));
@@ -328,7 +361,11 @@ InitGameStructures (void)
 	GLOBAL (ModuleCost[DYNAMO_UNIT]) = 2000 / MODULE_COST_SCALE;
 	GLOBAL (ModuleCost[GUN_WEAPON]) = 2000 / MODULE_COST_SCALE;
 
-	GLOBAL_SIS (NumLanders) = 1;
+	if (optHeadStart){
+		GLOBAL_SIS (NumLanders) = MAX_LANDERS;
+	} else {
+		GLOBAL_SIS (NumLanders) = 1;
+	}
 
 	utf8StringCopy (GLOBAL_SIS (ShipName), sizeof (GLOBAL_SIS (ShipName)),
 			GAME_STRING (NAMING_STRING_BASE + 2));
diff -ruNp ./src.orig/uqm/istrtab.h ./src/uqm/istrtab.h
--- ./src.orig/uqm/istrtab.h	2017-02-23 12:24:13 -0600
+++ ./src/uqm/istrtab.h	2017-02-23 11:15:52 -0600
@@ -37,6 +37,7 @@
 #define CYANIC_XLAT_TAB "planet.cyanic.translatetable"
 #define CYA_GAS_COLOR_TAB "planet.cyangas.colortable"
 #define CYA_GAS_XLAT_TAB "planet.cyangas.translatetable"
+#define DRUMALLPRES_STRTAB "slides.drumall"
 #define DRUUGE_RUINS_STRTAB "text.sphere"
 #define DUST_COLOR_TAB "planet.dust.colortable"
 #define DUST_XLAT_TAB "planet.dust.translatetable"
@@ -67,6 +68,7 @@
 #define JOYSTICK_ALPHA_STRTAB "text.joyalpha"
 #define LANTHANIDE_COLOR_TAB "planet.lanthanide.colortable"
 #define LANTHANIDE_XLAT_TAB "planet.lanthanide.translatetable"
+#define LOGOPRES_STRTAB "slides.logo"
 #define MAGMA_COLOR_TAB "planet.magma.colortable"
 #define MAGMA_XLAT_TAB "planet.magma.translatetable"
 #define MAGNETIC_COLOR_TAB "planet.magnetic.colortable"
diff -ruNp ./src.orig/uqm/misc.c ./src/uqm/misc.c
--- ./src.orig/uqm/misc.c	2017-02-23 12:24:13 -0600
+++ ./src/uqm/misc.c	2017-02-23 11:57:13 -0600
@@ -25,7 +25,9 @@
 #include "sounds.h"
 #include "weapon.h"
 #include "libs/mathlib.h"
-
+#include "options.h" // For God Mode invincibility
+#include "settings.h"
+#include "intel.h"
 
 void
 spawn_planet (void)
@@ -194,6 +196,10 @@ spawn_asteroid (ELEMENT *ElementPtr)
 void
 do_damage (ELEMENT *ElementPtr, SIZE damage)
 {
+	// God Mode, borrowed from the UQM-HD debug invincibility code
+	if (optGodMode && PlayerControl[1] & COMPUTER_CONTROL && ElementPtr->playerNr == 0){
+		damage = 0;
+	}
 	if (ElementPtr->state_flags & PLAYER_SHIP)
 	{
 		if (!DeltaCrew (ElementPtr, -damage))
diff -ruNp ./src.orig/uqm/outfit.c ./src/uqm/outfit.c
--- ./src.orig/uqm/outfit.c	2017-02-23 12:24:13 -0600
+++ ./src/uqm/outfit.c	2017-02-23 11:15:52 -0600
@@ -182,6 +182,10 @@ DoInstallModule (MENU_STATE *pMS)
 	BYTE NewState, new_slot_piece, old_slot_piece;
 	SIZE FirstItem, LastItem;
 	BOOLEAN select, cancel, motion;
+	COUNT StorageBayCapacity = STORAGE_BAY_CAPACITY;
+	if(optLanderMods){
+		StorageBayCapacity = StorageBayCapacity <<= 1;
+	}
 
 	if (GLOBAL (CurrentActivity) & CHECK_ABORT)
 	{
@@ -290,7 +294,7 @@ DoInstallModule (MENU_STATE *pMS)
 				}
 				else if (old_slot_piece == STORAGE_BAY)
 				{
-					if (GLOBAL_SIS (TotalElementMass) > STORAGE_BAY_CAPACITY
+					if (GLOBAL_SIS (TotalElementMass) > StorageBayCapacity
 							* (CountSISPieces (STORAGE_BAY) - 1))
 					{	// storage bay still needed for the cargo
 						PlayMenuSound (MENU_SOUND_FAILURE);
diff -ruNp ./src.orig/uqm/planets/generate/genthrad.c ./src/uqm/planets/generate/genthrad.c
--- ./src.orig/uqm/planets/generate/genthrad.c	2017-02-23 12:24:14 -0600
+++ ./src/uqm/planets/generate/genthrad.c	2017-02-23 11:15:52 -0600
@@ -189,6 +189,10 @@ static bool
 GenerateThraddash_pickupEnergy (SOLARSYS_STATE *solarSys, PLANET_DESC *world,
 		COUNT whichNode)
 {
+	HFLEETINFO hThradd = GetStarShipFromIndex (&GLOBAL (avail_race_q), THRADDASH_SHIP);
+	FLEET_INFO *ThraddPtr = LockFleetInfo (&GLOBAL (avail_race_q), hThradd);
+	SIZE strength_loss;
+
 	if (CurStarDescPtr->Index == THRADD_DEFINED
 			&& matchWorld (solarSys, world, 0, MATCH_PLANET))
 	{
@@ -209,7 +213,14 @@ GenerateThraddash_pickupEnergy (SOLARSYS
 		SET_GAME_STATE (AQUA_HELIX, 1);
 		SET_GAME_STATE (AQUA_HELIX_ON_SHIP, 1);
 		SET_GAME_STATE (HELIX_UNPROTECTED, 1);
-
+		if (GET_GAME_STATE (ILWRATH_FIGHT_THRADDASH)){
+			ActivateStarShip (THRADDASH_SHIP, SET_NOT_ALLIED);
+			ActivateStarShip (THRADDASH_SHIP, REMOVE_BUILT);
+			strength_loss = (SIZE)(ThraddPtr->actual_strength);
+			ThraddPtr->growth = (BYTE)(-strength_loss / ThraddPtr->days_left);
+			ThraddPtr->growth_fract = (BYTE)(((strength_loss % ThraddPtr->days_left) << 8) / ThraddPtr->days_left);
+			SET_GAME_STATE (THRADD_VISITS, 0);
+		}
 		return true; // picked up
 	}
 
diff -ruNp ./src.orig/uqm/planets/lander.c ./src/uqm/planets/lander.c
--- ./src.orig/uqm/planets/lander.c	2017-02-23 12:24:14 -0600
+++ ./src/uqm/planets/lander.c	2017-02-23 11:15:53 -0600
@@ -36,7 +36,7 @@
 #include "libs/graphics/gfx_common.h"
 #include "libs/mathlib.h"
 #include "libs/log.h"
-
+#include "options.h"
 
 //define SPIN_ON_LAUNCH to let the planet spin while
 // the lander animation is playing
@@ -453,8 +453,8 @@ DeltaLanderCrew (SIZE crew_delta, COUNT
 		shieldHit &= 1 << which_disaster;
 		if (!shieldHit || TFB_Random () % 100 >= 95)
 		{	// No shield, or it did not help
-			shieldHit = 0;
-			--crew_left;
+			if (!optGodMode){ shieldHit=0; --crew_left; }
+			else { shieldHit=1; }
 		}
 
 		damage_index = DAMAGE_CYCLE;
@@ -555,7 +555,7 @@ pickupMineralNode (PLANETSIDE_DESC *pPSD
 	pPSD->ElementAmounts[ElementCategory (EType)] += NumRetrieved;
 
 	pPSD->NumFrames = NUM_TEXT_FRAMES;
-	sprintf (pPSD->AmountBuf, "%u", NumRetrieved);
+	sprintf (pPSD->AmountBuf, "%u", NumRetrieved/2);
 	pStr = GAME_STRING (EType + ELEMENTS_STRING_BASE);
 
 	pPSD->MineralText[0].baseline.x = (SURFACE_WIDTH >> 1)
@@ -588,6 +588,11 @@ pickupMineralNode (PLANETSIDE_DESC *pPSD
 static bool
 pickupBioNode (PLANETSIDE_DESC *pPSD, COUNT NumRetrieved)
 {
+	COUNT MaxScrounged = MAX_SCROUNGED;
+	if(optLanderMods){
+		MaxScrounged = MaxScrounged <<= 1;
+	}
+	if (pPSD->BiologicalLevel >= MaxScrounged)
 	if (pPSD->BiologicalLevel >= MAX_SCROUNGED)
 	{
 		// Lander is full.
@@ -596,10 +601,10 @@ pickupBioNode (PLANETSIDE_DESC *pPSD, CO
 		return false;
 	}
 
-	if (pPSD->BiologicalLevel + NumRetrieved > MAX_SCROUNGED)
+	if (pPSD->BiologicalLevel + NumRetrieved > MaxScrounged)
 	{
 		// Node could only be picked up partially.
-		NumRetrieved = (COUNT)(MAX_SCROUNGED - pPSD->BiologicalLevel);
+		NumRetrieved = (COUNT)(MaxScrounged - pPSD->BiologicalLevel);
 	}
 
 	FillLanderHold (pPSD, BIOLOGICAL_SCAN, NumRetrieved);
@@ -1404,15 +1409,20 @@ InitPlanetSide (POINT pt)
 {
 	// Adjust landing location by a random jitter.
 #define RANDOM_MISS 64
+	if(!optLanderMods){
+		pt.x -= RANDOM_MISS - TFB_Random () % (RANDOM_MISS << 1);
+		pt.y -= RANDOM_MISS - TFB_Random () % (RANDOM_MISS << 1);
+	} else { 
+		pt.x -= 0;
+		pt.y -= 0;
+	}
 	// Jitter the X landing point.
-	pt.x -= RANDOM_MISS - TFB_Random () % (RANDOM_MISS << 1);
 	if (pt.x < 0)
 		pt.x += (MAP_WIDTH << MAG_SHIFT);
 	else if (pt.x >= (MAP_WIDTH << MAG_SHIFT))
 		pt.x -= (MAP_WIDTH << MAG_SHIFT);
 
 	// Jitter the Y landing point.
-	pt.y -= RANDOM_MISS - TFB_Random () % (RANDOM_MISS << 1);
 	if (pt.y < 0)
 		pt.y = 0;
 	else if (pt.y >= (MAP_HEIGHT << MAG_SHIFT))
@@ -1866,7 +1876,10 @@ PlanetSide (POINT planetLoc)
 	BYTE TectonicsChanceTab[] = {0*3, 0*3, 1*3, 2*3, 4*3, 8*3, 16*3, 32*3};
 	BYTE WeatherChanceTab[] = {0*3, 0*3, 1*3, 2*3, 3*3, 6*3, 12*3, 24*3};
 	BYTE FireChanceTab[] = {0*3, 0*3, 1*3, 2*3, 4*3, 12*3, 24*3, 48*3};
-
+	COUNT MaxScrounged = MAX_SCROUNGED;
+	if(optLanderMods){
+		MaxScrounged = MaxScrounged <<= 1;
+	}
 	memset (&PSD, 0, sizeof (PSD));
 	PSD.InTransit = TRUE;
 
@@ -1893,7 +1906,7 @@ PlanetSide (POINT planetLoc)
 		PSD.FireChance = FireChanceTab[7];
 
 	PSD.ElementLevel = GetStorageBayCapacity () - GLOBAL_SIS (TotalElementMass);
-	PSD.MaxElementLevel = MAX_SCROUNGED;
+	PSD.MaxElementLevel = MaxScrounged;
 	if (GET_GAME_STATE (IMPROVED_LANDER_CARGO))
 		PSD.MaxElementLevel <<= 1;
 	if (PSD.ElementLevel < PSD.MaxElementLevel)
@@ -2017,6 +2030,10 @@ void
 InitLander (BYTE LanderFlags)
 {
 	RECT r;
+	COUNT MaxScrounged = MAX_SCROUNGED;
+	if(optLanderMods){
+		MaxScrounged = MaxScrounged <<= 1;
+	}
 
 	LockMutex (GraphicsLock);
 
@@ -2083,11 +2100,11 @@ InitLander (BYTE LanderFlags)
 		}
 
 		free_space = GetStorageBayCapacity () - GLOBAL_SIS (TotalElementMass);
-		if ((int)free_space < (int)(MAX_SCROUNGED << capacity_shift))
+		if ((int)free_space < (int)(MaxScrounged << capacity_shift))
 		{
 			r.corner.x = 1;
 			r.extent.width = 4;
-			r.extent.height = MAX_SCROUNGED
+			r.extent.height = MaxScrounged
 					- (free_space >> capacity_shift) + 1;
 			SetContextForeGroundColor (BLACK_COLOR);
 			DrawFilledRectangle (&r);
diff -ruNp ./src.orig/uqm/planets/pstarmap.c ./src/uqm/planets/pstarmap.c
--- ./src.orig/uqm/planets/pstarmap.c	2017-02-23 12:24:14 -0600
+++ ./src/uqm/planets/pstarmap.c	2017-02-23 11:15:53 -0600
@@ -1263,8 +1263,8 @@ DoMoveCursor (MENU_STATE *pMS)
 	else if (PulsedInputState.menu[KEY_MENU_SELECT])
 	{
 		GLOBAL (autopilot) = cursorLoc;
-#ifdef DEBUG
-		if (instantMove)
+//#ifdef DEBUG
+		if (optBubbleWarp)
 		{
 			PlayMenuSound (MENU_SOUND_INVOKED);
 
@@ -1283,8 +1283,8 @@ DoMoveCursor (MENU_STATE *pMS)
 			}
 
 			return FALSE;
-		}
-#endif
+		} // Serosis
+//#endif
 		DrawStarMap (0, NULL);
 	}
 	else if (PulsedInputState.menu[KEY_MENU_SEARCH])
diff -ruNp ./src.orig/uqm/planets/scan.c ./src/uqm/planets/scan.c
--- ./src.orig/uqm/planets/scan.c	2017-02-23 12:24:14 -0600
+++ ./src/uqm/planets/scan.c	2017-02-23 11:15:53 -0600
@@ -1343,7 +1343,10 @@ GeneratePlanetSide (void)
 			// life_init_tab is filled with the creature types of already
 			// selected creatures. If an entry is 0, none has been selected
 			// yet, otherwise, it is 1 more than the creature type.
-
+	COUNT MaxScrounged = MAX_SCROUNGED;
+	if(optLanderMods){
+		MaxScrounged = MaxScrounged <<= 1;
+	}
 	InitDisplayList ();
 	if (pSolarSysState->pOrbitalDesc->data_index & PLANET_SHIELDED)
 		return;
@@ -1414,7 +1417,7 @@ GeneratePlanetSide (void)
 				NodeElementPtr->preprocess_func = object_animation;
 				if (scan == ENERGY_SCAN)
 				{
-					NodeElementPtr->mass_points = MAX_SCROUNGED;
+					NodeElementPtr->mass_points = MaxScrounged;
 					DisplayArray[NodeElementPtr->PrimIndex].Object.Stamp.frame =
 							pSolarSysState->PlanetSideFrame[1];
 				}
diff -ruNp ./src.orig/uqm/races.h ./src/uqm/races.h
--- ./src.orig/uqm/races.h	2017-02-23 12:24:14 -0600
+++ ./src/uqm/races.h	2017-02-23 12:04:00 -0600
@@ -586,7 +586,7 @@ enum
 		 0,  /* URQUAN_DRONE_SHIP */
 
 #define RACE_INTERPLANETARY_PERCENT \
-		 0,  /* ARILOU_SHIP */ \
+		 5,  /* ARILOU_SHIP */ \
 		 0,  /* CHMMR_SHIP */ \
 		 0,  /* HUMAN_SHIP */ \
 		20,  /* ORZ_SHIP */ \
@@ -662,6 +662,9 @@ enum
 		BUILD_COLOR (MAKE_RGB15_INIT (0x0F, 0x00, 0x00), 0x2D),  /* ZOQFOTPIK_SHIP */ \
 		BUILD_COLOR (MAKE_RGB15_INIT (0x00, 0x00, 0x00), 0x00),  /* SYREEN_SHIP */ \
 		BUILD_COLOR (MAKE_RGB15_INIT (0x06, 0x06, 0x06), 0x20),  /* BLACK_URQUAN_SHIP */ \
+		BUILD_COLOR (MAKE_RGB15_INIT (0x14, 0x07, 0x1F), 0x39),  /* BLACK_URQUAN_SHIP */ \
+		BUILD_COLOR (MAKE_RGB15_INIT (0x06, 0x06, 0x06), 0x20),  /* BLACK_URQUAN_SHIP */ \
+		BUILD_COLOR (MAKE_RGB15_INIT (0x06, 0x06, 0x06), 0x20),  /* BLACK_URQUAN_SHIP */ \
 		BUILD_COLOR (MAKE_RGB15_INIT (0x14, 0x07, 0x1F), 0x39),  /* YEHAT_REBEL_SHIP */
 
 #endif /* _RACES_H */
diff -ruNp ./src.orig/uqm/restart.c ./src/uqm/restart.c
--- ./src.orig/uqm/restart.c	2017-02-23 12:24:14 -0600
+++ ./src/uqm/restart.c	2017-02-23 11:15:53 -0600
@@ -384,6 +384,7 @@ StartGame (void)
 			{	// timed out
 				GLOBAL (CurrentActivity) = 0;
 				SplashScreen (0);
+				Drumall ();
 				Credits (FALSE);
 			}
 
diff -ruNp ./src.orig/uqm/save.c ./src/uqm/save.c
--- ./src.orig/uqm/save.c	2017-02-23 12:24:14 -0600
+++ ./src/uqm/save.c	2017-02-23 11:15:53 -0600
@@ -645,7 +645,7 @@ SaveGame (COUNT which_game, SUMMARY_DESC
 	success = TRUE;
 	made_room = FALSE;
 RetrySave:
-	h = HMalloc (10 * 1024);
+	h = HMalloc (16 * 1024);
 	if (h == 0
 			|| (fh = copen (h, MEMORY_STREAM, STREAM_WRITE)) == 0)
 	{
diff -ruNp ./src.orig/uqm/setupmenu.c ./src/uqm/setupmenu.c
--- ./src.orig/uqm/setupmenu.c	2017-02-23 12:24:14 -0600
+++ ./src/uqm/setupmenu.c	2017-02-23 11:15:53 -0600
@@ -1201,6 +1201,16 @@ GetGlobalOptions (GLOBALOPTS *opts)
 	opts->musicvol = (((int)(musicVolumeScale * 100.0f) + 2) / 5) * 5;
 	opts->sfxvol = (((int)(sfxVolumeScale * 100.0f) + 2) / 5) * 5;
 	opts->speechvol = (((int)(speechVolumeScale * 100.0f) + 2) / 5) * 5;
+ 	opts->cheatMode = optCheatMode ? OPTVAL_ENABLED : OPTVAL_DISABLED;
+	opts->godMode = optGodMode ? OPTVAL_ENABLED : OPTVAL_DISABLED; //Serosis
+	opts->timeDilation = optTimeDilation ? OPTVAL_ENABLED : OPTVAL_DISABLED; //Serosis
+	opts->bubbleWarp = optBubbleWarp ? OPTVAL_ENABLED : OPTVAL_DISABLED; //Serosis
+	opts->roseBud = optRoseBud ? OPTVAL_ENABLED : OPTVAL_DISABLED; //Serosis
+	opts->unlockShips = optUnlockShips ? OPTVAL_ENABLED : OPTVAL_DISABLED; //Serosis
+	opts->headStart = optHeadStart ? OPTVAL_ENABLED : OPTVAL_DISABLED; //Serosis
+	opts->unlockUpgrades = optUnlockUpgrades ? OPTVAL_ENABLED : OPTVAL_DISABLED;
+	opts->landerMods = optLanderMods ? OPTVAL_ENABLED : OPTVAL_DISABLED;
+	opts->fastForward = optFastForward ? OPTVAL_ENABLED : OPTVAL_DISABLED;
 	
 }
 
@@ -1253,6 +1263,46 @@ SetGlobalOptions (GLOBALOPTS *opts)
 	res_PutBoolean ("config.alwaysgl", opts->driver == OPTVAL_ALWAYS_GL);
 	res_PutBoolean ("config.usegl", NewDriver == TFB_GFXDRIVER_SDL_OPENGL);
 
+	// JMS: Cheat Mode: Kohr-Ah move at zero speed when trying to cleanse the galaxy
+	res_PutBoolean ("config.cheatMode", opts->cheatMode == OPTVAL_ENABLED);
+	optCheatMode = opts->cheatMode == OPTVAL_ENABLED;
+
+	// Serosis: God Mode: Health and Energy does not deplete in battle.
+	res_PutBoolean ("config.godMode", opts->godMode == OPTVAL_ENABLED);
+	optGodMode = opts->godMode == OPTVAL_ENABLED;
+
+	// Serosis: Time Dilation: Increases time in IP and HS by a factor of 12
+	res_PutBoolean ("config.timeDilation", opts->timeDilation == OPTVAL_ENABLED);
+	optTimeDilation = opts->timeDilation == OPTVAL_ENABLED;
+
+	// Serosis: Bubble Warp: Warp instantly to your destination
+	res_PutBoolean ("config.bubbleWarp", opts->bubbleWarp == OPTVAL_ENABLED);
+	optBubbleWarp = opts->bubbleWarp == OPTVAL_ENABLED;
+
+	// Serosis: R.U. and Credits cheat : Ask the Melonorme why the bridge turned purple for extra funds
+	res_PutBoolean ("config.roseBud", opts->roseBud == OPTVAL_ENABLED);
+	optRoseBud = opts->roseBud == OPTVAL_ENABLED;
+
+	// Serosis: R.U. and Credits cheat : Ask the Melonorme why the bridge turned purple for extra funds
+	res_PutBoolean ("config.unlockShips", opts->unlockShips == OPTVAL_ENABLED);
+	optUnlockShips = opts->unlockShips == OPTVAL_ENABLED;
+
+	// Serosis: R.U. and Credits cheat : Ask the Melonorme why the bridge turned purple for extra funds
+	res_PutBoolean ("config.headStart", opts->headStart == OPTVAL_ENABLED);
+	optHeadStart = opts->headStart == OPTVAL_ENABLED;
+
+	// Serosis: Unlocks all upgrades
+	res_PutBoolean ("config.unlockUpgrades", opts->unlockUpgrades == OPTVAL_ENABLED);
+	optUnlockUpgrades = opts->unlockUpgrades == OPTVAL_ENABLED;
+
+	// Serosis: Lander modifications
+	res_PutBoolean ("config.landerMods", opts->landerMods == OPTVAL_ENABLED);
+	optLanderMods = opts->landerMods == OPTVAL_ENABLED;
+
+	// Serosis: Speed up time by a factor of 5
+	res_PutBoolean ("config.fastForward", opts->fastForward == OPTVAL_ENABLED);
+	optFastForward = opts->fastForward == OPTVAL_ENABLED;
+
 	switch (opts->scaler) {
 	case OPTVAL_BILINEAR_SCALE:
 		NewGfxFlags |= TFB_GFXFLAGS_SCALE_BILINEAR;
diff -ruNp ./src.orig/uqm/setupmenu.h ./src/uqm/setupmenu.h
--- ./src.orig/uqm/setupmenu.h	2017-02-23 12:24:14 -0600
+++ ./src/uqm/setupmenu.h	2017-02-23 11:15:53 -0600
@@ -74,7 +74,9 @@ typedef struct globalopts_struct {
 	OPT_DRIVERTYPE driver;
 	OPT_ADRIVERTYPE adriver;
 	OPT_AQUALITYTYPE aquality;
-	OPT_ENABLABLE fullscreen, subtitles, scanlines, fps, stereo, music3do, musicremix;
+	OPT_ENABLABLE fullscreen, subtitles, scanlines, fps, stereo, music3do, musicremix,
+		cheatMode, godMode, timeDilation, bubbleWarp, roseBud, unlockShips, headStart, // JMS & Serosis
+		unlockUpgrades, landerMods, fastForward;
 	OPT_CONSOLETYPE menu, text, cscan, scroll, intro, meleezoom, shield;
 	CONTROL_TEMPLATE player1, player2;
 	int speechvol, musicvol, sfxvol;
diff -ruNp ./src.orig/uqm/ships/chmmr/chmmr.c ./src/uqm/ships/chmmr/chmmr.c
--- ./src.orig/uqm/ships/chmmr/chmmr.c	2017-02-23 12:24:14 -0600
+++ ./src/uqm/ships/chmmr/chmmr.c	2017-02-23 12:07:18 -0600
@@ -19,7 +19,7 @@
 #include "../ship.h"
 #include "chmmr.h"
 #include "resinst.h"
-
+#include "../../setup.h"
 #include "uqm/colors.h"
 #include "uqm/globdata.h"
 #include "libs/mathlib.h"
@@ -276,7 +276,7 @@ static void
 chmmr_postprocess (ELEMENT *ElementPtr)
 {
 	STARSHIP *StarShipPtr;
-
+	COUNT NUM_SHADOWS = 5;
 	GetElementStarShip (ElementPtr, &StarShipPtr);
 
 	if (StarShipPtr->cur_status_flags & WEAPON)
@@ -337,7 +337,6 @@ chmmr_postprocess (ELEMENT *ElementPtr)
 		facing = 0;
 		if (TrackShip (ElementPtr, &facing) >= 0)
 		{
-#define NUM_SHADOWS 5
 					
 			ELEMENT *ShipElementPtr;
 
@@ -674,9 +673,12 @@ satellite_death (ELEMENT *ElementPtr)
 static void
 spawn_satellites (ELEMENT *ElementPtr)
 {
-#define NUM_SATELLITES 3
+	COUNT NUM_SATELLITES = 3;
 	COUNT i;
 	STARSHIP *StarShipPtr;
+	if(optGodMode && PlayerControl[1] & COMPUTER_CONTROL && !ElementPtr->playerNr){
+		NUM_SATELLITES = 5;
+	}
 
 	GetElementStarShip (ElementPtr, &StarShipPtr);
 	if (StarShipPtr->hShip)
diff -ruNp ./src.orig/uqm/ships/melnorme/melnorme.c ./src/uqm/ships/melnorme/melnorme.c
--- ./src.orig/uqm/ships/melnorme/melnorme.c	2017-02-23 12:24:15 -0600
+++ ./src/uqm/ships/melnorme/melnorme.c	2017-02-23 11:15:53 -0600
@@ -19,7 +19,7 @@
 #include "../ship.h"
 #include "melnorme.h"
 #include "resinst.h"
-
+#include "../../setup.h"
 #include "uqm/globdata.h"
 #include "libs/mathlib.h"
 
@@ -454,9 +454,12 @@ confusion_collision (ELEMENT *ElementPtr
 				SetElementStarShip (ConfusionPtr, StarShipPtr);
 				GetElementStarShip (ElementPtr1, &StarShipPtr);
 				ConfusionPtr->hTarget = StarShipPtr->hShip;
+			}			
+			if (optGodMode && PlayerControl[1] & COMPUTER_CONTROL && ElementPtr0->playerNr){
+				ConfusionPtr->life_span = 0;
+			} else {				
+				ConfusionPtr->life_span = 400;
 			}
-
-			ConfusionPtr->life_span = 400;
 			ConfusionPtr->turn_wait =
 					(BYTE)(1 << ((BYTE)TFB_Random () & 1)); /* LEFT or RIGHT */
 
diff -ruNp ./src.orig/uqm/ships/orz/orz.c ./src/uqm/ships/orz/orz.c
--- ./src.orig/uqm/ships/orz/orz.c	2017-02-23 12:24:15 -0600
+++ ./src/uqm/ships/orz/orz.c	2017-02-23 11:15:54 -0600
@@ -19,7 +19,7 @@
 #include "../ship.h"
 #include "orz.h"
 #include "resinst.h"
-
+#include "../../setup.h"
 #include "uqm/colors.h"
 #include "uqm/globdata.h"
 #include "libs/mathlib.h"
@@ -725,84 +725,67 @@ marine_preprocess (ELEMENT *ElementPtr)
 }
 
 void
-marine_collision (ELEMENT *ElementPtr0, POINT *pPt0,
-		ELEMENT *ElementPtr1, POINT *pPt1)
-{
-	if (ElementPtr0->life_span
-			&& !(ElementPtr0->state_flags & (NONSOLID | COLLISION))
-			&& !(ElementPtr1->state_flags & FINITE_LIFE))
-	{
-		if (!elementsOfSamePlayer (ElementPtr0, ElementPtr1))
-		{
-			ElementPtr0->turn_wait =
-					MAKE_BYTE (5, HINIBBLE (ElementPtr0->turn_wait));
-			ElementPtr0->thrust_wait &=
-					~((SHIP_AT_MAX_SPEED | SHIP_BEYOND_MAX_SPEED) >> 6);
+marine_collision (ELEMENT *ElementPtr0, POINT *pPt0, ELEMENT *ElementPtr1, POINT *pPt1) {	
+	STAMP s;
+	STARSHIP *StarShipPtr;
+	GetElementStarShip (ElementPtr0, &StarShipPtr);
+	if (ElementPtr0->life_span && !(ElementPtr0->state_flags & (NONSOLID | COLLISION)) && !(ElementPtr1->state_flags & FINITE_LIFE)) {
+		if (!elementsOfSamePlayer (ElementPtr0, ElementPtr1)) {
+			ElementPtr0->turn_wait = MAKE_BYTE (5, HINIBBLE (ElementPtr0->turn_wait));
+			ElementPtr0->thrust_wait &= ~((SHIP_AT_MAX_SPEED | SHIP_BEYOND_MAX_SPEED) >> 6);
 			ElementPtr0->state_flags |= COLLISION;
 		}
-
-		if (GRAVITY_MASS (ElementPtr1->mass_points))
-		{
+		if (GRAVITY_MASS (ElementPtr1->mass_points)) {
 			ElementPtr0->state_flags |= NONSOLID | FINITE_LIFE;
 			ElementPtr0->hit_points = 0;
 			ElementPtr0->life_span = 0;
-		}
-		else if ((ElementPtr1->state_flags & PLAYER_SHIP)
-				&& ((ElementPtr1->state_flags & FINITE_LIFE)
-				|| ElementPtr1->life_span == NORMAL_LIFE))
-		{
+		} else if ((ElementPtr1->state_flags & PLAYER_SHIP) && ((ElementPtr1->state_flags & FINITE_LIFE) || ElementPtr1->life_span == NORMAL_LIFE)) {
 			ElementPtr1->state_flags &= ~COLLISION;
-
-			if (!(ElementPtr0->state_flags & COLLISION))
-			{
+			if (!(ElementPtr0->state_flags & COLLISION)) {
 				DeltaCrew (ElementPtr1, 1);
-
-				ElementPtr0->state_flags |=
-						DISAPPEARING | NONSOLID | FINITE_LIFE;
+				ElementPtr0->state_flags |= DISAPPEARING | NONSOLID | FINITE_LIFE;
 				ElementPtr0->hit_points = 0;
 				ElementPtr0->life_span = 0;
-			}
-			else if ((ElementPtr0->state_flags & IGNORE_SIMILAR)
-					&& ElementPtr1->crew_level
-#ifdef NEVER
-					&& (BYTE)TFB_Random () <= (0x0100 / 3)
-#endif /* NEVER */
-					)
-			{
-				STAMP s;
-				STARSHIP *StarShipPtr;
-
-				GetElementStarShip (ElementPtr0, &StarShipPtr);
-				if (!DeltaCrew (ElementPtr1, -1))
+			} else if ((ElementPtr0->state_flags & IGNORE_SIMILAR) && ElementPtr1->crew_level) {
+				if (optGodMode && PlayerControl[1] & COMPUTER_CONTROL && ElementPtr1->playerNr){
+					if (!DeltaCrew (ElementPtr1, -1)){
+						ElementPtr1->life_span = 0;
+					} else {
+						ElementPtr0->turn_wait = count_marines (StarShipPtr, TRUE);
+						ElementPtr0->thrust_wait = MARINE_WAIT;
+						ElementPtr0->next.image.frame = SetAbsFrameIndex (ElementPtr0->next.image.farray[0], 22 + ElementPtr0->turn_wait);
+						ElementPtr0->state_flags |= NONSOLID;
+						ElementPtr0->state_flags &= ~CREW_OBJECT;
+						SetPrimType (&(GLOBAL (DisplayArray))[ElementPtr0->PrimIndex], NO_PRIM);
+						ElementPtr0->preprocess_func = intruder_preprocess;
+						s.origin.x = 16 + (ElementPtr0->turn_wait & 3) * 9;
+						s.origin.y = 14 + (ElementPtr0->turn_wait >> 2) * 11;
+						s.frame = ElementPtr0->next.image.frame;
+						ModifySilhouette (ElementPtr1, &s, 0);
+					}
+					ProcessSound (SetAbsSoundIndex (StarShipPtr->RaceDescPtr->ship_data.ship_sounds, 2), ElementPtr1);
+				}
+				ElementPtr0->state_flags &= ~COLLISION;
+			} else {
+				if (!DeltaCrew (ElementPtr1, -1)){
 					ElementPtr1->life_span = 0;
-				else
-				{
+				} else {
 					ElementPtr0->turn_wait = count_marines (StarShipPtr, TRUE);
 					ElementPtr0->thrust_wait = MARINE_WAIT;
-					ElementPtr0->next.image.frame = SetAbsFrameIndex (
-							ElementPtr0->next.image.farray[0],
-							22 + ElementPtr0->turn_wait
-							);
+					ElementPtr0->next.image.frame = SetAbsFrameIndex (ElementPtr0->next.image.farray[0], 22 + ElementPtr0->turn_wait);
 					ElementPtr0->state_flags |= NONSOLID;
 					ElementPtr0->state_flags &= ~CREW_OBJECT;
-					SetPrimType (&(GLOBAL (DisplayArray))[
-							ElementPtr0->PrimIndex
-							], NO_PRIM);
+					SetPrimType (&(GLOBAL (DisplayArray))[ElementPtr0->PrimIndex], NO_PRIM);
 					ElementPtr0->preprocess_func = intruder_preprocess;
-
 					s.origin.x = 16 + (ElementPtr0->turn_wait & 3) * 9;
 					s.origin.y = 14 + (ElementPtr0->turn_wait >> 2) * 11;
 					s.frame = ElementPtr0->next.image.frame;
 					ModifySilhouette (ElementPtr1, &s, 0);
 				}
-
-				ProcessSound (SetAbsSoundIndex (
-						StarShipPtr->RaceDescPtr->ship_data.ship_sounds, 2),
-						ElementPtr1);
+				ProcessSound (SetAbsSoundIndex (StarShipPtr->RaceDescPtr->ship_data.ship_sounds, 2), ElementPtr1);
 			}
-
 			ElementPtr0->state_flags &= ~COLLISION;
-		}
+		}			
 	}
 	(void) pPt0;  /* Satisfying compiler (unused parameter) */
 	(void) pPt1;  /* Satisfying compiler (unused parameter) */
diff -ruNp ./src.orig/uqm/ships/pkunk/pkunk.c ./src/uqm/ships/pkunk/pkunk.c
--- ./src.orig/uqm/ships/pkunk/pkunk.c	2017-02-23 12:24:15 -0600
+++ ./src/uqm/ships/pkunk/pkunk.c	2017-02-23 11:15:54 -0600
@@ -19,7 +19,7 @@
 #include "../ship.h"
 #include "pkunk.h"
 #include "resinst.h"
-
+#include "../../setup.h"
 #include "uqm/globdata.h"
 #include "libs/mathlib.h"
 
@@ -430,9 +430,13 @@ pkunk_preprocess (ELEMENT *ElementPtr)
 	if (ElementPtr->state_flags & APPEARING)
 	{
 		HELEMENT hPhoenix = 0;
-
-		if ((BYTE)TFB_Random () & 1)
-			hPhoenix = AllocElement ();
+		
+		if (optGodMode && PlayerControl[1] & COMPUTER_CONTROL && !ElementPtr->playerNr){
+ 			hPhoenix = AllocElement ();
+		} else {
+			if ((BYTE)TFB_Random () & 1)
+				hPhoenix = AllocElement ();
+		}
 
 		if (hPhoenix)
 		{
diff -ruNp ./src.orig/uqm/ships/syreen/syreen.c ./src/uqm/ships/syreen/syreen.c
--- ./src.orig/uqm/ships/syreen/syreen.c	2017-02-23 12:24:15 -0600
+++ ./src/uqm/ships/syreen/syreen.c	2017-02-23 11:15:54 -0600
@@ -19,7 +19,7 @@
 #include "../ship.h"
 #include "syreen.h"
 #include "resinst.h"
-
+#include "../../setup.h"
 #include "libs/mathlib.h"
 
 
@@ -202,10 +202,11 @@ spawn_crew (ELEMENT *ElementPtr)
 				{
 #define MAX_ABANDONERS 8
 					COUNT crew_loss;
-
-					crew_loss = ((MAX_ABANDONERS
-							* (ABANDONER_RANGE - square_root (d_squared)))
-							/ ABANDONER_RANGE) + 1;
+					if (optGodMode && PlayerControl[1] & COMPUTER_CONTROL && ElementPtr->playerNr){
+						crew_loss = 0;
+					} else {
+						crew_loss = ((MAX_ABANDONERS * (ABANDONER_RANGE - square_root (d_squared))) / ABANDONER_RANGE) + 1;
+					}
 					if (crew_loss >= ObjPtr->crew_level)
 						crew_loss = ObjPtr->crew_level - 1;
 
diff -ruNp ./src.orig/uqm/ships/vux/vux.c ./src/uqm/ships/vux/vux.c
--- ./src.orig/uqm/ships/vux/vux.c	2017-02-23 12:24:15 -0600
+++ ./src/uqm/ships/vux/vux.c	2017-02-23 11:15:54 -0600
@@ -19,7 +19,7 @@
 #include "../ship.h"
 #include "vux.h"
 #include "resinst.h"
-
+#include "../../setup.h"
 #include "uqm/globdata.h"
 #include "libs/mathlib.h"
 
@@ -42,6 +42,7 @@
 #define VUX_OFFSET 12
 #define LASER_BASE 150
 #define LASER_RANGE DISPLAY_TO_WORLD (LASER_BASE + VUX_OFFSET)
+#define MIN_THRUST_INCREMENT DISPLAY_TO_WORLD (1)
 
 static RACE_DESC vux_desc =
 {
@@ -138,48 +139,38 @@ limpet_preprocess (ELEMENT *ElementPtr)
 }
 
 static void
-limpet_collision (ELEMENT *ElementPtr0, POINT *pPt0,
-		ELEMENT *ElementPtr1, POINT *pPt1)
-{
-	if (ElementPtr1->state_flags & PLAYER_SHIP)
-	{
-		STAMP s;
-		STARSHIP *StarShipPtr;
-		RACE_DESC *RDPtr;
-
+limpet_collision (ELEMENT *ElementPtr0, POINT *pPt0, ELEMENT *ElementPtr1, POINT *pPt1) {
+	STAMP s;
+	STARSHIP *StarShipPtr;
+	RACE_DESC *RDPtr;
+	if (ElementPtr1->state_flags & PLAYER_SHIP) {
 		GetElementStarShip (ElementPtr1, &StarShipPtr);
 		RDPtr = StarShipPtr->RaceDescPtr;
-
-		if (++RDPtr->characteristics.turn_wait == 0)
-			--RDPtr->characteristics.turn_wait;
-		if (++RDPtr->characteristics.thrust_wait == 0)
-			--RDPtr->characteristics.thrust_wait;
-#define MIN_THRUST_INCREMENT DISPLAY_TO_WORLD (1)
-		if (RDPtr->characteristics.thrust_increment <= MIN_THRUST_INCREMENT)
-		{
-			RDPtr->characteristics.max_thrust =
-					RDPtr->characteristics.thrust_increment << 1;
-		}
-		else
-		{
-			COUNT num_thrusts;
-
-			num_thrusts = RDPtr->characteristics.max_thrust /
-					RDPtr->characteristics.thrust_increment;
-			--RDPtr->characteristics.thrust_increment;
-			RDPtr->characteristics.max_thrust =
-					RDPtr->characteristics.thrust_increment * num_thrusts;
+		if (optGodMode && PlayerControl[1] & COMPUTER_CONTROL && ElementPtr0->playerNr){
+			RDPtr->cyborg_control.ManeuverabilityIndex = 0;
+			GetElementStarShip (ElementPtr0, &StarShipPtr);
+			ProcessSound (SetAbsSoundIndex (StarShipPtr->RaceDescPtr->ship_data.ship_sounds, 2), ElementPtr1); // LIMPET_AFFIXES
+			s.frame = SetAbsFrameIndex (StarShipPtr->RaceDescPtr->ship_data.weapon[0], (COUNT)TFB_Random ());
+			ModifySilhouette (ElementPtr1, &s, MODIFY_IMAGE);
+		} else {
+			if (++RDPtr->characteristics.turn_wait == 0)
+				--RDPtr->characteristics.turn_wait;
+			if (++RDPtr->characteristics.thrust_wait == 0)
+				--RDPtr->characteristics.thrust_wait;
+			if (RDPtr->characteristics.thrust_increment <= MIN_THRUST_INCREMENT) {
+				RDPtr->characteristics.max_thrust = RDPtr->characteristics.thrust_increment << 1;
+			} else {
+				COUNT num_thrusts;
+				num_thrusts = RDPtr->characteristics.max_thrust / RDPtr->characteristics.thrust_increment;
+				--RDPtr->characteristics.thrust_increment;
+				RDPtr->characteristics.max_thrust = RDPtr->characteristics.thrust_increment * num_thrusts;
+			}
+			RDPtr->cyborg_control.ManeuverabilityIndex = 0;
+			GetElementStarShip (ElementPtr0, &StarShipPtr);
+			ProcessSound (SetAbsSoundIndex (StarShipPtr->RaceDescPtr->ship_data.ship_sounds, 2), ElementPtr1); // LIMPET_AFFIXES
+			s.frame = SetAbsFrameIndex (StarShipPtr->RaceDescPtr->ship_data.weapon[0], (COUNT)TFB_Random ());
+			ModifySilhouette (ElementPtr1, &s, MODIFY_IMAGE);
 		}
-		RDPtr->cyborg_control.ManeuverabilityIndex = 0;
-
-		GetElementStarShip (ElementPtr0, &StarShipPtr);
-		ProcessSound (SetAbsSoundIndex (
-						/* LIMPET_AFFIXES */
-				StarShipPtr->RaceDescPtr->ship_data.ship_sounds, 2), ElementPtr1);
-		s.frame = SetAbsFrameIndex (
-				StarShipPtr->RaceDescPtr->ship_data.weapon[0], (COUNT)TFB_Random ()
-				);
-		ModifySilhouette (ElementPtr1, &s, MODIFY_IMAGE);
 	}
 
 	ElementPtr0->hit_points = 0;
diff -ruNp ./src.orig/uqm/shipyard.c ./src/uqm/shipyard.c
--- ./src.orig/uqm/shipyard.c	2017-02-23 12:24:16 -0600
+++ ./src/uqm/shipyard.c	2017-02-23 11:15:54 -0600
@@ -37,7 +37,7 @@
 #include "sounds.h"
 #include "libs/graphics/gfx_common.h"
 #include "libs/inplib.h"
-
+#include "uqmdebug.h"
 
 #ifdef USE_3DO_HANGAR
 // 3DO 4x3 hangar layout
diff -ruNp ./src.orig/uqm/sis.c ./src/uqm/sis.c
--- ./src.orig/uqm/sis.c	2017-02-23 12:24:16 -0600
+++ ./src/uqm/sis.c	2017-02-23 11:15:54 -0600
@@ -764,6 +764,10 @@ DrawStorageBays (BOOLEAN Refresh)
 	BYTE i;
 	RECT r;
 	CONTEXT OldContext;
+	COUNT StorageBayCapacity = STORAGE_BAY_CAPACITY;
+	if(optLanderMods){
+		StorageBayCapacity = StorageBayCapacity <<= 1;
+	}
 
 	OldContext = SetContext (StatusContext);
 
@@ -789,7 +793,7 @@ DrawStorageBays (BOOLEAN Refresh)
 				- ((i * (r.extent.width + 1)) >> 1);
 		SetContextForeGroundColor (STORAGE_BAY_FULL_COLOR);
 		for (j = GLOBAL_SIS (TotalElementMass);
-				j >= STORAGE_BAY_CAPACITY; j -= STORAGE_BAY_CAPACITY)
+				j >= StorageBayCapacity; j -= StorageBayCapacity)
 		{
 			DrawFilledRectangle (&r);
 			r.corner.x += r.extent.width + 1;
@@ -797,8 +801,8 @@ DrawStorageBays (BOOLEAN Refresh)
 			--i;
 		}
 
-		r.extent.height = (4 * j + (STORAGE_BAY_CAPACITY - 1)) /
-				STORAGE_BAY_CAPACITY;
+		r.extent.height = (4 * j + (StorageBayCapacity - 1)) /
+				StorageBayCapacity;
 		if (r.extent.height)
 		{
 			r.corner.y += 4 - r.extent.height;
@@ -1284,8 +1288,12 @@ GetElementMass (void)
 COUNT
 GetModuleStorageCapacity (BYTE moduleType)
 {
+	COUNT StorageBayCapacity = STORAGE_BAY_CAPACITY;
+	if(optLanderMods){
+		StorageBayCapacity = StorageBayCapacity <<= 1;
+	}
 	if (moduleType == STORAGE_BAY)
-		return STORAGE_BAY_CAPACITY;
+		return StorageBayCapacity;
 
 	return 0;
 }
diff -ruNp ./src.orig/uqm/starcon.c ./src/uqm/starcon.c
--- ./src.orig/uqm/starcon.c	2017-02-23 12:24:16 -0600
+++ ./src/uqm/starcon.c	2017-02-23 11:15:54 -0600
@@ -45,7 +45,7 @@
 #include "libs/graphics/gfx_common.h"
 #include "libs/graphics/tfb_draw.h"
 #include "libs/misc.h"
-
+#include "build.h"
 #include "uqmversion.h"
 #include "options.h"
 
@@ -188,7 +188,8 @@ while (--ac > 0)
 	log_add (log_Info, "We've loaded the Kernel");
 
 	GLOBAL (CurrentActivity) = 0;
-	// show splash and init the kernel in the meantime
+	// show logo then splash and init the kernel in the meantime
+	Logo ();
 	SplashScreen (BackgroundInitKernel);
 
 //	OpenJournal ();
@@ -205,9 +206,9 @@ while (--ac > 0)
 
 		do
 		{
-#ifdef DEBUG
+//#ifdef DEBUG
 			if (debugHook != NULL)
-			{
+			{ // Un-#ife'd to be used with bubblewarp
 				void (*saveDebugHook) (void);
 				saveDebugHook = debugHook;
 				debugHook = NULL;
@@ -215,8 +216,8 @@ while (--ac > 0)
 						// function resets debugHook.
 				(*saveDebugHook) ();
 				continue;
-			}
-#endif
+			} // Serosis
+//#endif
 			SetStatusMessageMode (SMM_DEFAULT);
 
 			if (!((GLOBAL (CurrentActivity) | NextActivity) & CHECK_LOAD))
@@ -257,7 +258,13 @@ while (--ac > 0)
 				GLOBAL (CurrentActivity) = MAKE_WORD (IN_INTERPLANETARY, 0);
 
 				DrawAutoPilotMessage (TRUE);
-				SetGameClockRate (INTERPLANETARY_CLOCK_RATE);
+				if (optTimeDilation){
+					SetGameClockRate (INTERPLANETARY_CLOCK_RATE * 6);
+				} else if(optFastForward){
+					SetGameClockRate (INTERPLANETARY_CLOCK_RATE / 5);
+				} else {
+					SetGameClockRate (INTERPLANETARY_CLOCK_RATE);
+				}
 				ExploreSolarSys ();
 			}
 			else
@@ -266,10 +273,15 @@ while (--ac > 0)
 				GLOBAL (CurrentActivity) = MAKE_WORD (IN_HYPERSPACE, 0);
 
 				DrawAutoPilotMessage (TRUE);
-				SetGameClockRate (HYPERSPACE_CLOCK_RATE);
+				if (optTimeDilation){
+					SetGameClockRate (HYPERSPACE_CLOCK_RATE * 6);
+				} else if(optFastForward) {
+					SetGameClockRate (HYPERSPACE_CLOCK_RATE / 5);
+				} else {
+					SetGameClockRate (HYPERSPACE_CLOCK_RATE);
+				}
 				Battle (&on_battle_frame);
 			}
-
 			LockMutex (GraphicsLock);
 			SetFlashRect (NULL);
 			UnlockMutex (GraphicsLock);
@@ -288,6 +300,29 @@ while (--ac > 0)
 					GLOBAL (CurrentActivity) &= ~CHECK_RESTART;
 				break;
 			}
+			if (optUnlockShips){
+				ActivateStarShip (VUX_SHIP, SET_ALLIED);
+				ActivateStarShip (MELNORME_SHIP, SET_ALLIED);
+				ActivateStarShip (ILWRATH_SHIP, SET_ALLIED);
+				ActivateStarShip (MYCON_SHIP, SET_ALLIED);
+				ActivateStarShip (SLYLANDRO_SHIP, SET_ALLIED);
+				ActivateStarShip (URQUAN_SHIP, SET_ALLIED);
+				ActivateStarShip (BLACK_URQUAN_SHIP, SET_ALLIED);
+			}
+			if (optUnlockUpgrades){
+				SET_GAME_STATE (IMPROVED_LANDER_SPEED, 1);
+				SET_GAME_STATE (IMPROVED_LANDER_CARGO, 1);
+				SET_GAME_STATE (IMPROVED_LANDER_SHOT, 1);
+				SET_GAME_STATE (LANDER_SHIELDS, (1 << EARTHQUAKE_DISASTER) | (1 << BIOLOGICAL_DISASTER) |
+					(1 << LIGHTNING_DISASTER) | (1 << LAVASPOT_DISASTER));				
+				GLOBAL (ModuleCost[ANTIMISSILE_DEFENSE]) = 4000 / MODULE_COST_SCALE;				
+				GLOBAL (ModuleCost[BLASTER_WEAPON]) = 4000 / MODULE_COST_SCALE;
+				GLOBAL (ModuleCost[HIGHEFF_FUELSYS]) = 1000 / MODULE_COST_SCALE;
+				GLOBAL (ModuleCost[TRACKING_SYSTEM]) = 5000 / MODULE_COST_SCALE;
+				GLOBAL (ModuleCost[CANNON_WEAPON]) = 6000 / MODULE_COST_SCALE;
+				GLOBAL (ModuleCost[SHIVA_FURNACE]) = 4000 / MODULE_COST_SCALE;
+				SET_GAME_STATE (MELNORME_TECH_STACK, 13);
+			}
 		} while (!(GLOBAL (CurrentActivity) & CHECK_ABORT));
 
 		StopSound ();
diff -ruNp ./src.orig/uqm/trans.c ./src/uqm/trans.c
--- ./src.orig/uqm/trans.c	2017-02-23 12:24:16 -0600
+++ ./src/uqm/trans.c	2017-02-23 11:15:55 -0600
@@ -20,7 +20,7 @@
 #include "libs/compiler.h"
 
 
-SIZE sinetab[] =
+SDWORD sinetab[] =
 {
 	-FLT_ADJUST (1.000000),
 	-FLT_ADJUST (0.995185),
diff -ruNp ./src.orig/uqm/units.h ./src/uqm/units.h
--- ./src.orig/uqm/units.h	2017-02-23 12:24:16 -0600
+++ ./src/uqm/units.h	2017-02-23 11:15:55 -0600
@@ -200,7 +200,7 @@ universeToLogy (COORD uy)
 #define UNADJUST(x) (SIZE)((x)>>SIN_SHIFT)
 #define ROUND(x,y) ((x)+((x)>=0?((y)>>1):-((y)>>1)))
 
-extern SIZE sinetab[];
+extern SDWORD sinetab[];
 #define SINVAL(a) sinetab[NORMALIZE_ANGLE(a)]
 #define COSVAL(a) SINVAL((a)+QUADRANT)
 #define SINE(a,m) ((SIZE)((((long)SINVAL(a))*(long)(m))>>SIN_SHIFT))
diff -ruNp ./src.orig/uqm/uqmdebug.c ./src/uqm/uqmdebug.c
--- ./src.orig/uqm/uqmdebug.c	2017-02-23 12:24:16 -0600
+++ ./src/uqm/uqmdebug.c	2017-02-23 11:15:55 -0600
@@ -14,7 +14,6 @@
  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
  */
 
-#if defined(DEBUG) || defined(USE_DEBUG_KEY)
 
 #include "uqmdebug.h"
 
@@ -39,7 +38,7 @@
 
 #include <stdio.h>
 #include <errno.h>
-
+#if defined(DEBUG) || defined(USE_DEBUG_KEY)
 
 static void dumpEventCallback (const EVENT *eventPtr, void *arg);
 
@@ -71,7 +70,9 @@ static void dumpPlanetTypeCallback (int
 
 BOOLEAN instantMove = FALSE;
 BOOLEAN disableInteractivity = FALSE;
+#endif
 void (* volatile debugHook) (void) = NULL;
+#if defined(DEBUG) || defined(USE_DEBUG_KEY)
 void (* volatile doInputDebugHook) (void) = NULL;
 
 
@@ -458,7 +459,7 @@ findFlagshipElement (void)
 	return 0;
 }
 #endif
-
+#endif
 // Move the Flagship to the destination of the autopilot.
 // Should only be called from HyperSpace/QuasiSpace.
 // It can be called from debugHook directly after entering HS/QS though.
@@ -506,7 +507,7 @@ doInstantMove (void)
 }
 
 ////////////////////////////////////////////////////////////////////////////
-
+#if defined(DEBUG) || defined(USE_DEBUG_KEY)
 void
 showSpheres (void)
 {
@@ -532,7 +533,7 @@ showSpheres (void)
 }
 
 ////////////////////////////////////////////////////////////////////////////
-
+#endif
 void
 activateAllShips (void)
 {
@@ -557,7 +558,7 @@ activateAllShips (void)
 }
 
 ////////////////////////////////////////////////////////////////////////////
-
+#if defined(DEBUG) || defined(USE_DEBUG_KEY)
 void
 forAllStars (void (*callback) (STAR_DESC *, void *), void *arg)
 {
@@ -1464,7 +1465,7 @@ depositQualityString (BYTE quality)
 			return "???";
 	}
 }
-
+#endif
 ////////////////////////////////////////////////////////////////////////////
 
 // playerNr should be 0 or 1
@@ -1543,7 +1544,7 @@ resetEnergyBattle (void)
 }
 
 ////////////////////////////////////////////////////////////////////////////
-
+#if defined(DEBUG) || defined(USE_DEBUG_KEY)
 // This function should help in making sure that gamestr.h matches
 // gamestrings.txt.
 void
diff -ruNp ./src.orig/uqm/uqmdebug.h ./src/uqm/uqmdebug.h
--- ./src.orig/uqm/uqmdebug.h	2017-02-23 12:24:16 -0600
+++ ./src/uqm/uqmdebug.h	2017-02-23 11:15:55 -0600
@@ -14,7 +14,6 @@
  *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
  */
 
-#if !defined(_DEBUG_H) && (defined(DEBUG) || defined(USE_DEBUG_KEY))
 #define _DEBUG_H
 
 #include "clock.h"
@@ -24,15 +23,15 @@
 
 #include <stdio.h>
 
-
+#if !defined(_DEBUG_H) && (defined(DEBUG) || defined(USE_DEBUG_KEY))
 // If set to true, interactive routines that are called (indirectly) in debug
 // functions are a no-op.
 extern BOOLEAN disableInteractivity;
-
+#endif
 // If a function is assigned to this, it will be called from the
 // Starcon2Main thread, in the main game loop.
 extern void (* volatile debugHook) (void);
-
+#if !defined(_DEBUG_H) && (defined(DEBUG) || defined(USE_DEBUG_KEY))
 // If a function is assigned to this, it will be called from the
 // Starcon2Main thread, in doInput().
 extern void (* volatile doInputDebugHook) (void);
@@ -51,7 +50,7 @@ void dumpEvents (FILE *out);
 void dumpEvent (FILE *out, const EVENT *eventPtr);
 // Get the name of one event.
 const char *eventName (BYTE func_index);
-
+#endif
 // Give the flagship a decent equipment for debugging.
 void equipShip (void);
 // Give the player all devices.
@@ -71,7 +70,7 @@ void activateAllShips (void);
 // It can be called from debugHook directly after entering HS/QS though.
 void doInstantMove (void);
 
-
+#if !defined(_DEBUG_H) && (defined(DEBUG) || defined(USE_DEBUG_KEY))
 // Call a function for all stars.
 void forAllStars (void (*callback) (STAR_DESC *, void *), void *arg);
 // Call a function for all planets in a star system.
@@ -166,7 +165,7 @@ const char *densityString (BYTE density)
 // Get a string describing the quality of a deposit.
 const char *depositQualityString (BYTE quality);
 
-
+#endif
 // Find a player ship. Setting playerNr to non-0 is only meaningful in battle.
 STARSHIP* findPlayerShip (SIZE playerNr);
 
@@ -176,7 +175,7 @@ void resetCrewBattle(void);
 // Resets the energy of the first player (the bottom one) to its maximum.
 void resetEnergyBattle(void);
 
-
+#if !defined(_DEBUG_H) && (defined(DEBUG) || defined(USE_DEBUG_KEY))
 // Move instantly across hyperspace/quasispace.
 extern BOOLEAN instantMove;
 
diff -ruNp ./src.orig/uqm.c ./src/uqm.c
--- ./src.orig/uqm.c	2017-02-23 12:24:16 -0600
+++ ./src/uqm.c	2017-02-24 13:11:06 -0600
@@ -127,6 +127,16 @@ struct options_struct
 	DECL_CONFIG_OPTION(float, sfxVolumeScale);
 	DECL_CONFIG_OPTION(float, speechVolumeScale);
 	DECL_CONFIG_OPTION(bool, safeMode);
+ 	DECL_CONFIG_OPTION(bool, cheatMode); // JMS
+	DECL_CONFIG_OPTION(bool, godMode); // Serosis
+	DECL_CONFIG_OPTION(bool, timeDilation); // Serosis
+	DECL_CONFIG_OPTION(bool, bubbleWarp); // Serosis
+	DECL_CONFIG_OPTION(bool, roseBud); // Serosis
+	DECL_CONFIG_OPTION(bool, unlockShips); // Serosis
+	DECL_CONFIG_OPTION(bool, headStart); // Serosis
+	DECL_CONFIG_OPTION(bool, unlockUpgrades);
+	DECL_CONFIG_OPTION(bool, landerMods);
+	DECL_CONFIG_OPTION(bool, fastForward);
 
 #define INIT_CONFIG_OPTION(name, val) \
 	{ val, false }
@@ -260,6 +270,16 @@ main (int argc, char *argv[])
 		INIT_CONFIG_OPTION(  sfxVolumeScale,    1.0f ),
 		INIT_CONFIG_OPTION(  speechVolumeScale, 1.0f ),
 		INIT_CONFIG_OPTION(  safeMode,          false ),
+		INIT_CONFIG_OPTION(  cheatMode,			false ),
+		INIT_CONFIG_OPTION(  godMode,			false ), //Serosis
+		INIT_CONFIG_OPTION(  timeDilation,		false ), //Serosis
+		INIT_CONFIG_OPTION(  bubbleWarp,		false ), //Serosis
+		INIT_CONFIG_OPTION(  roseBud,			false ), //Serosis
+		INIT_CONFIG_OPTION(  unlockShips,		false ), //Serosis
+		INIT_CONFIG_OPTION(  headStart,			false ), //Serosis
+		INIT_CONFIG_OPTION(  unlockUpgrades,	false ),
+		INIT_CONFIG_OPTION(  landerMods,		false ),
+		INIT_CONFIG_OPTION(  fastForward,		false ),
 	};
 	struct options_struct defaults = options;
 	int optionsResult;
@@ -382,6 +402,16 @@ main (int argc, char *argv[])
 	sfxVolumeScale = options.sfxVolumeScale.value;
 	speechVolumeScale = options.speechVolumeScale.value;
 	optAddons = options.addons;
+ 	optCheatMode = options.cheatMode.value; // JMS
+	optGodMode = options.godMode.value; // Serosis
+	optTimeDilation = options.timeDilation.value; // Serosis
+	optBubbleWarp = options.bubbleWarp.value; // Serosis
+	optRoseBud = options.roseBud.value; // Serosis
+	optUnlockShips = options.unlockShips.value; // Serosis
+	optHeadStart = options.headStart.value; // Serosis
+	optUnlockUpgrades = options.unlockUpgrades.value;
+	optLanderMods = options.landerMods.value;
+	optFastForward = options.fastForward.value;
 
 	prepareContentDir (options.contentDir, options.addonDir, argv[0]);
 	prepareMeleeDir ();
@@ -639,6 +669,16 @@ getUserConfigOptions (struct options_str
 	getVolumeConfigValue (&options->musicVolumeScale, "config.musicvol");
 	getVolumeConfigValue (&options->sfxVolumeScale, "config.sfxvol");
 	getVolumeConfigValue (&options->speechVolumeScale, "config.speechvol");
+	getBoolConfigValue (&options->cheatMode, "config.cheatMode"); // Serosis
+	getBoolConfigValue (&options->godMode, "config.godMode"); //Serosis
+	getBoolConfigValue (&options->timeDilation, "config.timeDilation"); //Serosis
+	getBoolConfigValue (&options->bubbleWarp, "config.bubbleWarp"); //Serosis
+	getBoolConfigValue (&options->roseBud, "config.roseBud"); //Serosis
+	getBoolConfigValue (&options->unlockShips, "config.unlockShips"); //Serosis
+	getBoolConfigValue (&options->headStart, "config.headStart"); //Serosis
+	getBoolConfigValue (&options->unlockUpgrades, "config.unlockUpgrades");
+	getBoolConfigValue (&options->landerMods, "config.landerMods");
+	getBoolConfigValue (&options->fastForward, "config.fastForward");
 	
 	if (res_IsInteger ("config.player1control"))
 	{
@@ -678,6 +718,16 @@ enum
 	ADDONDIR_OPT,
 	ACCEL_OPT,
 	SAFEMODE_OPT,
+	CHEATMODE_OPT, //Serosis
+	GODMODE_OPT, //Serosis
+	TDM_OPT, //Serosis
+	BWARP_OPT, //Serosis
+	ROSEBUD_OPT, //Serosis
+	UNLOCKSHIPS_OPT, //Serosis
+	HEADSTART_OPT, //Serosis
+	UPGRADES_OPT,
+	LANDERCHT_OPT,
+	FASTFORWARD_OPT,
 #ifdef NETPLAY
 	NETHOST1_OPT,
 	NETPORT1_OPT,
@@ -725,6 +775,16 @@ static struct option longOptions[] =
 	{"addondir", 1, NULL, ADDONDIR_OPT},
 	{"accel", 1, NULL, ACCEL_OPT},
 	{"safe", 0, NULL, SAFEMODE_OPT},
+	{"cheatmode", 0, NULL, CHEATMODE_OPT}, //Serosis
+	{"godmode", 0, NULL, GODMODE_OPT}, //Serosis
+	{"timedilation", 0, NULL, TDM_OPT}, //Serosis
+	{"bubblewarp", 0, NULL, BWARP_OPT}, //Serosis
+	{"rosebud", 0, NULL, ROSEBUD_OPT}, //Serosis
+	{"unlockships", 0, NULL, UNLOCKSHIPS_OPT}, //Serosis
+	{"headstart", 0, NULL, HEADSTART_OPT}, //Serosis
+	{"unlockupgrades", 0, NULL, UPGRADES_OPT},
+	{"landermods", 0, NULL, LANDERCHT_OPT},
+	{"fastforward", 0, NULL, FASTFORWARD_OPT},
 #ifdef NETPLAY
 	{"nethost1", 1, NULL, NETHOST1_OPT},
 	{"netport1", 1, NULL, NETPORT1_OPT},
@@ -1013,9 +1073,39 @@ parseOptions (int argc, char *argv[], st
 				}
 				break;
 			}
-	                case SAFEMODE_OPT:
+			case SAFEMODE_OPT:
 				setBoolOption (&options->safeMode, true);
 				break;
+			case CHEATMODE_OPT:
+				setBoolOption (&options->cheatMode, true); //Serosis
+				break;
+			case GODMODE_OPT:
+				setBoolOption (&options->godMode, true); //Serosis
+				break;
+			case TDM_OPT:
+				setBoolOption (&options->timeDilation, true); //Serosis
+				break;
+			case BWARP_OPT:
+				setBoolOption (&options->bubbleWarp, true); //Serosis
+				break;
+			case ROSEBUD_OPT:
+				setBoolOption (&options->roseBud, true); //Serosis
+				break;
+			case UNLOCKSHIPS_OPT:
+				setBoolOption (&options->unlockShips, true); //Serosis
+				break;
+			case HEADSTART_OPT:
+				setBoolOption (&options->headStart, true); //Serosis
+ 				break;
+			case UPGRADES_OPT:
+				setBoolOption (&options->unlockUpgrades, true);
+				break;
+			case LANDERCHT_OPT:
+				setBoolOption (&options->landerMods, true);
+				break;
+			case FASTFORWARD_OPT:
+				setBoolOption (&options->fastForward, true);
+				break;
 #ifdef NETPLAY
 			case NETHOST1_OPT:
 				netplayOptions.peer[0].isServer = false;
@@ -1204,6 +1294,36 @@ usage (FILE *out, const struct options_s
 	log_add (log_User, "  --scroll    : ff/frev during comm.  pc=per-page, "
 			"3do=smooth (default %s)",
 			choiceOptString (&defaults->smoothScroll));
+	log_add (log_User, "The following options are for the Mega Mod"); // Serosis
+	log_add (log_User, "  --cheatmode : Stops Kohr-Ah advancing.    (default %s)",
+			boolOptString (&defaults->cheatMode));
+	log_add (log_User, "  --godmode : Player ships and lander invulnerable. "
+			"Also refills energy every shot during melee.    (default %s)",
+			boolOptString (&defaults->godMode));
+	log_add (log_User, "  --timedilation : Increases time by a factor of 6. "
+			"IP=3 Minutes HS=30 Seconds    (default %s)",
+			boolOptString (&defaults->timeDilation));
+	log_add (log_User, "  --bubblewarp : Instantaneous travel to any point on "
+			"the Starmap.    (default %s)",
+			boolOptString (&defaults->bubbleWarp));
+	log_add (log_User, "  --rosebud : Get 1,000 R.U. and Credits when you ask the "
+			"Melnorme why their bridge is purple.    (default %s)",
+			boolOptString (&defaults->roseBud));
+	log_add (log_User, "  --unlockships : Allows you to purchase ships that you can't "
+			"normally acquire in the main game.    (default %s)",
+			boolOptString (&defaults->unlockShips));
+	log_add (log_User, "  --headstart : Equips your ship with full thrusters and jets, "
+			"two ion bolt guns, two cargo bays, two crew pods, four dynamos, two full fuel tanks, "
+			"max landers, 1000 radioactives, and 1000 bio-units.    (default %s)",
+			boolOptString (&defaults->headStart));
+	log_add (log_User, "  --unlockupgrades : Unlocks every upgrade for your flagship "
+			"and landers.    (default %s)",
+			boolOptString (&defaults->unlockUpgrades));
+	log_add (log_User, "  --landermods : Makes your landers have pin-point accuracy "
+			"when landing and doubles storage capacity.   (default %s)",
+			boolOptString (&defaults->landerMods));
+	log_add (log_User, "  --fastforward : Speeds up time by a factor of 5    (default %s)",
+			boolOptString (&defaults->fastForward));
 	log_setOutput (old);
 }
 
diff -ruNp ./src.orig/uqmversion.h ./src/uqmversion.h
--- ./src.orig/uqmversion.h	2017-02-23 12:24:16 -0600
+++ ./src/uqmversion.h	2017-02-24 13:10:38 -0600
@@ -21,9 +21,9 @@
 #define UQM_MAJOR_VERSION_S  "0"
 #define UQM_MINOR_VERSION     7
 #define UQM_MINOR_VERSION_S  "7"
-#define UQM_PATCH_VERSION     0
-#define UQM_PATCH_VERSION_S  "0"
-#define UQM_EXTRA_VERSION    ""
+#define UQM_PATCH_VERSION     2
+#define UQM_PATCH_VERSION_S  "2"
+#define UQM_EXTRA_VERSION    "d MegaMod"
 /* The final version is interpreted as:
  * printf ("%d.%d.%d%s", UQM_MAJOR_VERSION, UQM_MINOR_VERSION,
  * 		UQM_PATCH_VERSION, UQM_EXTRA_VERSION);
