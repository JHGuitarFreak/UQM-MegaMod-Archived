diff -ruNp src.orig/uqm/planets/generate/genand.c src/uqm/planets/generate/genand.c
--- src.orig/uqm/planets/generate/genand.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genand.c	2017-10-26 12:00:18 -0700
@@ -68,6 +68,7 @@ GenerateAndrosynth_generatePlanets (SOLA
 			COSINE (angle, solarSys->PlanetDesc[1].radius);
 	solarSys->PlanetDesc[1].location.y =
 			SINE (angle, solarSys->PlanetDesc[1].radius);
+	ComputeSpeed(&solarSys->PlanetDesc[1], FALSE, 1);
 
 	return true;
 }
diff -ruNp src.orig/uqm/planets/generate/genburv.c src/uqm/planets/generate/genburv.c
--- src.orig/uqm/planets/generate/genburv.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genburv.c	2017-10-26 12:00:18 -0700
@@ -69,6 +69,7 @@ GenerateBurvixese_generatePlanets (SOLAR
 			COSINE (angle, solarSys->PlanetDesc[0].radius);
 	solarSys->PlanetDesc[0].location.y =
 			SINE (angle, solarSys->PlanetDesc[0].radius);
+	ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 	return true;
 }
 
@@ -91,6 +92,7 @@ GenerateBurvixese_generateMoons (SOLARSY
 				COSINE (angle, solarSys->MoonDesc[0].radius);
 		solarSys->MoonDesc[0].location.y =
 				SINE (angle, solarSys->MoonDesc[0].radius);
+		ComputeSpeed(&solarSys->MoonDesc[0], TRUE, 1);
 	}
 	return true;
 }
diff -ruNp src.orig/uqm/planets/generate/genchmmr.c src/uqm/planets/generate/genchmmr.c
--- src.orig/uqm/planets/generate/genchmmr.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genchmmr.c	2017-10-26 12:00:18 -0700
@@ -83,6 +83,7 @@ GenerateChmmr_generateMoons (SOLARSYS_ST
 				COSINE (angle, solarSys->MoonDesc[0].radius);
 		solarSys->MoonDesc[0].location.y =
 				SINE (angle, solarSys->MoonDesc[0].radius);
+		ComputeSpeed(&solarSys->MoonDesc[0], TRUE, 1);
 	}
 
 	return true;
diff -ruNp src.orig/uqm/planets/generate/gencol.c src/uqm/planets/generate/gencol.c
--- src.orig/uqm/planets/generate/gencol.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/gencol.c	2017-10-26 12:00:18 -0700
@@ -97,6 +97,8 @@ GenerateColony_generatePlanets (SOLARSYS
 	pMinPlanet->location.x = COSINE (angle, pMinPlanet->radius);
 	pMinPlanet->location.y = SINE (angle, pMinPlanet->radius);
 	pMinPlanet->data_index = WATER_WORLD | PLANET_SHIELDED;
+	pMinPlanet->alternate_colormap = NULL;
+	ComputeSpeed(pMinPlanet, FALSE, 1);
 
 	return true;
 }
diff -ruNp src.orig/uqm/planets/generate/gendru.c src/uqm/planets/generate/gendru.c
--- src.orig/uqm/planets/generate/gendru.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/gendru.c	2017-10-26 12:00:18 -0700
@@ -69,6 +69,7 @@ GenerateDruuge_generatePlanets (SOLARSYS
 	++solarSys->SunDesc[0].NumPlanets;
 
 	solarSys->PlanetDesc[0].data_index = DUST_WORLD;
+	solarSys->PlanetDesc[0].alternate_colormap = NULL;
 	solarSys->PlanetDesc[0].radius = EARTH_RADIUS * 50L / 100;
 	solarSys->PlanetDesc[0].NumPlanets = 0;
 	angle = HALF_CIRCLE - OCTANT;
@@ -79,6 +80,7 @@ GenerateDruuge_generatePlanets (SOLARSYS
 	solarSys->PlanetDesc[0].rand_seed = MAKE_DWORD (
 			solarSys->PlanetDesc[0].location.x,
 			solarSys->PlanetDesc[0].location.y);
+	ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 
 	return true;
 }
diff -ruNp src.orig/uqm/planets/generate/genilw.c src/uqm/planets/generate/genilw.c
--- src.orig/uqm/planets/generate/genilw.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genilw.c	2017-10-26 12:00:18 -0700
@@ -69,6 +69,7 @@ GenerateIlwrath_generatePlanets (SOLARSY
 			COSINE (angle, solarSys->PlanetDesc[0].radius);
 	solarSys->PlanetDesc[0].location.y =
 			SINE (angle, solarSys->PlanetDesc[0].radius);
+	ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 
 	return true;
 }
diff -ruNp src.orig/uqm/planets/generate/genmyc.c src/uqm/planets/generate/genmyc.c
--- src.orig/uqm/planets/generate/genmyc.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genmyc.c	2017-10-26 12:00:19 -0700
@@ -77,6 +77,7 @@ GenerateMycon_generatePlanets (SOLARSYS_
 			COSINE (angle, solarSys->PlanetDesc[0].radius);
 	solarSys->PlanetDesc[0].location.y =
 			SINE (angle, solarSys->PlanetDesc[0].radius);
+	ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 
 	return true;
 }
diff -ruNp src.orig/uqm/planets/generate/genorz.c src/uqm/planets/generate/genorz.c
--- src.orig/uqm/planets/generate/genorz.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genorz.c	2017-10-26 12:00:19 -0700
@@ -66,6 +66,7 @@ GenerateOrz_generatePlanets (SOLARSYS_ST
 	if (CurStarDescPtr->Index == ORZ_DEFINED)
 	{
 		solarSys->PlanetDesc[0].data_index = WATER_WORLD;
+		solarSys->PlanetDesc[0].alternate_colormap = NULL;
 		solarSys->PlanetDesc[0].radius = EARTH_RADIUS * 156L / 100;
 		solarSys->PlanetDesc[0].NumPlanets = 0;
 		angle = ARCTAN (solarSys->PlanetDesc[0].location.x,
@@ -74,6 +75,7 @@ GenerateOrz_generatePlanets (SOLARSYS_ST
 				COSINE (angle, solarSys->PlanetDesc[0].radius);
 		solarSys->PlanetDesc[0].location.y =
 				SINE (angle, solarSys->PlanetDesc[0].radius);
+		ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 	}
 
 	return true;
diff -ruNp src.orig/uqm/planets/generate/genpet.c src/uqm/planets/generate/genpet.c
--- src.orig/uqm/planets/generate/genpet.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genpet.c	2017-10-26 12:00:19 -0700
@@ -72,6 +72,7 @@ GenerateTalkingPet_generatePlanets (SOLA
 			COSINE (angle, solarSys->PlanetDesc[0].radius);
 	solarSys->PlanetDesc[0].location.y =
 			SINE (angle, solarSys->PlanetDesc[0].radius);
+	ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 
 	return true;
 }
diff -ruNp src.orig/uqm/planets/generate/genpku.c src/uqm/planets/generate/genpku.c
--- src.orig/uqm/planets/generate/genpku.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genpku.c	2017-10-26 12:00:19 -0700
@@ -62,6 +62,7 @@ GeneratePkunk_generatePlanets (SOLARSYS_
 	GenerateDefault_generatePlanets (solarSys);
 
 	solarSys->PlanetDesc[0].data_index = WATER_WORLD;
+	solarSys->PlanetDesc[0].alternate_colormap = NULL;
 	solarSys->PlanetDesc[0].NumPlanets = 1;
 	solarSys->PlanetDesc[0].radius = EARTH_RADIUS * 104L / 100;
 	angle = ARCTAN (solarSys->PlanetDesc[0].location.x,
@@ -70,6 +71,7 @@ GeneratePkunk_generatePlanets (SOLARSYS_
 			COSINE (angle, solarSys->PlanetDesc[0].radius);
 	solarSys->PlanetDesc[0].location.y =
 			SINE (angle, solarSys->PlanetDesc[0].radius);
+	ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 
 	return true;
 }
diff -ruNp src.orig/uqm/planets/generate/genrain.c src/uqm/planets/generate/genrain.c
--- src.orig/uqm/planets/generate/genrain.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genrain.c	2017-10-26 12:00:19 -0700
@@ -53,6 +53,7 @@ GenerateRainbowWorld_generatePlanets (SO
 	GenerateDefault_generatePlanets (solarSys);
 
 	solarSys->PlanetDesc[0].data_index = RAINBOW_WORLD;
+	solarSys->PlanetDesc[0].alternate_colormap = NULL;
 	solarSys->PlanetDesc[0].NumPlanets = 0;
 	solarSys->PlanetDesc[0].radius = EARTH_RADIUS * 50L / 100;
 	angle = ARCTAN (solarSys->PlanetDesc[0].location.x,
@@ -65,6 +66,7 @@ GenerateRainbowWorld_generatePlanets (SO
 			COSINE (angle, solarSys->PlanetDesc[0].radius);
 	solarSys->PlanetDesc[0].location.y =
 			SINE (angle, solarSys->PlanetDesc[0].radius);
+	ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 
 	return true;
 }
diff -ruNp src.orig/uqm/planets/generate/gensam.c src/uqm/planets/generate/gensam.c
--- src.orig/uqm/planets/generate/gensam.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/gensam.c	2017-10-26 12:00:19 -0700
@@ -156,6 +156,7 @@ GenerateSaMatra_generateMoons (SOLARSYS_
 				COSINE (angle, solarSys->MoonDesc[0].radius);
 		solarSys->MoonDesc[0].location.y =
 				SINE (angle, solarSys->MoonDesc[0].radius);
+		ComputeSpeed(&solarSys->MoonDesc[0], TRUE, 1);
 	}
 
 	return true;
diff -ruNp src.orig/uqm/planets/generate/gensly.c src/uqm/planets/generate/gensly.c
--- src.orig/uqm/planets/generate/gensly.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/gensly.c	2017-10-26 12:00:19 -0700
@@ -49,6 +49,7 @@ GenerateSlylandro_generatePlanets (SOLAR
 	GenerateDefault_generatePlanets (solarSys);
 
 	solarSys->PlanetDesc[3].data_index = RED_GAS_GIANT;
+	solarSys->PlanetDesc[3].alternate_colormap = NULL;
 	solarSys->PlanetDesc[3].NumPlanets = 1;
 
 	return true;
diff -ruNp src.orig/uqm/planets/generate/gensol.c src/uqm/planets/generate/gensol.c
--- src.orig/uqm/planets/generate/gensol.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/gensol.c	2017-10-26 12:00:19 -0700
@@ -28,7 +28,9 @@
 #include "../../nameref.h"
 #include "../../state.h"
 #include "libs/mathlib.h"
+#include "options.h"
 
+#include <math.h>
 
 static bool GenerateSol_initNpcs (SOLARSYS_STATE *solarSys);
 static bool GenerateSol_reinitNpcs (SOLARSYS_STATE *solarSys);
@@ -113,68 +115,77 @@ GenerateSol_generatePlanets (SOLARSYS_ST
 	solarSys->SunDesc[0].NumPlanets = 9;
 	for (planetI = 0; planetI < 9; ++planetI)
 	{
-		COUNT angle;
 		DWORD rand_val;
 		UWORD word_val;
 		PLANET_DESC *pCurDesc = &solarSys->PlanetDesc[planetI];
 
 		pCurDesc->rand_seed = rand_val = TFB_Random ();
 		word_val = LOWORD (rand_val);
-		angle = NORMALIZE_ANGLE ((COUNT)HIBYTE (word_val));
+		pCurDesc->angle = NORMALIZE_ANGLE ((COUNT)HIBYTE (word_val));
 
 		switch (planetI)
 		{
 			case 0: /* MERCURY */
 				pCurDesc->data_index = METAL_WORLD;
+				pCurDesc->alternate_colormap = MERCURY_COLOR_TAB;
 				pCurDesc->radius = EARTH_RADIUS * 39L / 100;
 				pCurDesc->NumPlanets = 0;
 				break;
 			case 1: /* VENUS */
 				pCurDesc->data_index = PRIMORDIAL_WORLD;
+				pCurDesc->alternate_colormap = VENUS_COLOR_TAB;
 				pCurDesc->radius = EARTH_RADIUS * 72L / 100;
 				pCurDesc->NumPlanets = 0;
-				angle = NORMALIZE_ANGLE (FULL_CIRCLE - angle);
+				pCurDesc->angle = NORMALIZE_ANGLE (FULL_CIRCLE - pCurDesc->angle);
 				break;
 			case 2: /* EARTH */
-				pCurDesc->data_index = WATER_WORLD | PLANET_SHIELDED;
+				pCurDesc->data_index = WATER_WORLD | PLANET_SHIELDED; // EARTH_WORLD
+				pCurDesc->alternate_colormap = NULL;
 				pCurDesc->radius = EARTH_RADIUS;
 				pCurDesc->NumPlanets = 2;
 				break;
 			case 3: /* MARS */
 				pCurDesc->data_index = DUST_WORLD;
+				pCurDesc->alternate_colormap = MARS_COLOR_TAB;
 				pCurDesc->radius = EARTH_RADIUS * 152L / 100;
 				pCurDesc->NumPlanets = 0;
 				break;
 			case 4: /* JUPITER */
 				pCurDesc->data_index = RED_GAS_GIANT;
+				pCurDesc->alternate_colormap = JUPITER_COLOR_TAB;
 				pCurDesc->radius = EARTH_RADIUS * 500L /* 520L */ / 100;
 				pCurDesc->NumPlanets = 4;
 				break;
 			case 5: /* SATURN */
 				pCurDesc->data_index = ORA_GAS_GIANT;
+				pCurDesc->alternate_colormap = SATURN_COLOR_TAB;
 				pCurDesc->radius = EARTH_RADIUS * 750L /* 952L */ / 100;
 				pCurDesc->NumPlanets = 1;
 				break;
 			case 6: /* URANUS */
 				pCurDesc->data_index = GRN_GAS_GIANT;
+				pCurDesc->alternate_colormap = URANUS_COLOR_TAB;
 				pCurDesc->radius = EARTH_RADIUS * 1000L /* 1916L */ / 100;
 				pCurDesc->NumPlanets = 0;
 				break;
 			case 7: /* NEPTUNE */
 				pCurDesc->data_index = BLU_GAS_GIANT;
+				pCurDesc->alternate_colormap = NEPTUNE_COLOR_TAB;
 				pCurDesc->radius = EARTH_RADIUS * 1250L /* 2999L */ / 100;
 				pCurDesc->NumPlanets = 1;
 				break;
 			case 8: /* PLUTO */
 				pCurDesc->data_index = PELLUCID_WORLD;
+				pCurDesc->alternate_colormap = PLUTO_COLOR_TAB;
 				pCurDesc->radius = EARTH_RADIUS * 1550L /* 3937L */ / 100;
 				pCurDesc->NumPlanets = 0;
-				angle = FULL_CIRCLE - OCTANT;
+				pCurDesc->angle = FULL_CIRCLE - OCTANT;
 				break;
 		}
 
-		pCurDesc->location.x = COSINE (angle, pCurDesc->radius);
-		pCurDesc->location.y = SINE (angle, pCurDesc->radius);
+		pCurDesc->orb_speed = FULL_CIRCLE / (365.25 * pow((float)pCurDesc->radius / EARTH_RADIUS, 1.5));
+		pCurDesc->location.x = COSINE (pCurDesc->angle, pCurDesc->radius);
+		pCurDesc->location.y = SINE (pCurDesc->angle, pCurDesc->radius);
 	}
 
 	return true;
@@ -203,9 +214,11 @@ GenerateSol_generateMoons (SOLARSYS_STAT
 					COSINE (angle, solarSys->MoonDesc[0].radius);
 			solarSys->MoonDesc[0].location.y =
 					SINE (angle, solarSys->MoonDesc[0].radius);
+			solarSys->MoonDesc[0].orb_speed = FULL_CIRCLE / 11.46;
 
 			/* Luna: */
 			solarSys->MoonDesc[1].data_index = SELENIC_WORLD;
+			solarSys->MoonDesc[1].alternate_colormap = LUNA_COLOR_TAB;
 			solarSys->MoonDesc[1].radius = MIN_MOON_RADIUS
 					+ (MAX_MOONS - 1) * MOON_DELTA;
 			rand_val = TFB_Random ();
@@ -214,24 +227,39 @@ GenerateSol_generateMoons (SOLARSYS_STAT
 					COSINE (angle, solarSys->MoonDesc[1].radius);
 			solarSys->MoonDesc[1].location.y =
 					SINE (angle, solarSys->MoonDesc[1].radius);
+			solarSys->MoonDesc[1].orb_speed = FULL_CIRCLE / 29;
 			break;
 		}
 		case 4: /* moons of JUPITER */
 			solarSys->MoonDesc[0].data_index = RADIOACTIVE_WORLD;
+			solarSys->MoonDesc[0].alternate_colormap = IO_COLOR_TAB;
+			solarSys->MoonDesc[0].orb_speed = FULL_CIRCLE / 1.77;
 					/* Io */
 			solarSys->MoonDesc[1].data_index = HALIDE_WORLD;
+			solarSys->MoonDesc[1].alternate_colormap = EUROPA_COLOR_TAB;
+			solarSys->MoonDesc[1].orb_speed = FULL_CIRCLE / 3.55;
 					/* Europa */
 			solarSys->MoonDesc[2].data_index = CYANIC_WORLD;
+			solarSys->MoonDesc[2].alternate_colormap = GANYMEDE_COLOR_TAB;
+			solarSys->MoonDesc[2].orb_speed = FULL_CIRCLE / 7.16;
 					/* Ganymede */
 			solarSys->MoonDesc[3].data_index = PELLUCID_WORLD;
+			solarSys->MoonDesc[3].alternate_colormap = CALLISTO_COLOR_TAB;
+			solarSys->MoonDesc[3].orb_speed = FULL_CIRCLE / 16.69;
 					/* Callisto */
 			break;
 		case 5: /* moons of SATURN */
 			solarSys->MoonDesc[0].data_index = ALKALI_WORLD;
+			solarSys->MoonDesc[0].alternate_colormap = TITAN_COLOR_TAB;
+			solarSys->MoonDesc[0].radius = MIN_MOON_RADIUS
+					+ (MAX_MOONS - 1) * MOON_DELTA;
+			solarSys->MoonDesc[0].orb_speed = FULL_CIRCLE / 15.95;
 					/* Titan */
 			break;
 		case 7: /* moons of NEPTUNE */
 			solarSys->MoonDesc[0].data_index = VINYLOGOUS_WORLD;
+			solarSys->MoonDesc[0].alternate_colormap = TRITON_COLOR_TAB;
+			solarSys->MoonDesc[0].orb_speed = FULL_CIRCLE / -5.88;
 					/* Triton */
 			break;
 	}
@@ -407,8 +435,40 @@ GenerateSol_generateOrbital (SOLARSYS_ST
 		solarSys->SysInfo.PlanetInfo.SurfaceGravity =
 				CalcGravity (solarSys->SysInfo.PlanetInfo.PlanetDensity,
 				solarSys->SysInfo.PlanetInfo.PlanetRadius);
-		LoadPlanet (planetNr == 2 ?
-				CaptureDrawable (LoadGraphic (EARTH_MASK_ANIM)) : NULL);
+
+		switch (planetNr)
+			{
+			case 0: /* MERCURY */
+				LoadPlanet (CaptureDrawable (LoadGraphic (MERCURY_MASK_ANIM)));
+				break;
+			case 1: /* VENUS */
+				LoadPlanet (CaptureDrawable (LoadGraphic (VENUS_MASK_ANIM)));
+				break;
+			case 2: /* EARTH */
+				LoadPlanet (CaptureDrawable (LoadGraphic (EARTH_MASK_ANIM)));
+				break;
+			case 3: /* MARS */
+				LoadPlanet (CaptureDrawable (LoadGraphic (MARS_MASK_ANIM)));
+				break;
+			case 4: /* JUPITER*/
+				LoadPlanet (CaptureDrawable (LoadGraphic (JUPITER_MASK_ANIM)));
+				break;
+			case 5: /* SATURN*/
+				LoadPlanet (CaptureDrawable (LoadGraphic (SATURN_MASK_ANIM)));
+				break;
+			case 6: /* URANUS */
+				LoadPlanet (CaptureDrawable (LoadGraphic (URANUS_MASK_ANIM)));
+				break;
+			case 7: /* NEPTUNE */
+				LoadPlanet (CaptureDrawable (LoadGraphic (NEPTUNE_MASK_ANIM)));
+				break;
+			case 8: /* PLUTO */
+				LoadPlanet (CaptureDrawable (LoadGraphic (PLUTO_MASK_ANIM)));
+				break;
+			default:
+				LoadPlanet (NULL);
+				break;
+			}
 	}
 	else
 	{
@@ -507,7 +567,40 @@ GenerateSol_generateOrbital (SOLARSYS_ST
 		solarSys->SysInfo.PlanetInfo.SurfaceGravity =
 				CalcGravity (solarSys->SysInfo.PlanetInfo.PlanetDensity,
 				solarSys->SysInfo.PlanetInfo.PlanetRadius);
-		LoadPlanet (NULL);
+		
+		switch (planetNr)
+			{
+			case 2: /* moons of EARTH */
+				if (moonNr == 1)
+					LoadPlanet (CaptureDrawable (LoadGraphic (LUNA_MASK_ANIM)));
+				else
+					LoadPlanet (NULL);
+				break;
+			case 4: /* moons of JUPITER */
+				switch (moonNr)
+				{
+					case 0: /* Io */
+						LoadPlanet (CaptureDrawable (LoadGraphic (IO_MASK_ANIM)));
+						break;
+					case 1: /* Europa */
+						LoadPlanet (CaptureDrawable (LoadGraphic (EUROPA_MASK_ANIM)));
+						break;
+					case 2: /* Ganymede */
+						LoadPlanet (CaptureDrawable (LoadGraphic (GANYMEDE_MASK_ANIM)));
+						break;
+					case 3: /* Callisto */
+						LoadPlanet (CaptureDrawable (LoadGraphic (CALLISTO_MASK_ANIM)));
+						break;
+				}
+				break;
+			case 5: /* moon of Saturn: Titan */
+				LoadPlanet (CaptureDrawable (LoadGraphic (TITAN_MASK_ANIM)));
+				break;
+			case 7: /* moon of NEPTUNE: Triton */
+			default:
+				LoadPlanet (CaptureDrawable (LoadGraphic (TRITON_MASK_ANIM)));
+				break;
+			}
 	}
 
 	return true;
@@ -617,8 +710,7 @@ init_probe (void)
 
 	if (!GET_GAME_STATE (PROBE_MESSAGE_DELIVERED)
 			&& GetGroupInfo (GLOBAL (BattleGroupRef), GROUP_INIT_IP)
-			&& (hGroup = GetHeadLink (&GLOBAL (ip_group_q))))
-	{
+			&& (hGroup = GetHeadLink (&GLOBAL (ip_group_q)))) {
 		IP_GROUP *GroupPtr;
 
 		GroupPtr = LockIpGroup (&GLOBAL (ip_group_q), hGroup);
@@ -631,9 +723,9 @@ init_probe (void)
 		UnlockIpGroup (&GLOBAL (ip_group_q), hGroup);
 
 		return 1;
-	}
-	else
+	} else {
 		return 0;
+	}
 }
 
 static void
diff -ruNp src.orig/uqm/planets/generate/genspa.c src/uqm/planets/generate/genspa.c
--- src.orig/uqm/planets/generate/genspa.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genspa.c	2017-10-26 12:00:19 -0700
@@ -78,10 +78,11 @@ GenerateSpathi_generatePlanets (SOLARSYS
 	pMinPlanet->location.x = COSINE (angle, pMinPlanet->radius);
 	pMinPlanet->location.y = SINE (angle, pMinPlanet->radius);
 	pMinPlanet->data_index = WATER_WORLD;
+	pMinPlanet->alternate_colormap = NULL;
 	if (GET_GAME_STATE (SPATHI_SHIELDED_SELVES))
 		pMinPlanet->data_index |= PLANET_SHIELDED;
 	pMinPlanet->NumPlanets = 1;
-
+	ComputeSpeed(pMinPlanet, FALSE, 1);
 	return true;
 }
 
@@ -101,12 +102,14 @@ GenerateSpathi_generateMoons (SOLARSYS_S
 #endif /* NOTYET */
 
 		solarSys->MoonDesc[0].data_index = PELLUCID_WORLD;
+		solarSys->MoonDesc[0].alternate_colormap = NULL;
 		solarSys->MoonDesc[0].radius = MIN_MOON_RADIUS + MOON_DELTA;
 		angle = NORMALIZE_ANGLE (LOWORD (TFB_Random ()));
 		solarSys->MoonDesc[0].location.x =
 				COSINE (angle, solarSys->MoonDesc[0].radius);
 		solarSys->MoonDesc[0].location.y =
 				SINE (angle, solarSys->MoonDesc[0].radius);
+		ComputeSpeed(&solarSys->MoonDesc[0], TRUE, 1);
 	}
 
 	return true;
diff -ruNp src.orig/uqm/planets/generate/gensup.c src/uqm/planets/generate/gensup.c
--- src.orig/uqm/planets/generate/gensup.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/gensup.c	2017-10-26 12:00:19 -0700
@@ -62,6 +62,7 @@ GenerateSupox_generatePlanets (SOLARSYS_
 	GenerateDefault_generatePlanets (solarSys);
 
 	solarSys->PlanetDesc[0].data_index = WATER_WORLD;
+	solarSys->PlanetDesc[0].alternate_colormap = NULL;
 	solarSys->PlanetDesc[0].NumPlanets = 2;
 	solarSys->PlanetDesc[0].radius = EARTH_RADIUS * 152L / 100;
 	angle = ARCTAN (solarSys->PlanetDesc[0].location.x,
@@ -70,6 +71,7 @@ GenerateSupox_generatePlanets (SOLARSYS_
 			COSINE (angle, solarSys->PlanetDesc[0].radius);
 	solarSys->PlanetDesc[0].location.y =
 			SINE (angle, solarSys->PlanetDesc[0].radius);
+	ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 
 	return true;
 }
diff -ruNp src.orig/uqm/planets/generate/gensyr.c src/uqm/planets/generate/gensyr.c
--- src.orig/uqm/planets/generate/gensyr.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/gensyr.c	2017-10-26 12:00:19 -0700
@@ -50,6 +50,7 @@ GenerateSyreen_generatePlanets (SOLARSYS
 	GenerateDefault_generatePlanets (solarSys);
 
 	solarSys->PlanetDesc[0].data_index = WATER_WORLD | PLANET_SHIELDED;
+	solarSys->PlanetDesc[0].alternate_colormap = NULL;
 	solarSys->PlanetDesc[0].NumPlanets = 1;
 
 	return true;
@@ -63,11 +64,13 @@ GenerateSyreen_generateMoons (SOLARSYS_S
 	if (matchWorld (solarSys, planet, 0, MATCH_PLANET))
 	{
 		solarSys->MoonDesc[0].data_index = HIERARCHY_STARBASE;
+		solarSys->MoonDesc[0].alternate_colormap = NULL;
 		solarSys->MoonDesc[0].radius = MIN_MOON_RADIUS;
 		solarSys->MoonDesc[0].location.x =
 				COSINE (QUADRANT, solarSys->MoonDesc[0].radius);
 		solarSys->MoonDesc[0].location.y =
 				SINE (QUADRANT, solarSys->MoonDesc[0].radius);
+		ComputeSpeed(&solarSys->MoonDesc[0], TRUE, 1);
 	}
 
 	return true;
diff -ruNp src.orig/uqm/planets/generate/genthrad.c src/uqm/planets/generate/genthrad.c
--- src.orig/uqm/planets/generate/genthrad.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genthrad.c	2017-10-26 12:00:19 -0700
@@ -66,6 +66,7 @@ GenerateThraddash_generatePlanets (SOLAR
 	if (CurStarDescPtr->Index == AQUA_HELIX_DEFINED)
 	{
 		solarSys->PlanetDesc[0].data_index = PRIMORDIAL_WORLD;
+		solarSys->PlanetDesc[0].alternate_colormap = NULL;
 		solarSys->PlanetDesc[0].radius = EARTH_RADIUS * 65L / 100;
 		angle = ARCTAN (solarSys->PlanetDesc[0].location.x,
 				solarSys->PlanetDesc[0].location.y);
@@ -73,10 +74,12 @@ GenerateThraddash_generatePlanets (SOLAR
 				COSINE (angle, solarSys->PlanetDesc[0].radius);
 		solarSys->PlanetDesc[0].location.y =
 				SINE (angle, solarSys->PlanetDesc[0].radius);
+		ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 	}
 	else  /* CurStarDescPtr->Index == THRADD_DEFINED */
 	{
 		solarSys->PlanetDesc[0].data_index = WATER_WORLD;
+		solarSys->PlanetDesc[0].alternate_colormap = NULL;
 		solarSys->PlanetDesc[0].NumPlanets = 0;
 		solarSys->PlanetDesc[0].radius = EARTH_RADIUS * 98L / 100;
 		angle = ARCTAN (solarSys->PlanetDesc[0].location.x,
@@ -85,6 +88,7 @@ GenerateThraddash_generatePlanets (SOLAR
 				COSINE (angle, solarSys->PlanetDesc[0].radius);
 		solarSys->PlanetDesc[0].location.y =
 				SINE (angle, solarSys->PlanetDesc[0].radius);
+		ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 	}
 	return true;
 }
diff -ruNp src.orig/uqm/planets/generate/gentrap.c src/uqm/planets/generate/gentrap.c
--- src.orig/uqm/planets/generate/gentrap.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/gentrap.c	2017-10-26 12:00:19 -0700
@@ -50,6 +50,7 @@ GenerateTrap_generatePlanets (SOLARSYS_S
 	GenerateDefault_generatePlanets (solarSys);
 
 	solarSys->PlanetDesc[0].data_index = TELLURIC_WORLD;
+	solarSys->PlanetDesc[0].alternate_colormap = NULL;
 	solarSys->PlanetDesc[0].NumPlanets = 1;
 	solarSys->PlanetDesc[0].radius = EARTH_RADIUS * 203L / 100;
 	angle = ARCTAN (solarSys->PlanetDesc[0].location.x,
@@ -58,6 +59,7 @@ GenerateTrap_generatePlanets (SOLARSYS_S
 			COSINE (angle, solarSys->PlanetDesc[0].radius);
 	solarSys->PlanetDesc[0].location.y =
 			SINE (angle, solarSys->PlanetDesc[0].radius);
+	ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 
 	return true;
 }
diff -ruNp src.orig/uqm/planets/generate/genutw.c src/uqm/planets/generate/genutw.c
--- src.orig/uqm/planets/generate/genutw.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genutw.c	2017-10-26 12:00:19 -0700
@@ -84,6 +84,7 @@ GenerateUtwig_generatePlanets (SOLARSYS_
 	if (CurStarDescPtr->Index == UTWIG_DEFINED)
 	{
 		solarSys->PlanetDesc[0].data_index = WATER_WORLD;
+		solarSys->PlanetDesc[0].alternate_colormap = NULL;
 		solarSys->PlanetDesc[0].NumPlanets = 1;
 		solarSys->PlanetDesc[0].radius = EARTH_RADIUS * 174L / 100;
 		angle = ARCTAN (solarSys->PlanetDesc[0].location.x,
@@ -92,6 +93,7 @@ GenerateUtwig_generatePlanets (SOLARSYS_
 				COSINE (angle, solarSys->PlanetDesc[0].radius);
 		solarSys->PlanetDesc[0].location.y =
 				SINE (angle, solarSys->PlanetDesc[0].radius);
+		ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 	}
 
 	return true;
diff -ruNp src.orig/uqm/planets/generate/genvux.c src/uqm/planets/generate/genvux.c
--- src.orig/uqm/planets/generate/genvux.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genvux.c	2017-10-26 12:00:19 -0700
@@ -76,6 +76,7 @@ GenerateVux_generatePlanets (SOLARSYS_ST
 				// called. Is it safe to remove one, or does this change
 				// the RNG so that the outcome is different?
 		solarSys->PlanetDesc[0].data_index = REDUX_WORLD;
+		solarSys->PlanetDesc[0].alternate_colormap = NULL;
 		solarSys->PlanetDesc[0].radius = EARTH_RADIUS * 212L / 100;
 		angle = ARCTAN (solarSys->PlanetDesc[0].location.x,
 				solarSys->PlanetDesc[0].location.y);
@@ -83,15 +84,18 @@ GenerateVux_generatePlanets (SOLARSYS_ST
 				COSINE (angle, solarSys->PlanetDesc[0].radius);
 		solarSys->PlanetDesc[0].location.y =
 				SINE (angle, solarSys->PlanetDesc[0].radius);
+		ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 	}
 	else
 	{
 		if (CurStarDescPtr->Index == VUX_DEFINED)
 		{
 			solarSys->PlanetDesc[0].data_index = REDUX_WORLD;
+			solarSys->PlanetDesc[0].alternate_colormap = NULL;
 			solarSys->PlanetDesc[0].NumPlanets = 1;
 			solarSys->PlanetDesc[0].radius = EARTH_RADIUS * 42L / 100;
 			angle = HALF_CIRCLE + OCTANT;
+			ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 		}
 		else /* if (CurStarDescPtr->Index == VUX_BEAST_DEFINED) */
 		{
@@ -102,8 +106,10 @@ GenerateVux_generatePlanets (SOLARSYS_ST
 
 			angle = HALF_CIRCLE - OCTANT;
 			solarSys->PlanetDesc[0].data_index = WATER_WORLD;
+			solarSys->PlanetDesc[0].alternate_colormap = NULL;
 			solarSys->PlanetDesc[0].radius = EARTH_RADIUS * 110L / 100;
 			solarSys->PlanetDesc[0].NumPlanets = 0;
+			ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 		}
 
 		solarSys->PlanetDesc[0].location.x =
diff -ruNp src.orig/uqm/planets/generate/genyeh.c src/uqm/planets/generate/genyeh.c
--- src.orig/uqm/planets/generate/genyeh.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genyeh.c	2017-10-26 12:00:19 -0700
@@ -68,6 +68,7 @@ GenerateYehat_generatePlanets (SOLARSYS_
 			COSINE (angle, solarSys->PlanetDesc[0].radius);
 	solarSys->PlanetDesc[0].location.y =
 			SINE (angle, solarSys->PlanetDesc[0].radius);
+	ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 
 	return true;
 }
diff -ruNp src.orig/uqm/planets/generate/genzoq.c src/uqm/planets/generate/genzoq.c
--- src.orig/uqm/planets/generate/genzoq.c	2017-10-26 12:00:00 -0700
+++ src/uqm/planets/generate/genzoq.c	2017-10-26 12:00:19 -0700
@@ -70,6 +70,7 @@ GenerateZoqFotPik_generatePlanets (SOLAR
 	GenerateDefault_generatePlanets (solarSys);
 
 	solarSys->PlanetDesc[0].data_index = REDUX_WORLD;
+	solarSys->PlanetDesc[0].alternate_colormap = NULL;
 	solarSys->PlanetDesc[0].NumPlanets = 1;
 	solarSys->PlanetDesc[0].radius = EARTH_RADIUS * 138L / 100;
 	angle = ARCTAN (solarSys->PlanetDesc[0].location.x,
@@ -78,6 +79,7 @@ GenerateZoqFotPik_generatePlanets (SOLAR
 			COSINE (angle, solarSys->PlanetDesc[0].radius);
 	solarSys->PlanetDesc[0].location.y =
 			SINE (angle, solarSys->PlanetDesc[0].radius);
+	ComputeSpeed(&solarSys->PlanetDesc[0], FALSE, 1);
 
 	return true;
 }
